{"version":3,"file":"clustergrammer.js","sources":["webpack:///webpack/bootstrap 4ce40587c0a629c275c1","webpack:///src/main.js","webpack:///src/make_config.js","webpack:///src/Utils_clust.js","webpack:///src/network/transpose_network.js","webpack:///src/params/get_available_filters.js","webpack:///node_modules/underscore/cjs/each.js","webpack:///node_modules/underscore/cjs/_optimizeCb.js","webpack:///node_modules/underscore/cjs/_isArrayLike.js","webpack:///node_modules/underscore/cjs/_createSizePropertyCheck.js","webpack:///node_modules/underscore/cjs/_setup.js","webpack:///node_modules/underscore/cjs/_getLength.js","webpack:///node_modules/underscore/cjs/_shallowProperty.js","webpack:///node_modules/underscore/cjs/keys.js","webpack:///node_modules/underscore/cjs/isObject.js","webpack:///node_modules/underscore/cjs/_has.js","webpack:///node_modules/underscore/cjs/_collectNonEnumProps.js","webpack:///node_modules/underscore/cjs/isFunction.js","webpack:///node_modules/underscore/cjs/_tagTester.js","webpack:///src/filters/get_filter_default_state.js","webpack:///src/config/set_defaults.js","webpack:///src/config/check_sim_mat.js","webpack:///src/config/check_nodes_for_categories.js","webpack:///src/params/make_params.js","webpack:///src/network/make_network_using_view.js","webpack:///src/network/filter_network_using_new_nodes.js","webpack:///node_modules/mathjs/core.js","webpack:///node_modules/mathjs/lib/core/core.js","webpack:///node_modules/mathjs/lib/utils/object.js","webpack:///node_modules/mathjs/lib/utils/bignumber/isBigNumber.js","webpack:///node_modules/mathjs/lib/core/typed.js","webpack:///node_modules/typed-function/typed-function.js","webpack:///node_modules/mathjs/lib/utils/number.js","webpack:///node_modules/mathjs/lib/utils/collection/isMatrix.js","webpack:///node_modules/mathjs/lib/utils/emitter.js","webpack:///node_modules/tiny-emitter/index.js","webpack:///node_modules/mathjs/lib/core/function/import.js","webpack:///node_modules/mathjs/lib/error/ArgumentsError.js","webpack:///node_modules/mathjs/lib/core/function/config.js","webpack:///node_modules/mathjs/lib/type/matrix/index.js","webpack:///node_modules/mathjs/lib/type/matrix/Matrix.js","webpack:///node_modules/mathjs/lib/utils/index.js","webpack:///node_modules/mathjs/lib/utils/array.js","webpack:///node_modules/mathjs/lib/utils/string.js","webpack:///node_modules/mathjs/lib/utils/bignumber/formatter.js","webpack:///node_modules/mathjs/lib/utils/types.js","webpack:///node_modules/mathjs/lib/error/DimensionError.js","webpack:///node_modules/mathjs/lib/error/IndexError.js","webpack:///node_modules/mathjs/lib/utils/boolean.js","webpack:///node_modules/mathjs/lib/utils/function.js","webpack:///node_modules/mathjs/lib/type/matrix/DenseMatrix.js","webpack:///node_modules/mathjs/lib/utils/customs.js","webpack:///node_modules/mathjs/lib/type/matrix/SparseMatrix.js","webpack:///node_modules/mathjs/lib/function/relational/equalScalar.js","webpack:///node_modules/mathjs/lib/utils/bignumber/nearlyEqual.js","webpack:///node_modules/mathjs/lib/type/matrix/Spa.js","webpack:///node_modules/mathjs/lib/function/arithmetic/add.js","webpack:///node_modules/mathjs/lib/type/matrix/function/matrix.js","webpack:///node_modules/mathjs/lib/function/arithmetic/addScalar.js","webpack:///node_modules/mathjs/lib/utils/latex.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm01.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm04.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm10.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm13.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm14.js","webpack:///node_modules/mathjs/lib/type/matrix/FibonacciHeap.js","webpack:///node_modules/mathjs/lib/function/relational/smaller.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm03.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm07.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm12.js","webpack:///node_modules/mathjs/lib/function/relational/larger.js","webpack:///node_modules/mathjs/lib/type/matrix/ImmutableDenseMatrix.js","webpack:///node_modules/mathjs/lib/type/matrix/MatrixIndex.js","webpack:///node_modules/mathjs/lib/type/matrix/Range.js","webpack:///node_modules/mathjs/lib/type/matrix/function/index.js","webpack:///node_modules/mathjs/lib/type/matrix/function/sparse.js","webpack:///node_modules/mathjs/lib/function/matrix/zeros.js","webpack:///src/filters/get_subset_views.js","webpack:///node_modules/underscore/cjs/filter.js","webpack:///node_modules/underscore/cjs/_cb.js","webpack:///node_modules/underscore/cjs/underscore.js","webpack:///node_modules/underscore/cjs/_baseIteratee.js","webpack:///node_modules/underscore/cjs/identity.js","webpack:///node_modules/underscore/cjs/isArray.js","webpack:///node_modules/underscore/cjs/matcher.js","webpack:///node_modules/underscore/cjs/extendOwn.js","webpack:///node_modules/underscore/cjs/_createAssigner.js","webpack:///node_modules/underscore/cjs/isMatch.js","webpack:///node_modules/underscore/cjs/property.js","webpack:///node_modules/underscore/cjs/_deepGet.js","webpack:///node_modules/underscore/cjs/_toPath.js","webpack:///node_modules/underscore/cjs/toPath.js","webpack:///node_modules/underscore/cjs/iteratee.js","webpack:///src/filters/make_requested_view.js","webpack:///src/params/calc_viz_params.js","webpack:///src/params/ini_label_params.js","webpack:///node_modules/underscore/cjs/max.js","webpack:///node_modules/underscore/cjs/values.js","webpack:///src/set_viz_wrapper_size.js","webpack:///src/params/calc_viz_dimensions.js","webpack:///src/params/get_svg_dim.js","webpack:///src/params/calc_label_params.js","webpack:///src/params/calc_clust_width.js","webpack:///node_modules/underscore/cjs/range.js","webpack:///src/params/calc_clust_height.js","webpack:///src/params/calc_val_max.js","webpack:///src/params/calc_matrix_params.js","webpack:///src/params/ini_matrix_params.js","webpack:///src/initialize_matrix.js","webpack:///src/matrix/calc_downsampled_levels.js","webpack:///src/matrix/calc_downsampled_matrix.js","webpack:///external \"jquery\"","webpack:///src/params/set_zoom_params.js","webpack:///src/zoom/calc_zoom_switching.js","webpack:///src/params/calc_default_fs.js","webpack:///src/params/make_cat_params.js","webpack:///src/params/calc_cat_params.js","webpack:///src/Colors.js","webpack:///src/params/check_if_value_cats.js","webpack:///node_modules/underscore/cjs/countBy.js","webpack:///node_modules/underscore/cjs/_group.js","webpack:///src/zoom/ini_zoom_info.js","webpack:///src/make_viz.js","webpack:///src/matrix/index.js","webpack:///src/matrix/draw_gridlines.js","webpack:///src/matrix/add_click_hlight.js","webpack:///src/matrix/make_matrix_rows.js","webpack:///src/matrix/make_simple_rows.js","webpack:///src/enter/draw_up_tile.js","webpack:///src/enter/draw_dn_tile.js","webpack:///src/matrix/mouseover_tile.js","webpack:///src/matrix/mouseout_tile.js","webpack:///src/matrix/fine_position_tile.js","webpack:///src/tooltip/d3_tip_custom.js","webpack:///node_modules/underscore/cjs/contains.js","webpack:///node_modules/underscore/cjs/indexOf.js","webpack:///node_modules/underscore/cjs/sortedIndex.js","webpack:///node_modules/underscore/cjs/findIndex.js","webpack:///node_modules/underscore/cjs/_createPredicateIndexFinder.js","webpack:///node_modules/underscore/cjs/_createIndexFinder.js","webpack:///node_modules/underscore/cjs/isNaN.js","webpack:///node_modules/underscore/cjs/isNumber.js","webpack:///src/labels/make_row_label_container.js","webpack:///src/labels/make_row_labels.js","webpack:///src/labels/add_row_click_hlight.js","webpack:///src/reorder/row_reorder.js","webpack:///src/reorder/reposition_tile_highlight.js","webpack:///src/dendrogram/toggle_dendro_view.js","webpack:///src/dendrogram/make_dendro_triangles.js","webpack:///src/dendrogram/calc_row_dendro_triangles.js","webpack:///src/dendrogram/calc_col_dendro_triangles.js","webpack:///src/dendrogram/dendro_group_highlight.js","webpack:///src/dendrogram/dendro_shade_bars.js","webpack:///src/dendrogram/make_dendro_crop_buttons.js","webpack:///src/dendrogram/run_dendro_filter.js","webpack:///src/zoom/zoom_crop_triangles.js","webpack:///src/categories/make_cat_breakdown_graph.js","webpack:///src/categories/calc_cat_cluster_breakdown.js","webpack:///src/categories/binom_test.js","webpack:///src/categories/binom_prop_pval_lookup.js","webpack:///node_modules/mathjs/lib/function/probability/factorial.js","webpack:///node_modules/mathjs/lib/utils/collection/deepMap.js","webpack:///node_modules/mathjs/lib/function/probability/gamma.js","webpack:///node_modules/mathjs/lib/function/arithmetic/multiply.js","webpack:///node_modules/mathjs/lib/function/arithmetic/multiplyScalar.js","webpack:///node_modules/mathjs/lib/type/matrix/utils/algorithm11.js","webpack:///node_modules/mathjs/lib/function/arithmetic/pow.js","webpack:///node_modules/mathjs/lib/function/matrix/eye.js","webpack:///node_modules/mathjs/lib/type/fraction/function/fraction.js","webpack:///node_modules/mathjs/lib/type/number.js","webpack:///src/categories/cat_breakdown_bars.js","webpack:///src/categories/cat_breakdown_values.js","webpack:///src/zoom/get_previous_zoom.js","webpack:///src/labels/make_row_tooltips.js","webpack:///src/labels/make_col_label_container.js","webpack:///src/labels/add_col_click_hlight.js","webpack:///src/reorder/col_reorder.js","webpack:///src/zoom/show_visible_area.js","webpack:///src/zoom/find_viz_rows.js","webpack:///src/labels/make_row_visual_aid_triangles.js","webpack:///node_modules/underscore/cjs/difference.js","webpack:///node_modules/underscore/cjs/restArguments.js","webpack:///node_modules/underscore/cjs/_flatten.js","webpack:///node_modules/underscore/cjs/isArguments.js","webpack:///src/labels/make_col_tooltips.js","webpack:///src/labels/col_viz_aid_triangle.js","webpack:///src/labels/super_labels.js","webpack:///src/spillover/main_spillover.js","webpack:///src/categories/get_cat_title.js","webpack:///src/reorder/ini_cat_reorder.js","webpack:///src/reorder/all_reorder.js","webpack:///src/zoom/two_translate_zoom.js","webpack:///src/labels/label_constrain_and_trim.js","webpack:///src/zoom/trim_text.js","webpack:///src/zoom/constrain_font_size.js","webpack:///src/zoom/calc_real_font_size.js","webpack:///src/matrix/toggle_grid_lines.js","webpack:///src/labels/make_row_cat_super_labels.js","webpack:///src/initialize_resizing.js","webpack:///src/zoom/ini_doubleclick.js","webpack:///src/categories/make_col_cat.js","webpack:///src/categories/cat_tooltip_text.js","webpack:///src/categories/reset_cat_opacity.js","webpack:///src/categories/ini_cat_opacity.js","webpack:///src/categories/get_cat_names.js","webpack:///src/categories/make_row_cat.js","webpack:///src/dendrogram/make_row_dendro.js","webpack:///src/dendrogram/make_col_dendro.js","webpack:///src/dendrogram/build_dendro_sliders.js","webpack:///src/dendrogram/build_single_dendro_slider.js","webpack:///src/dendrogram/change_groups.js","webpack:///src/dendrogram/position_dendro_slider.js","webpack:///src/spillover/make_row_dendro_spillover.js","webpack:///src/reset_size/resize_viz.js","webpack:///src/zoom/run_zoom.js","webpack:///src/zoom/run_transformation.js","webpack:///src/zoom/resize_label_val_bars.js","webpack:///src/zoom/run_when_zoom_stopped.js","webpack:///src/zoom/num_visible_labels.js","webpack:///src/zoom/check_zoom_stop_status.js","webpack:///src/zoom/zoom_rules_y.js","webpack:///src/zoom/zoom_rules_x.js","webpack:///src/zoom/reset_zoom.js","webpack:///src/reset_size/resize_dendro.js","webpack:///src/reset_size/resize_super_labels.js","webpack:///src/reset_size/resize_spillover.js","webpack:///src/reset_size/resize_borders.js","webpack:///src/reset_size/resize_row_labels.js","webpack:///src/reset_size/resize_highlights.js","webpack:///src/reset_size/resize_row_viz.js","webpack:///src/reset_size/resize_col_labels.js","webpack:///src/reset_size/resize_col_text.js","webpack:///src/reset_size/resize_col_triangle.js","webpack:///src/reset_size/resize_col_hlight.js","webpack:///src/reset_size/recalc_params_for_resize.js","webpack:///src/reset_size/resize_row_tiles.js","webpack:///src/reset_size/resize_label_bars.js","webpack:///src/demo/position_play_button.js","webpack:///src/menus/position_tree_icon.js","webpack:///src/menus/position_filter_icon.js","webpack:///src/menus/position_tree_menu.js","webpack:///src/matrix/grid_lines_viz.js","webpack:///src/demo/play_demo.js","webpack:///src/demo/run_segment.js","webpack:///src/demo/play_intro.js","webpack:///src/demo/demo_text.js","webpack:///src/demo/play_zoom.js","webpack:///src/demo/play_reset_zoom.js","webpack:///src/demo/sim_click.js","webpack:///src/demo/play_reorder_row.js","webpack:///src/demo/play_reorder_buttons.js","webpack:///src/demo/highlight_sidebar_element.js","webpack:///src/demo/play_search.js","webpack:///src/demo/play_filter.js","webpack:///src/network/update_viz_with_view.js","webpack:///src/sidebar/disable_sidebar.js","webpack:///src/update/update_viz_with_network.js","webpack:///src/network/define_enter_exit_delays.js","webpack:///node_modules/underscore/cjs/map.js","webpack:///src/enter/enter_exit_update.js","webpack:///src/reset_size/reset_size_after_update.js","webpack:///src/enter/eeu_existing_row.js","webpack:///src/exit/exit_existing_row.js","webpack:///src/enter/enter_existing_row.js","webpack:///src/update/update_split_tiles.js","webpack:///src/exit/exit_components.js","webpack:///src/enter/enter_row_groups.js","webpack:///src/enter/enter_new_rows.js","webpack:///src/enter/enter_split_tiles.js","webpack:///src/reset_size/resize_containers.js","webpack:///src/sidebar/enable_sidebar.js","webpack:///src/reorder/update_reorder_buttons.js","webpack:///src/update/modify_row_node_cats.js","webpack:///src/update/remove_node_cats.js","webpack:///src/enter/ds_enter_exit_update.js","webpack:///src/demo/quick_cluster.js","webpack:///src/demo/play_groups.js","webpack:///src/demo/play_categories.js","webpack:///src/demo/play_conclusion.js","webpack:///src/demo/toggle_play_button.js","webpack:///src/demo/play_menu_button.js","webpack:///src/demo/ini_demo.js","webpack:///src/demo/make_play_button.js","webpack:///src/demo/make_demo_text_containers.js","webpack:///src/network/filter_viz_using_nodes.js","webpack:///src/network/filter_viz_using_names.js","webpack:///src/update/update_cats.js","webpack:///src/update/reset_cats.js","webpack:///src/update/generate_cat_data.js","webpack:///src/update/update_view.js","webpack:///src/filters/reset_other_filter_sliders.js","webpack:///src/filters/make_filter_title.js","webpack:///src/matrix/save_matrix.js","webpack:///src/screenshot/file_saver.js","webpack:///src/matrix/make_matrix_string.js","webpack:///src/matrix/make_full_name.js","webpack:///src/matrix/brush_crop_matrix.js","webpack:///src/matrix/deactivate_cropping.js","webpack:///external \"d3\"","webpack:///src/d3.slider/d3.slider.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4ce40587c0a629c275c1","var make_config = require('./make_config');\nvar make_params = require('./params/make_params');\nvar make_viz = require('./make_viz');\nvar resize_viz = require('./reset_size/resize_viz');\nvar play_demo = require('./demo/play_demo');\nvar ini_demo = require('./demo/ini_demo');\nvar filter_viz_using_nodes = require('./network/filter_viz_using_nodes');\nvar filter_viz_using_names = require('./network/filter_viz_using_names');\nvar update_cats = require('./update/update_cats');\nvar reset_cats = require('./update/reset_cats');\nvar two_translate_zoom = require('./zoom/two_translate_zoom');\nvar update_view = require('./update/update_view');\nvar save_matrix = require('./matrix/save_matrix');\nvar brush_crop_matrix = require('./matrix/brush_crop_matrix');\nvar run_zoom = require('./zoom/run_zoom');\nvar d3_tip_custom = require('./tooltip/d3_tip_custom');\nvar all_reorder = require('./reorder/all_reorder');\nvar make_matrix_string = require('./matrix/make_matrix_string');\nvar d3 = require('d3');\n// var jQuery = require('jquery');\n\n// moved d3.slider to src\nd3.slider = require('./d3.slider');\n\n/* eslint-disable */\n\n/* clustergrammer v1.19.5\n * Nicolas Fernandez, Ma'ayan Lab, Icahn School of Medicine at Mount Sinai\n * (c) 2017\n */\nfunction Clustergrammer(args) {\n  /* Main program\n   * ----------------------------------------------------------------------- */\n  // consume and validate user input\n  // build giant config object\n  // visualize based on config object\n  // handle user events\n\n  // consume and validate user arguments, produce configuration object\n  var config = make_config(args);\n\n  var cgm = {};\n\n  // make visualization parameters using configuration object\n  cgm.params = make_params(config);\n  cgm.config = config;\n\n  // set up zoom\n  cgm.params.zoom_behavior = d3.behavior\n    .zoom()\n    .scaleExtent([1, cgm.params.viz.square_zoom * cgm.params.viz.zoom_ratio.x])\n    .on('zoom', function () {\n      run_zoom(cgm);\n    });\n\n  cgm.params.zoom_behavior.translate([\n    cgm.params.viz.clust.margin.left,\n    cgm.params.viz.clust.margin.top\n  ]);\n\n  // customization\n  // if (cgm.params.use_sidebar) {\n  //   var make_sidebar = require(\"./sidebar/\");\n  //   make_sidebar(cgm);\n  // }\n\n  // make visualization using parameters\n  make_viz(cgm);\n\n  function external_resize() {\n    d3.select(cgm.params.viz.viz_svg).style('opacity', 0.5);\n\n    var wait_time = 500;\n    if (this.params.viz.run_trans === true) {\n      wait_time = 2500;\n    }\n\n    setTimeout(resize_fun, wait_time, this);\n  }\n\n  function resize_fun(cgm) {\n    resize_viz(cgm);\n  }\n\n  function run_update_cats(cat_data) {\n    update_cats(this, cat_data);\n  }\n\n  function zoom_api(pan_dx, pan_dy, fin_zoom) {\n    two_translate_zoom(this, pan_dx, pan_dy, fin_zoom);\n  }\n\n  function expose_d3_tip_custom() {\n    // this allows external modules to have access to d3_tip\n    return d3_tip_custom;\n  }\n\n  function api_reorder(inst_rc, inst_order) {\n    if (inst_order === 'sum') {\n      inst_order = 'rank';\n    }\n    if (inst_order === 'var') {\n      inst_order = 'rankvar';\n    }\n    all_reorder(this, inst_order, inst_rc);\n  }\n\n  function export_matrix_string() {\n    return make_matrix_string(this.params);\n  }\n\n  function external_update_view(filter_type, inst_state) {\n    update_view(this, filter_type, inst_state);\n  }\n\n  // add more API endpoints\n  cgm.update_view = update_view;\n  cgm.resize_viz = external_resize;\n  cgm.play_demo = play_demo;\n  cgm.ini_demo = ini_demo;\n  cgm.filter_viz_using_nodes = filter_viz_using_nodes;\n  cgm.filter_viz_using_names = filter_viz_using_names;\n  cgm.update_cats = run_update_cats;\n  cgm.reset_cats = reset_cats;\n  cgm.zoom = zoom_api;\n  cgm.save_matrix = save_matrix;\n  cgm.brush_crop_matrix = brush_crop_matrix;\n  cgm.d3_tip_custom = expose_d3_tip_custom;\n  cgm.reorder = api_reorder;\n  cgm.export_matrix_string = export_matrix_string;\n  cgm.update_view = external_update_view;\n\n  return cgm;\n}\n\nmodule.exports = Clustergrammer;\n\n\n\n// WEBPACK FOOTER //\n// src/main.js","var utils = require('./Utils_clust');\nvar transpose_network = require('./network/transpose_network');\nvar get_available_filters = require('./params/get_available_filters');\nvar get_filter_default_state = require('./filters/get_filter_default_state');\nvar set_defaults = require('./config/set_defaults');\nvar check_sim_mat = require('./config/check_sim_mat');\nvar check_nodes_for_categories = require('./config/check_nodes_for_categories');\n\nmodule.exports = function make_config(args) {\n  var defaults = set_defaults();\n\n  // Mixin defaults with user-defined arguments.\n  var config = utils.extend(defaults, args);\n\n  config.network_data = args.network_data;\n\n  var super_string = ': ';\n\n  // replace undersores with space in row/col names\n  ['row', 'col'].forEach(function (inst_rc) {\n    var inst_nodes = config.network_data[inst_rc + '_nodes'] || [];\n\n    var has_cats = check_nodes_for_categories(inst_nodes);\n\n    inst_nodes.forEach(function (d, i) {\n      // add index to row_nodes and col_nodes\n      d[inst_rc + '_index'] = i;\n\n      if (has_cats) {\n        config.super_labels = true;\n        config.super[inst_rc] = d.name.split(super_string)[0];\n        d.name = d.name.split(super_string)[1];\n      }\n\n      d.name = String(d.name);\n\n      d.name = d.name.replace(/_/g, ' ');\n    });\n  });\n\n  config.network_data.row_nodes_names = utils.pluck(\n    config.network_data.row_nodes,\n    'name'\n  );\n  config.network_data.col_nodes_names = utils.pluck(\n    config.network_data.col_nodes,\n    'name'\n  );\n\n  config.sim_mat = check_sim_mat(config);\n\n  var filters = get_available_filters(config.network_data.views);\n\n  var default_states = {};\n  Object.keys(filters.possible_filters || {}).forEach(function (inst_filter) {\n    var tmp_state = get_filter_default_state(filters.filter_data, inst_filter);\n\n    default_states[inst_filter] = tmp_state;\n  });\n\n  // process view\n  if (utils.has(config.network_data, 'views')) {\n    config.network_data.views.forEach(function (inst_view) {\n      Object.keys(filters.possible_filters || {}).forEach(function (\n        inst_filter\n      ) {\n        if (!utils.has(inst_view, inst_filter)) {\n          inst_view[inst_filter] = default_states[inst_filter];\n        }\n      });\n\n      var inst_nodes = inst_view.nodes;\n\n      // proc row/col nodes names in views\n      ['row', 'col'].forEach(function (inst_rc) {\n        var has_cats = check_nodes_for_categories(\n          inst_nodes[inst_rc + '_nodes']\n        );\n\n        inst_nodes[inst_rc + '_nodes'].forEach(function (d, i) {\n          // add index to row_nodes and col_nodes\n          d[inst_rc + '_index'] = i;\n\n          if (has_cats) {\n            d.name = d.name.split(super_string)[1];\n          }\n\n          d.name = String(d.name);\n          d.name = d.name.replace(/_/g, ' ');\n        });\n      });\n    });\n  }\n\n  var col_nodes = config.network_data.col_nodes;\n  var row_nodes = config.network_data.row_nodes;\n\n  ///////////////////////////\n  // convert 'mat' to links\n  ///////////////////////////\n\n  if (utils.has(config.network_data, 'mat')) {\n    var links = [];\n    var mat = config.network_data.mat;\n    var inst_link = {};\n\n    // console.log('found mat')\n    for (var i = 0; i < mat.length; i++) {\n      for (var j = 0; j < mat[0].length; j++) {\n        // console.log(mat[i][j])\n\n        inst_link = {};\n        inst_link.source = i;\n        inst_link.target = j;\n        inst_link.value = mat[i][j];\n        links.push(inst_link);\n      }\n    }\n\n    // save to network_data\n    config.network_data.links = links;\n  }\n\n  // add names and instantaneous positions to links\n  config.network_data.links.forEach(function (d) {\n    d.name = row_nodes[d.source].name + '_' + col_nodes[d.target].name;\n    d.row_name = row_nodes[d.source].name;\n    d.col_name = col_nodes[d.target].name;\n  });\n\n  // transpose network if necessary\n  if (config.transpose) {\n    config.network_data = transpose_network(config.network_data);\n    var tmp_col_label = args.col_label;\n    var tmp_row_label = args.row_label;\n    args.row_label = tmp_col_label;\n    args.col_label = tmp_row_label;\n  }\n\n  // super-row/col labels\n  if (\n    !utils.is_undefined(args.row_label) &&\n    !utils.is_undefined(args.col_label)\n  ) {\n    config.super_labels = true;\n    config.super = {};\n    config.super.row = args.row_label;\n    config.super.col = args.col_label;\n  }\n\n  // initialize cluster ordering - both rows and columns\n  config.inst_order = {};\n  if (!utils.is_undefined(args.order) && utils.is_supported_order(args.order)) {\n    config.inst_order.row = args.order;\n    config.inst_order.col = args.order;\n  } else {\n    config.inst_order.row = 'clust';\n    config.inst_order.col = 'clust';\n  }\n\n  // set row or column order directly -- note that row/col are swapped\n  // !! need to swap row/col orderings\n  if (\n    !utils.is_undefined(args.row_order) &&\n    utils.is_supported_order(args.row_order)\n  ) {\n    // !! row and col orderings are swapped, need to fix\n    config.inst_order.col = args.row_order;\n  }\n\n  if (\n    !utils.is_undefined(args.col_order) &&\n    utils.is_supported_order(args.col_order)\n  ) {\n    // !! row and col orderings are swapped, need to fix\n    config.inst_order.row = args.col_order;\n  }\n\n  var row_has_group = utils.has(config.network_data.row_nodes[0], 'group');\n  var col_has_group = utils.has(config.network_data.col_nodes[0], 'group');\n\n  config.show_dendrogram = row_has_group || col_has_group;\n\n  if (utils.has(config.network_data.links[0], 'value_orig')) {\n    config.keep_orig = true;\n  } else {\n    config.keep_orig = false;\n  }\n\n  return config;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/make_config.js","/* Utility functions\n * ----------------------------------------------------------------------- */\nmodule.exports = {\n  normal_name: function (d) {\n    var inst_name = d.name.replace(/_/g, ' ').split('#')[0];\n    return inst_name;\n  },\n  is_supported_order: function (order) {\n    return (\n      order === 'ini' ||\n      order === 'clust' ||\n      order === 'rank_var' ||\n      order === 'rank' ||\n      order === 'class' ||\n      order == 'alpha'\n    );\n  },\n\n  /* Returns whether or not an object has a certain property.\n   */\n  has: function (obj, key) {\n    return obj && hasOwnProperty.call(obj, key);\n  },\n\n  property: function (key) {\n    return function (obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  },\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  pluck: function (arr, key) {\n    var self = this;\n    return arr.map(self.property(key));\n  },\n\n  /* Returns true if the object is undefined.\n   */\n  is_undefined: function (obj) {\n    return obj === void 0;\n  },\n\n  /* Mixes two objects in together, overwriting a target with a source.\n   */\n  extend: function (target, source) {\n    target = target || {};\n    for (var prop in source) {\n      if (typeof source[prop] === 'object') {\n        target[prop] = this.extend(target[prop], source[prop]);\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n    return target;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/Utils_clust.js","var utils = require('../Utils_clust');\n/* Transpose network.\n */\nmodule.exports = function (net) {\n  var tnet = {},\n    inst_link,\n    i;\n\n  tnet.row_nodes = net.col_nodes;\n  tnet.col_nodes = net.row_nodes;\n  tnet.links = [];\n\n  for (i = 0; i < net.links.length; i++) {\n    inst_link = {};\n    inst_link.source = net.links[i].target;\n    inst_link.target = net.links[i].source;\n    inst_link.value = net.links[i].value;\n\n    // Optional highlight.\n    if (utils.has(net.links[i], 'highlight')) {\n      inst_link.highlight = net.links[i].highlight;\n    }\n    if (utils.has(net.links[i], 'value_up')) {\n      inst_link.value_up = net.links[i].value_up;\n    }\n    if (utils.has(net.links[i], 'value_dn')) {\n      inst_link.value_dn = net.links[i].value_dn;\n    }\n    if (utils.has(net.links[i], 'info')) {\n      inst_link.info = net.links[i].info;\n    }\n    tnet.links.push(inst_link);\n  }\n\n  return tnet;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/network/transpose_network.js","var each = require('underscore/cjs/each');\nvar utils = require('../Utils_clust');\n\nmodule.exports = function get_available_filters(views) {\n  var possible_filters = {};\n  var filter_data = {};\n\n  each(views, function (inst_view) {\n    var inst_keys = Object.keys(inst_view || {});\n\n    inst_keys.forEach(function (inst_key) {\n      if (inst_key != 'nodes') {\n        if (!utils.has(filter_data, inst_key)) {\n          filter_data[inst_key] = [];\n        }\n        filter_data[inst_key].push(inst_view[inst_key]);\n        filter_data[inst_key] = Array.from(new Set([filter_data[inst_key]]));\n      }\n    });\n  });\n\n  var tmp_filters = Object.keys(filter_data);\n\n  tmp_filters.forEach(function (inst_filter) {\n    var options = filter_data[inst_filter];\n    var num_options = options.length;\n\n    var filter_type = 'categorical';\n    each(options, function (inst_option) {\n      if (typeof inst_option === 'number') {\n        filter_type = 'numerical';\n      }\n    });\n\n    if (num_options > 1) {\n      possible_filters[inst_filter] = filter_type;\n    }\n  });\n\n  var filters = {};\n  filters.possible_filters = possible_filters;\n  filters.filter_data = filter_data;\n\n  return filters;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/get_available_filters.js","var _optimizeCb = require('./_optimizeCb.js');\nvar _isArrayLike = require('./_isArrayLike.js');\nvar keys = require('./keys.js');\n\n// The cornerstone for collection functions, an `each`\n// implementation, aka `forEach`.\n// Handles raw objects in addition to array-likes. Treats all\n// sparse array-likes as if they were dense.\nfunction each(obj, iteratee, context) {\n  iteratee = _optimizeCb(iteratee, context);\n  var i, length;\n  if (_isArrayLike(obj)) {\n    for (i = 0, length = obj.length; i < length; i++) {\n      iteratee(obj[i], i, obj);\n    }\n  } else {\n    var _keys = keys(obj);\n    for (i = 0, length = _keys.length; i < length; i++) {\n      iteratee(obj[_keys[i]], _keys[i], obj);\n    }\n  }\n  return obj;\n}\n\nmodule.exports = each;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/each.js","// Internal function that returns an efficient (for current engines) version\n// of the passed-in callback, to be repeatedly applied in other Underscore\n// functions.\nfunction optimizeCb(func, context, argCount) {\n  if (context === void 0) return func;\n  switch (argCount == null ? 3 : argCount) {\n    case 1: return function(value) {\n      return func.call(context, value);\n    };\n    // The 2-argument case is omitted because we’re not using it.\n    case 3: return function(value, index, collection) {\n      return func.call(context, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(context, accumulator, value, index, collection);\n    };\n  }\n  return function() {\n    return func.apply(context, arguments);\n  };\n}\n\nmodule.exports = optimizeCb;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_optimizeCb.js","var _createSizePropertyCheck = require('./_createSizePropertyCheck.js');\nvar _getLength = require('./_getLength.js');\n\n// Internal helper for collection methods to determine whether a collection\n// should be iterated as an array or as an object.\n// Related: https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n// Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\nvar isArrayLike = _createSizePropertyCheck(_getLength);\n\nmodule.exports = isArrayLike;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_isArrayLike.js","var _setup = require('./_setup.js');\n\n// Common internal logic for `isArrayLike` and `isBufferLike`.\nfunction createSizePropertyCheck(getSizeProperty) {\n  return function(collection) {\n    var sizeProperty = getSizeProperty(collection);\n    return typeof sizeProperty == 'number' && sizeProperty >= 0 && sizeProperty <= _setup.MAX_ARRAY_INDEX;\n  }\n}\n\nmodule.exports = createSizePropertyCheck;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_createSizePropertyCheck.js","Object.defineProperty(exports, '__esModule', { value: true });\n\n// Current version.\nvar VERSION = '1.13.6';\n\n// Establish the root object, `window` (`self`) in the browser, `global`\n// on the server, or `this` in some virtual machines. We use `self`\n// instead of `window` for `WebWorker` support.\nvar root = (typeof self == 'object' && self.self === self && self) ||\n          (typeof global == 'object' && global.global === global && global) ||\n          Function('return this')() ||\n          {};\n\n// Save bytes in the minified (but not gzipped) version:\nvar ArrayProto = Array.prototype, ObjProto = Object.prototype;\nvar SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n// Create quick reference variables for speed access to core prototypes.\nvar push = ArrayProto.push,\n    slice = ArrayProto.slice,\n    toString = ObjProto.toString,\n    hasOwnProperty = ObjProto.hasOwnProperty;\n\n// Modern feature detection.\nvar supportsArrayBuffer = typeof ArrayBuffer !== 'undefined',\n    supportsDataView = typeof DataView !== 'undefined';\n\n// All **ECMAScript 5+** native function implementations that we hope to use\n// are declared here.\nvar nativeIsArray = Array.isArray,\n    nativeKeys = Object.keys,\n    nativeCreate = Object.create,\n    nativeIsView = supportsArrayBuffer && ArrayBuffer.isView;\n\n// Create references to these builtin functions because we override them.\nvar _isNaN = isNaN,\n    _isFinite = isFinite;\n\n// Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\nvar hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n  'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n// The largest integer that can be represented exactly.\nvar MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n\nexports.ArrayProto = ArrayProto;\nexports.MAX_ARRAY_INDEX = MAX_ARRAY_INDEX;\nexports.ObjProto = ObjProto;\nexports.SymbolProto = SymbolProto;\nexports.VERSION = VERSION;\nexports._isFinite = _isFinite;\nexports._isNaN = _isNaN;\nexports.hasEnumBug = hasEnumBug;\nexports.hasOwnProperty = hasOwnProperty;\nexports.nativeCreate = nativeCreate;\nexports.nativeIsArray = nativeIsArray;\nexports.nativeIsView = nativeIsView;\nexports.nativeKeys = nativeKeys;\nexports.nonEnumerableProps = nonEnumerableProps;\nexports.push = push;\nexports.root = root;\nexports.slice = slice;\nexports.supportsArrayBuffer = supportsArrayBuffer;\nexports.supportsDataView = supportsDataView;\nexports.toString = toString;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_setup.js","var _shallowProperty = require('./_shallowProperty.js');\n\n// Internal helper to obtain the `length` property of an object.\nvar getLength = _shallowProperty('length');\n\nmodule.exports = getLength;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_getLength.js","// Internal helper to generate a function to obtain property `key` from `obj`.\nfunction shallowProperty(key) {\n  return function(obj) {\n    return obj == null ? void 0 : obj[key];\n  };\n}\n\nmodule.exports = shallowProperty;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_shallowProperty.js","var isObject = require('./isObject.js');\nvar _setup = require('./_setup.js');\nvar _has = require('./_has.js');\nvar _collectNonEnumProps = require('./_collectNonEnumProps.js');\n\n// Retrieve the names of an object's own properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`.\nfunction keys(obj) {\n  if (!isObject(obj)) return [];\n  if (_setup.nativeKeys) return _setup.nativeKeys(obj);\n  var keys = [];\n  for (var key in obj) if (_has(obj, key)) keys.push(key);\n  // Ahem, IE < 9.\n  if (_setup.hasEnumBug) _collectNonEnumProps(obj, keys);\n  return keys;\n}\n\nmodule.exports = keys;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/keys.js","// Is a given variable an object?\nfunction isObject(obj) {\n  var type = typeof obj;\n  return type === 'function' || (type === 'object' && !!obj);\n}\n\nmodule.exports = isObject;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/isObject.js","var _setup = require('./_setup.js');\n\n// Internal function to check whether `key` is an own property name of `obj`.\nfunction has(obj, key) {\n  return obj != null && _setup.hasOwnProperty.call(obj, key);\n}\n\nmodule.exports = has;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_has.js","var _setup = require('./_setup.js');\nvar isFunction = require('./isFunction.js');\nvar _has = require('./_has.js');\n\n// Internal helper to create a simple lookup structure.\n// `collectNonEnumProps` used to depend on `_.contains`, but this led to\n// circular imports. `emulatedSet` is a one-off solution that only works for\n// arrays of strings.\nfunction emulatedSet(keys) {\n  var hash = {};\n  for (var l = keys.length, i = 0; i < l; ++i) hash[keys[i]] = true;\n  return {\n    contains: function(key) { return hash[key] === true; },\n    push: function(key) {\n      hash[key] = true;\n      return keys.push(key);\n    }\n  };\n}\n\n// Internal helper. Checks `keys` for the presence of keys in IE < 9 that won't\n// be iterated by `for key in ...` and thus missed. Extends `keys` in place if\n// needed.\nfunction collectNonEnumProps(obj, keys) {\n  keys = emulatedSet(keys);\n  var nonEnumIdx = _setup.nonEnumerableProps.length;\n  var constructor = obj.constructor;\n  var proto = (isFunction(constructor) && constructor.prototype) || _setup.ObjProto;\n\n  // Constructor is a special case.\n  var prop = 'constructor';\n  if (_has(obj, prop) && !keys.contains(prop)) keys.push(prop);\n\n  while (nonEnumIdx--) {\n    prop = _setup.nonEnumerableProps[nonEnumIdx];\n    if (prop in obj && obj[prop] !== proto[prop] && !keys.contains(prop)) {\n      keys.push(prop);\n    }\n  }\n}\n\nmodule.exports = collectNonEnumProps;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_collectNonEnumProps.js","var _tagTester = require('./_tagTester.js');\nvar _setup = require('./_setup.js');\n\nvar isFunction = _tagTester('Function');\n\n// Optimize `isFunction` if appropriate. Work around some `typeof` bugs in old\n// v8, IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\nvar nodelist = _setup.root.document && _setup.root.document.childNodes;\nif (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n  isFunction = function(obj) {\n    return typeof obj == 'function' || false;\n  };\n}\n\nvar isFunction$1 = isFunction;\n\nmodule.exports = isFunction$1;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/isFunction.js","var _setup = require('./_setup.js');\n\n// Internal function for creating a `toString`-based type tester.\nfunction tagTester(name) {\n  var tag = '[object ' + name + ']';\n  return function(obj) {\n    return _setup.toString.call(obj) === tag;\n  };\n}\n\nmodule.exports = tagTester;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_tagTester.js","module.exports = function get_filter_default_state(filter_data, filter_type) {\n  var default_state = filter_data[filter_type].sort(function (a, b) {\n    return b - a;\n  })[0];\n\n  default_state = String(default_state);\n\n  return default_state;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/filters/get_filter_default_state.js","module.exports = function set_defaults() {\n  var defaults = {\n    // Label options\n    row_label_scale: 1,\n    col_label_scale: 1,\n    super_labels: false,\n    super: {},\n    show_label_tooltips: true,\n    show_tile_tooltips: true,\n    // matrix options\n    transpose: false,\n    tile_colors: ['#FF0000', '#1C86EE'],\n    bar_colors: ['#FF0000', '#1C86EE'],\n    // value-cat colors\n    // cat_value_colors: ['#2F4F4F', '#8A2BE2'],\n    cat_value_colors: ['#2F4F4F', '#9370DB'],\n    outline_colors: ['orange', 'black'],\n    highlight_color: '#FFFF00',\n    tile_title: false,\n    // Default domain is set to 0: the domain will be set automatically\n    input_domain: 0,\n    opacity_scale: 'linear',\n    do_zoom: true,\n    is_zoom: 0,\n    is_slider_drag: false,\n    is_cropping: false,\n    background_color: '#FFFFFF',\n    clust_group_background_color: '#E4E5E7',\n    super_border_color: '#F5F5F5',\n    outer_margins: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0\n    },\n    ini_expand: false,\n    grey_border_width: 2,\n    tile_click_hlight: false,\n    super_label_scale: 1,\n    make_tile_tooltip: function (d) {\n      return d.info;\n    },\n    // initialize view, e.g. initialize with row filtering\n    ini_view: null,\n    // record of requested views\n    requested_view: null,\n    use_sidebar: true,\n    title: null,\n    about: null,\n    sidebar_width: 160,\n    sidebar_icons: true,\n    row_search_placeholder: 'Row',\n    buffer_width: 10,\n    show_sim_mat: false,\n    cat_colors: null,\n    resize: true,\n    clamp_opacity: 0.85,\n    expand_button: true,\n    max_allow_fs: 20,\n    dendro_filter: { row: false, col: false },\n    cat_filter: { row: false, col: false },\n    crop_filter_nodes: { row: false, col: false },\n    row_tip_callback: null,\n    col_tip_callback: null,\n    tile_tip_callback: null,\n    matrix_update_callback: null,\n    cat_update_callback: null,\n    dendro_callback: null,\n    dendro_click_callback: null,\n    new_row_cats: null,\n    make_modals: true,\n    show_viz_border: false\n  };\n\n  return defaults;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/config/set_defaults.js","var each = require('underscore/cjs/each');\n\nmodule.exports = function check_sim_mat(config) {\n  var sim_mat = false;\n\n  var num_rows = config.network_data.row_nodes_names.length;\n  var num_cols = config.network_data.col_nodes_names.length;\n\n  if (num_rows == num_cols) {\n    // the sort here was causing errors\n    var rows = config.network_data.row_nodes_names;\n    var cols = config.network_data.col_nodes_names;\n    sim_mat = true;\n\n    each(rows, function (inst_row) {\n      var inst_index = rows.indexOf(inst_row);\n      if (inst_row !== cols[inst_index]) {\n        sim_mat = false;\n      }\n    });\n  }\n\n  if (sim_mat) {\n    config.expand_button = false;\n  }\n\n  return sim_mat;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/config/check_sim_mat.js","var each = require('underscore/cjs/each');\n\nmodule.exports = function check_nodes_for_categories(nodes) {\n  var super_string = ': ';\n  var has_cat = true;\n\n  each(nodes, function (inst_node) {\n    var inst_name = String(inst_node.name);\n    if (inst_name.indexOf(super_string) < 0) {\n      has_cat = false;\n    }\n  });\n\n  return has_cat;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/config/check_nodes_for_categories.js","var make_network_using_view = require('../network/make_network_using_view');\n// var ini_sidebar_params = require('./ini_sidebar_params');\nvar make_requested_view = require('../filters/make_requested_view');\nvar get_available_filters = require('./get_available_filters');\nvar calc_viz_params = require('./calc_viz_params');\nvar ini_zoom_info = require('../zoom/ini_zoom_info');\nvar $ = require('jquery');\n\n/*\nParams: calculates the size of all the visualization elements in the\nclustergram.\n */\n\nmodule.exports = function make_params(input_config) {\n  var config = $.extend(true, {}, input_config);\n  var params = config;\n\n  // keep a copy of inst_view\n  params.inst_nodes = {};\n  params.inst_nodes.row_nodes = params.network_data.row_nodes;\n  params.inst_nodes.col_nodes = params.network_data.col_nodes;\n\n  // when pre-loading the visualization using a view\n  if (params.ini_view !== null) {\n    var requested_view = params.ini_view;\n\n    var filters = get_available_filters(params.network_data.views);\n\n    params.viz = {};\n    params.viz.possible_filters = filters.possible_filters;\n    params.viz.filter_data = filters.filter_data;\n\n    requested_view = make_requested_view(params, requested_view);\n    params.network_data = make_network_using_view(\n      config,\n      params,\n      requested_view\n    );\n\n    // save ini_view as requested_view\n    params.requested_view = requested_view;\n  }\n\n  params = calc_viz_params(params);\n\n  // customization\n  // if (params.use_sidebar) {\n  //   params.sidebar = ini_sidebar_params(params);\n  // }\n\n  params.zoom_info = ini_zoom_info();\n\n  return params;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/make_params.js","var filter_network_using_new_nodes = require('./filter_network_using_new_nodes');\nvar get_subset_views = require('../filters/get_subset_views');\nvar utils = require('../Utils_clust');\n\nmodule.exports = function make_network_using_view(\n  config,\n  params,\n  requested_view\n) {\n  var orig_views = config.network_data.views;\n\n  var is_enr = false;\n  if (utils.has(orig_views[0], 'enr_score_type')) {\n    is_enr = true;\n  }\n\n  var sub_views = get_subset_views(params, orig_views, requested_view);\n\n  //////////////////////////////\n  // Enrichr specific rules\n  //////////////////////////////\n  if (is_enr && sub_views.length == 0) {\n    requested_view = { N_row_sum: 'all', N_col_sum: '10' };\n    sub_views = get_subset_views(params, orig_views, requested_view);\n  }\n\n  var inst_view = sub_views[0];\n\n  var new_network_data;\n\n  // get new_network_data or default back to old_network_data\n  if (typeof inst_view !== 'undefined') {\n    var new_nodes = inst_view.nodes;\n    new_network_data = filter_network_using_new_nodes(config, new_nodes);\n  } else {\n    new_network_data = config.network_data;\n  }\n\n  return new_network_data;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/network/make_network_using_view.js","var utils = require('../Utils_clust');\nvar core = require('mathjs/core');\nvar math = core.create();\nmath.import(require('mathjs/lib/type/matrix'));\nmath.import(require('mathjs/lib/function/matrix/zeros'));\n\nmodule.exports = function filter_network_using_new_nodes(config, new_nodes) {\n  var links = config.network_data.links;\n\n  // // make new mat from links\n  // var new_mat = config.network_data.mat;\n\n  // get new names of rows and cols\n  var row_names = utils.pluck(new_nodes.row_nodes, 'name') || [];\n  var col_names = utils.pluck(new_nodes.col_nodes, 'name') || [];\n\n  var new_mat = math.matrix(\n    math.zeros([new_nodes.row_nodes.length, new_nodes.col_nodes.length])\n  );\n  new_mat = new_mat.toArray();\n\n  var new_links = _.filter(links, function (inst_link) {\n    var inst_row = inst_link.name.split('_')[0];\n    var inst_col = inst_link.name.split('_')[1];\n\n    var row_index = row_names.indexOf(inst_row);\n    var col_index = col_names.indexOf(inst_col);\n\n    // only keep links that have not been filtered out\n    if ((row_index > -1) & (col_index > -1)) {\n      // redefine source and target\n      inst_link.source = row_index;\n      inst_link.target = col_index;\n\n      new_mat[row_index][col_index] = inst_link.value;\n\n      return inst_link;\n    }\n  });\n\n  // set up new_network_data\n  var new_network_data = {};\n\n  // rows\n  new_network_data.row_nodes = new_nodes.row_nodes;\n  new_network_data.row_nodes_names = row_names;\n\n  // cols\n  new_network_data.col_nodes = new_nodes.col_nodes;\n  new_network_data.col_nodes_names = col_names;\n\n  // save all links\n  new_network_data.links = new_links;\n  new_network_data.all_links = links;\n\n  // mat\n  new_network_data.mat = new_mat;\n\n  // add back all views\n  new_network_data.views = config.network_data.views;\n\n  // add cat_colors if necessary\n  if (utils.has(config.network_data, 'cat_colors')) {\n    new_network_data.cat_colors = config.network_data.cat_colors;\n  }\n\n  return new_network_data;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/network/filter_network_using_new_nodes.js","module.exports = require('./lib/core/core');\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/core.js","var isFactory = require('./../utils/object').isFactory;\nvar typedFactory = require('./typed');\nvar emitter = require('./../utils/emitter');\n\nvar importFactory = require('./function/import');\nvar configFactory = require('./function/config');\n\n/**\n * Math.js core. Creates a new, empty math.js instance\n * @param {Object} [options] Available options:\n *                            {number} epsilon\n *                              Minimum relative difference between two\n *                              compared values, used by all comparison functions.\n *                            {string} matrix\n *                              A string 'Matrix' (default) or 'Array'.\n *                            {string} number\n *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n *                            {number} precision\n *                              The number of significant digits for BigNumbers.\n *                              Not applicable for Numbers.\n *                            {boolean} predictable\n *                              Predictable output type of functions. When true,\n *                              output type depends only on the input types. When\n *                              false (default), output type can vary depending\n *                              on input values. For example `math.sqrt(-4)`\n *                              returns `complex('2i')` when predictable is false, and\n *                              returns `NaN` when true.\n *                            {string} randomSeed\n *                              Random seed for seeded pseudo random number generator.\n *                              Set to null to randomly seed.\n * @returns {Object} Returns a bare-bone math.js instance containing\n *                   functions:\n *                   - `import` to add new functions\n *                   - `config` to change configuration\n *                   - `on`, `off`, `once`, `emit` for events\n */\nexports.create = function create (options) {\n  // simple test for ES5 support\n  if (typeof Object.create !== 'function') {\n    throw new Error('ES5 not supported by this JavaScript engine. ' +\n    'Please load the es5-shim and es5-sham library for compatibility.');\n  }\n\n  // cached factories and instances\n  var factories = [];\n  var instances = [];\n\n  // create a namespace for the mathjs instance, and attach emitter functions\n  var math = emitter.mixin({});\n  math.type = {};\n  math.expression = {\n    transform: {},\n    mathWithTransform: {}\n  };\n\n  // create a new typed instance\n  math.typed = typedFactory.create(math.type);\n\n  // create configuration options. These are private\n  var _config = {\n    // minimum relative difference between two compared values,\n    // used by all comparison functions\n    epsilon: 1e-12,\n\n    // type of default matrix output. Choose 'matrix' (default) or 'array'\n    matrix: 'Matrix',\n\n    // type of default number output. Choose 'number' (default) 'BigNumber', or 'Fraction\n    number: 'number',\n\n    // number of significant digits in BigNumbers\n    precision: 64,\n\n    // predictable output type of functions. When true, output type depends only\n    // on the input types. When false (default), output type can vary depending\n    // on input values. For example `math.sqrt(-4)` returns `complex('2i')` when\n    // predictable is false, and returns `NaN` when true.\n    predictable: false,\n\n    // random seed for seeded pseudo random number generation\n    // null = randomly seed\n    randomSeed: null\n  };\n\n  /**\n   * Load a function or data type from a factory.\n   * If the function or data type already exists, the existing instance is\n   * returned.\n   * @param {{type: string, name: string, factory: Function}} factory\n   * @returns {*}\n   */\n  function load (factory) {\n    if (!isFactory(factory)) {\n      throw new Error('Factory object with properties `type`, `name`, and `factory` expected');\n    }\n\n    var index = factories.indexOf(factory);\n    var instance;\n    if (index === -1) {\n      // doesn't yet exist\n      if (factory.math === true) {\n        // pass with math namespace\n        instance = factory.factory(math.type, _config, load, math.typed, math);\n      }\n      else {\n        instance = factory.factory(math.type, _config, load, math.typed);\n      }\n\n      // append to the cache\n      factories.push(factory);\n      instances.push(instance);\n    }\n    else {\n      // already existing function, return the cached instance\n      instance = instances[index];\n    }\n\n    return instance;\n  }\n\n  // load the import and config functions\n  math['import'] = load(importFactory);\n  math['config'] = load(configFactory);\n  math.expression.mathWithTransform['config'] = math['config']\n\n  // apply options\n  if (options) {\n    math.config(options);\n  }\n\n  return math;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/core/core.js","'use strict';\n\nvar isBigNumber = require('./bignumber/isBigNumber');\n\n/**\n * Clone an object\n *\n *     clone(x)\n *\n * Can clone any primitive type, array, and object.\n * If x has a function clone, this function will be invoked to clone the object.\n *\n * @param {*} x\n * @return {*} clone\n */\nexports.clone = function clone(x) {\n  var type = typeof x;\n\n  // immutable primitive types\n  if (type === 'number' || type === 'string' || type === 'boolean' ||\n      x === null || x === undefined) {\n    return x;\n  }\n\n  // use clone function of the object when available\n  if (typeof x.clone === 'function') {\n    return x.clone();\n  }\n\n  // array\n  if (Array.isArray(x)) {\n    return x.map(function (value) {\n      return clone(value);\n    });\n  }\n\n  if (x instanceof Number)    return new Number(x.valueOf());\n  if (x instanceof String)    return new String(x.valueOf());\n  if (x instanceof Boolean)   return new Boolean(x.valueOf());\n  if (x instanceof Date)      return new Date(x.valueOf());\n  if (isBigNumber(x))         return x; // bignumbers are immutable\n  if (x instanceof RegExp)  throw new TypeError('Cannot clone ' + x);  // TODO: clone a RegExp\n\n  // object\n  return exports.map(x, clone);\n};\n\n/**\n * Apply map to all properties of an object\n * @param {Object} object\n * @param {function} callback\n * @return {Object} Returns a copy of the object with mapped properties\n */\nexports.map = function(object, callback) {\n  var clone = {};\n\n  for (var key in object) {\n    if (exports.hasOwnProperty(object, key)) {\n      clone[key] = callback(object[key]);\n    }\n  }\n\n  return clone;\n}\n\n/**\n * Extend object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n */\nexports.extend = function(a, b) {\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      a[prop] = b[prop];\n    }\n  }\n  return a;\n};\n\n/**\n * Deep extend an object a with the properties of object b\n * @param {Object} a\n * @param {Object} b\n * @returns {Object}\n */\nexports.deepExtend = function deepExtend (a, b) {\n  // TODO: add support for Arrays to deepExtend\n  if (Array.isArray(b)) {\n    throw new TypeError('Arrays are not supported by deepExtend');\n  }\n\n  for (var prop in b) {\n    if (exports.hasOwnProperty(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop]);\n        }\n        else {\n          a[prop] = b[prop];\n        }\n      } else if (Array.isArray(b[prop])) {\n        throw new TypeError('Arrays are not supported by deepExtend');\n      } else {\n        a[prop] = b[prop];\n      }\n    }\n  }\n  return a;\n};\n\n/**\n * Deep test equality of all fields in two pairs of arrays or objects.\n * @param {Array | Object} a\n * @param {Array | Object} b\n * @returns {boolean}\n */\nexports.deepEqual = function deepEqual (a, b) {\n  var prop, i, len;\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n\n    if (a.length != b.length) {\n      return false;\n    }\n\n    for (i = 0, len = a.length; i < len; i++) {\n      if (!exports.deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else if (a instanceof Object) {\n    if (Array.isArray(b) || !(b instanceof Object)) {\n      return false;\n    }\n\n    for (prop in a) {\n      //noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    for (prop in b) {\n      //noinspection JSUnfilteredForInLoop\n      if (!exports.deepEqual(a[prop], b[prop])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  else {\n    return (typeof a === typeof b) && (a == b);\n  }\n};\n\n/**\n * Test whether the current JavaScript engine supports Object.defineProperty\n * @returns {boolean} returns true if supported\n */\nexports.canDefineProperty = function () {\n  // test needed for broken IE8 implementation\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty({}, 'x', { get: function () {} });\n      return true;\n    }\n  } catch (e) {}\n\n  return false;\n};\n\n/**\n * Attach a lazy loading property to a constant.\n * The given function `fn` is called once when the property is first requested.\n * On older browsers (<IE8), the function will fall back to direct evaluation\n * of the properties value.\n * @param {Object} object   Object where to add the property\n * @param {string} prop     Property name\n * @param {Function} fn     Function returning the property value. Called\n *                          without arguments.\n */\nexports.lazy = function (object, prop, fn) {\n  if (exports.canDefineProperty()) {\n    var _uninitialized = true;\n    var _value;\n    Object.defineProperty(object, prop, {\n      get: function () {\n        if (_uninitialized) {\n          _value = fn();\n          _uninitialized = false;\n        }\n        return _value;\n      },\n\n      set: function (value) {\n        _value = value;\n        _uninitialized = false;\n      },\n\n      configurable: true,\n      enumerable: true\n    });\n  }\n  else {\n    // fall back to immediate evaluation\n    object[prop] = fn();\n  }\n};\n\n/**\n * Traverse a path into an object.\n * When a namespace is missing, it will be created\n * @param {Object} object\n * @param {string} path   A dot separated string like 'name.space'\n * @return {Object} Returns the object at the end of the path\n */\nexports.traverse = function(object, path) {\n  var obj = object;\n\n  if (path) {\n    var names = path.split('.');\n    for (var i = 0; i < names.length; i++) {\n      var name = names[i];\n      if (!(name in obj)) {\n        obj[name] = {};\n      }\n      obj = obj[name];\n    }\n  }\n\n  return obj;\n};\n\n/**\n * A safe hasOwnProperty\n * @param {Object} object\n * @param {string} property\n */\nexports.hasOwnProperty = function (object, property) {\n  return object && Object.hasOwnProperty.call(object, property);\n}\n\n/**\n * Test whether an object is a factory. a factory has fields:\n *\n * - factory: function (type: Object, config: Object, load: function, typed: function [, math: Object])   (required)\n * - name: string (optional)\n * - path: string    A dot separated path (optional)\n * - math: boolean   If true (false by default), the math namespace is passed\n *                   as fifth argument of the factory function\n *\n * @param {*} object\n * @returns {boolean}\n */\nexports.isFactory = function (object) {\n  return object && typeof object.factory === 'function';\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/object.js","/**\n * Test whether a value is a BigNumber\n * @param {*} x\n * @return {boolean}\n */\nmodule.exports = function isBigNumber(x) {\n  return x && x.constructor.prototype.isBigNumber || false\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/bignumber/isBigNumber.js","var typedFunction = require('typed-function');\nvar digits = require('./../utils/number').digits;\nvar isBigNumber = require('./../utils/bignumber/isBigNumber');\nvar isMatrix = require('./../utils/collection/isMatrix');\n\n// returns a new instance of typed-function\nvar createTyped = function () {\n  // initially, return the original instance of typed-function\n  // consecutively, return a new instance from typed.create.\n  createTyped = typedFunction.create;\n  return typedFunction;\n};\n\n/**\n * Factory function for creating a new typed instance\n * @param {Object} type   Object with data types like Complex and BigNumber\n * @returns {Function}\n */\nexports.create = function create(type) {\n  // TODO: typed-function must be able to silently ignore signatures with unknown data types\n\n  // type checks for all known types\n  //\n  // note that:\n  //\n  // - check by duck-typing on a property like `isUnit`, instead of checking instanceof.\n  //   instanceof cannot be used because that would not allow to pass data from\n  //   one instance of math.js to another since each has it's own instance of Unit.\n  // - check the `isUnit` property via the constructor, so there will be no\n  //   matches for \"fake\" instances like plain objects with a property `isUnit`.\n  //   That is important for security reasons.\n  // - It must not be possible to override the type checks used internally,\n  //   for security reasons, so these functions are not exposed in the expression\n  //   parser.\n  type.isNumber = function (x) { return typeof x === 'number' };\n  type.isComplex = function (x) { return type.Complex && x instanceof type.Complex || false };\n  type.isBigNumber = isBigNumber;\n  type.isFraction = function (x) { return type.Fraction && x instanceof type.Fraction || false };\n  type.isUnit = function (x) { return x && x.constructor.prototype.isUnit || false };\n  type.isString = function (x) { return typeof x === 'string' };\n  type.isArray = Array.isArray;\n  type.isMatrix = isMatrix;\n  type.isDenseMatrix = function (x) { return x && x.isDenseMatrix && x.constructor.prototype.isMatrix || false };\n  type.isSparseMatrix = function (x) { return x && x.isSparseMatrix && x.constructor.prototype.isMatrix || false };\n  type.isRange = function (x) { return x && x.constructor.prototype.isRange || false };\n  type.isIndex = function (x) { return x && x.constructor.prototype.isIndex || false };\n  type.isBoolean = function (x) { return typeof x === 'boolean' };\n  type.isResultSet = function (x) { return x && x.constructor.prototype.isResultSet || false };\n  type.isHelp = function (x) { return x && x.constructor.prototype.isHelp || false };\n  type.isFunction = function (x) { return typeof x === 'function'};\n  type.isDate = function (x) { return x instanceof Date };\n  type.isRegExp = function (x) { return x instanceof RegExp };\n  type.isObject = function (x) { return typeof x === 'object' };\n  type.isNull = function (x) { return x === null };\n  type.isUndefined = function (x) { return x === undefined };\n\n  type.isAccessorNode = function (x) { return x && x.isAccessorNode && x.constructor.prototype.isNode || false };\n  type.isArrayNode = function (x) { return x && x.isArrayNode && x.constructor.prototype.isNode || false };\n  type.isAssignmentNode = function (x) { return x && x.isAssignmentNode && x.constructor.prototype.isNode || false };\n  type.isBlockNode = function (x) { return x && x.isBlockNode && x.constructor.prototype.isNode || false };\n  type.isConditionalNode = function (x) { return x && x.isConditionalNode && x.constructor.prototype.isNode || false };\n  type.isConstantNode = function (x) { return x && x.isConstantNode && x.constructor.prototype.isNode || false };\n  type.isFunctionAssignmentNode = function (x) { return x && x.isFunctionAssignmentNode && x.constructor.prototype.isNode || false };\n  type.isFunctionNode = function (x) { return x && x.isFunctionNode && x.constructor.prototype.isNode || false };\n  type.isIndexNode = function (x) { return x && x.isIndexNode && x.constructor.prototype.isNode || false };\n  type.isNode = function (x) { return x && x.isNode && x.constructor.prototype.isNode || false };\n  type.isObjectNode = function (x) { return x && x.isObjectNode && x.constructor.prototype.isNode || false };\n  type.isOperatorNode = function (x) { return x && x.isOperatorNode && x.constructor.prototype.isNode || false };\n  type.isParenthesisNode = function (x) { return x && x.isParenthesisNode && x.constructor.prototype.isNode || false };\n  type.isRangeNode = function (x) { return x && x.isRangeNode && x.constructor.prototype.isNode || false };\n  type.isSymbolNode = function (x) { return x && x.isSymbolNode && x.constructor.prototype.isNode || false };\n\n  type.isChain = function (x) { return x && x.constructor.prototype.isChain || false };\n\n  // get a new instance of typed-function\n  var typed = createTyped();\n\n  // define all types. The order of the types determines in which order function\n  // arguments are type-checked (so for performance it's important to put the\n  // most used types first).\n  typed.types = [\n    { name: 'number',          test: type.isNumber },\n    { name: 'Complex',         test: type.isComplex },\n    { name: 'BigNumber',       test: type.isBigNumber },\n    { name: 'Fraction',        test: type.isFraction },\n    { name: 'Unit',            test: type.isUnit },\n    { name: 'string',          test: type.isString },\n    { name: 'Array',           test: type.isArray },\n    { name: 'Matrix',          test: type.isMatrix },\n    { name: 'DenseMatrix',     test: type.isDenseMatrix },\n    { name: 'SparseMatrix',    test: type.isSparseMatrix },\n    { name: 'Range',           test: type.isRange },\n    { name: 'Index',           test: type.isIndex },\n    { name: 'boolean',         test: type.isBoolean },\n    { name: 'ResultSet',       test: type.isResultSet },\n    { name: 'Help',            test: type.isHelp },\n    { name: 'function',        test: type.isFunction },\n    { name: 'Date',            test: type.isDate },\n    { name: 'RegExp',          test: type.isRegExp },\n    { name: 'Object',          test: type.isObject },\n    { name: 'null',            test: type.isNull },\n    { name: 'undefined',       test: type.isUndefined },\n\n    { name: 'OperatorNode',    test: type.isOperatorNode },\n    { name: 'ConstantNode',    test: type.isConstantNode },\n    { name: 'SymbolNode',      test: type.isSymbolNode },\n    { name: 'ParenthesisNode', test: type.isParenthesisNode },\n    { name: 'FunctionNode',    test: type.isFunctionNode },\n    { name: 'FunctionAssignmentNode',    test: type.isFunctionAssignmentNode },\n    { name: 'ArrayNode',                 test: type.isArrayNode },\n    { name: 'AssignmentNode',            test: type.isAssignmentNode },\n    { name: 'BlockNode',                 test: type.isBlockNode },\n    { name: 'ConditionalNode',           test: type.isConditionalNode },\n    { name: 'IndexNode',                 test: type.isIndexNode },\n    { name: 'RangeNode',                 test: type.isRangeNode },\n    { name: 'Node',                      test: type.isNode }\n  ];\n\n  // TODO: add conversion from BigNumber to number?\n  typed.conversions = [\n    {\n      from: 'number',\n      to: 'BigNumber',\n      convert: function (x) {\n        // note: conversion from number to BigNumber can fail if x has >15 digits\n        if (digits(x) > 15) {\n          throw new TypeError('Cannot implicitly convert a number with >15 significant digits to BigNumber ' +\n          '(value: ' + x + '). ' +\n          'Use function bignumber(x) to convert to BigNumber.');\n        }\n        return new type.BigNumber(x);\n      }\n    }, {\n      from: 'number',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x, 0);\n      }\n    }, {\n      from: 'number',\n      to: 'string',\n      convert: function (x) {\n        return x + '';\n      }\n    }, {\n      from: 'BigNumber',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x.toNumber(), 0);\n      }\n    }, {\n      from: 'Fraction',\n      to: 'BigNumber',\n      convert: function (x) {\n        throw new TypeError('Cannot implicitly convert a Fraction to BigNumber or vice versa. ' +\n            'Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.');\n      }\n    }, {\n      from: 'Fraction',\n      to: 'Complex',\n      convert: function (x) {\n        return new type.Complex(x.valueOf(), 0);\n      }\n    }, {\n      from: 'number',\n      to: 'Fraction',\n      convert: function (x) {\n        var f = new type.Fraction(x);\n        if (f.valueOf() !== x) {\n          throw new TypeError('Cannot implicitly convert a number to a Fraction when there will be a loss of precision ' +\n              '(value: ' + x + '). ' +\n              'Use function fraction(x) to convert to Fraction.');\n        }\n        return new type.Fraction(x);\n      }\n    }, {\n    // FIXME: add conversion from Fraction to number, for example for `sqrt(fraction(1,3))`\n    //  from: 'Fraction',\n    //  to: 'number',\n    //  convert: function (x) {\n    //    return x.valueOf();\n    //  }\n    //}, {\n      from: 'string',\n      to: 'number',\n      convert: function (x) {\n        var n = Number(x);\n        if (isNaN(n)) {\n          throw new Error('Cannot convert \"' + x + '\" to a number');\n        }\n        return n;\n      }\n    }, {\n      from: 'string',\n      to: 'BigNumber',\n      convert: function (x) {\n        try {\n          return new type.BigNumber(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to BigNumber');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Fraction',\n      convert: function (x) {\n        try {\n          return new type.Fraction(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Fraction');\n        }\n      }\n    }, {\n      from: 'string',\n      to: 'Complex',\n      convert: function (x) {\n        try {\n          return new type.Complex(x);\n        }\n        catch (err) {\n          throw new Error('Cannot convert \"' + x + '\" to Complex');\n        }\n      }\n    }, {\n      from: 'boolean',\n      to: 'number',\n      convert: function (x) {\n        return +x;\n      }\n    }, {\n      from: 'boolean',\n      to: 'BigNumber',\n      convert: function (x) {\n        return new type.BigNumber(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'Fraction',\n      convert: function (x) {\n        return new type.Fraction(+x);\n      }\n    }, {\n      from: 'boolean',\n      to: 'string',\n      convert: function (x) {\n        return +x;\n      }\n    }, {\n      from: 'null',\n      to: 'number',\n      convert: function () {\n        return 0;\n      }\n    }, {\n      from: 'null',\n      to: 'string',\n      convert: function () {\n        return 'null';\n      }\n    }, {\n      from: 'null',\n      to: 'BigNumber',\n      convert: function () {\n        return new type.BigNumber(0);\n      }\n    }, {\n      from: 'null',\n      to: 'Fraction',\n      convert: function () {\n        return new type.Fraction(0);\n      }\n    }, {\n      from: 'Array',\n      to: 'Matrix',\n      convert: function (array) {\n        // TODO: how to decide on the right type of matrix to create?\n        return new type.DenseMatrix(array);\n      }\n    }, {\n      from: 'Matrix',\n      to: 'Array',\n      convert: function (matrix) {\n        return matrix.valueOf();\n      }\n    }\n  ];\n\n  return typed;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/core/typed.js","/**\n * typed-function\n *\n * Type checking for JavaScript functions\n *\n * https://github.com/josdejong/typed-function\n */\n'use strict';\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    // OldNode. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like OldNode.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.typed = factory();\n  }\n}(this, function () {\n  // factory function to create a new instance of typed-function\n  // TODO: allow passing configuration, types, tests via the factory function\n  function create() {\n    /**\n     * Get a type test function for a specific data type\n     * @param {string} name                   Name of a data type like 'number' or 'string'\n     * @returns {Function(obj: *) : boolean}  Returns a type testing function.\n     *                                        Throws an error for an unknown type.\n     */\n    function getTypeTest(name) {\n      var test;\n      for (var i = 0; i < typed.types.length; i++) {\n        var entry = typed.types[i];\n        if (entry.name === name) {\n          test = entry.test;\n          break;\n        }\n      }\n\n      if (!test) {\n        var hint;\n        for (i = 0; i < typed.types.length; i++) {\n          entry = typed.types[i];\n          if (entry.name.toLowerCase() == name.toLowerCase()) {\n            hint = entry.name;\n            break;\n          }\n        }\n\n        throw new Error('Unknown type \"' + name + '\"' +\n            (hint ? ('. Did you mean \"' + hint + '\"?') : ''));\n      }\n      return test;\n    }\n\n    /**\n     * Retrieve the function name from a set of functions, and check\n     * whether the name of all functions match (if given)\n     * @param {Array.<function>} fns\n     */\n    function getName (fns) {\n      var name = '';\n\n      for (var i = 0; i < fns.length; i++) {\n        var fn = fns[i];\n\n        // merge function name when this is a typed function\n        if (fn.signatures && fn.name != '') {\n          if (name == '') {\n            name = fn.name;\n          }\n          else if (name != fn.name) {\n            var err = new Error('Function names do not match (expected: ' + name + ', actual: ' + fn.name + ')');\n            err.data = {\n              actual: fn.name,\n              expected: name\n            };\n            throw err;\n          }\n        }\n      }\n\n      return name;\n    }\n\n    /**\n     * Create an ArgumentsError. Creates messages like:\n     *\n     *   Unexpected type of argument (expected: ..., actual: ..., index: ...)\n     *   Too few arguments (expected: ..., index: ...)\n     *   Too many arguments (expected: ..., actual: ...)\n     *\n     * @param {String} fn         Function name\n     * @param {number} argCount   Number of arguments\n     * @param {Number} index      Current argument index\n     * @param {*} actual          Current argument\n     * @param {string} [expected] An optional, comma separated string with\n     *                            expected types on given index\n     * @extends Error\n     */\n    function createError(fn, argCount, index, actual, expected) {\n      var actualType = getTypeOf(actual);\n      var _expected = expected ? expected.split(',') : null;\n      var _fn = (fn || 'unnamed');\n      var anyType = _expected && contains(_expected, 'any');\n      var message;\n      var data = {\n        fn: fn,\n        index: index,\n        actual: actual,\n        expected: _expected\n      };\n\n      if (_expected) {\n        if (argCount > index && !anyType) {\n          // unexpected type\n          message = 'Unexpected type of argument in function ' + _fn +\n              ' (expected: ' + _expected.join(' or ') + ', actual: ' + actualType + ', index: ' + index + ')';\n        }\n        else {\n          // too few arguments\n          message = 'Too few arguments in function ' + _fn +\n              ' (expected: ' + _expected.join(' or ') + ', index: ' + index + ')';\n        }\n      }\n      else {\n        // too many arguments\n        message = 'Too many arguments in function ' + _fn +\n            ' (expected: ' + index + ', actual: ' + argCount + ')'\n      }\n\n      var err = new TypeError(message);\n      err.data = data;\n      return err;\n    }\n\n    /**\n     * Collection with function references (local shortcuts to functions)\n     * @constructor\n     * @param {string} [name='refs']  Optional name for the refs, used to generate\n     *                                JavaScript code\n     */\n    function Refs(name) {\n      this.name = name || 'refs';\n      this.categories = {};\n    }\n\n    /**\n     * Add a function reference.\n     * @param {Function} fn\n     * @param {string} [category='fn']    A function category, like 'fn' or 'signature'\n     * @returns {string} Returns the function name, for example 'fn0' or 'signature2'\n     */\n    Refs.prototype.add = function (fn, category) {\n      var cat = category || 'fn';\n      if (!this.categories[cat]) this.categories[cat] = [];\n\n      var index = this.categories[cat].indexOf(fn);\n      if (index == -1) {\n        index = this.categories[cat].length;\n        this.categories[cat].push(fn);\n      }\n\n      return cat + index;\n    };\n\n    /**\n     * Create code lines for all function references\n     * @returns {string} Returns the code containing all function references\n     */\n    Refs.prototype.toCode = function () {\n      var code = [];\n      var path = this.name + '.categories';\n      var categories = this.categories;\n\n      for (var cat in categories) {\n        if (categories.hasOwnProperty(cat)) {\n          var category = categories[cat];\n\n          for (var i = 0; i < category.length; i++) {\n            code.push('var ' + cat + i + ' = ' + path + '[\\'' + cat + '\\'][' + i + '];');\n          }\n        }\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * A function parameter\n     * @param {string | string[] | Param} types    A parameter type like 'string',\n     *                                             'number | boolean'\n     * @param {boolean} [varArgs=false]            Variable arguments if true\n     * @constructor\n     */\n    function Param(types, varArgs) {\n      // parse the types, can be a string with types separated by pipe characters |\n      if (typeof types === 'string') {\n        // parse variable arguments operator (ellipses '...number')\n        var _types = types.trim();\n        var _varArgs = _types.substr(0, 3) === '...';\n        if (_varArgs) {\n          _types = _types.substr(3);\n        }\n        if (_types === '') {\n          this.types = ['any'];\n        }\n        else {\n          this.types = _types.split('|');\n          for (var i = 0; i < this.types.length; i++) {\n            this.types[i] = this.types[i].trim();\n          }\n        }\n      }\n      else if (Array.isArray(types)) {\n        this.types = types;\n      }\n      else if (types instanceof Param) {\n        return types.clone();\n      }\n      else {\n        throw new Error('String or Array expected');\n      }\n\n      // can hold a type to which to convert when handling this parameter\n      this.conversions = [];\n      // TODO: implement better API for conversions, be able to add conversions via constructor (support a new type Object?)\n\n      // variable arguments\n      this.varArgs = _varArgs || varArgs || false;\n\n      // check for any type arguments\n      this.anyType = this.types.indexOf('any') !== -1;\n    }\n\n    /**\n     * Order Params\n     * any type ('any') will be ordered last, and object as second last (as other\n     * types may be an object as well, like Array).\n     *\n     * @param {Param} a\n     * @param {Param} b\n     * @returns {number} Returns 1 if a > b, -1 if a < b, and else 0.\n     */\n    Param.compare = function (a, b) {\n      // TODO: simplify parameter comparison, it's a mess\n      if (a.anyType) return 1;\n      if (b.anyType) return -1;\n\n      if (contains(a.types, 'Object')) return 1;\n      if (contains(b.types, 'Object')) return -1;\n\n      if (a.hasConversions()) {\n        if (b.hasConversions()) {\n          var i, ac, bc;\n\n          for (i = 0; i < a.conversions.length; i++) {\n            if (a.conversions[i] !== undefined) {\n              ac = a.conversions[i];\n              break;\n            }\n          }\n\n          for (i = 0; i < b.conversions.length; i++) {\n            if (b.conversions[i] !== undefined) {\n              bc = b.conversions[i];\n              break;\n            }\n          }\n\n          return typed.conversions.indexOf(ac) - typed.conversions.indexOf(bc);\n        }\n        else {\n          return 1;\n        }\n      }\n      else {\n        if (b.hasConversions()) {\n          return -1;\n        }\n        else {\n          // both params have no conversions\n          var ai, bi;\n\n          for (i = 0; i < typed.types.length; i++) {\n            if (typed.types[i].name === a.types[0]) {\n              ai = i;\n              break;\n            }\n          }\n\n          for (i = 0; i < typed.types.length; i++) {\n            if (typed.types[i].name === b.types[0]) {\n              bi = i;\n              break;\n            }\n          }\n\n          return ai - bi;\n        }\n      }\n    };\n\n    /**\n     * Test whether this parameters types overlap an other parameters types.\n     * Will not match ['any'] with ['number']\n     * @param {Param} other\n     * @return {boolean} Returns true when there are overlapping types\n     */\n    Param.prototype.overlapping = function (other) {\n      for (var i = 0; i < this.types.length; i++) {\n        if (contains(other.types, this.types[i])) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Test whether this parameters types matches an other parameters types.\n     * When any of the two parameters contains `any`, true is returned\n     * @param {Param} other\n     * @return {boolean} Returns true when there are matching types\n     */\n    Param.prototype.matches = function (other) {\n      return this.anyType || other.anyType || this.overlapping(other);\n    };\n\n    /**\n     * Create a clone of this param\n     * @returns {Param} Returns a cloned version of this param\n     */\n    Param.prototype.clone = function () {\n      var param = new Param(this.types.slice(), this.varArgs);\n      param.conversions = this.conversions.slice();\n      return param;\n    };\n\n    /**\n     * Test whether this parameter contains conversions\n     * @returns {boolean} Returns true if the parameter contains one or\n     *                    multiple conversions.\n     */\n    Param.prototype.hasConversions = function () {\n      return this.conversions.length > 0;\n    };\n\n    /**\n     * Tests whether this parameters contains any of the provided types\n     * @param {Object} types  A Map with types, like {'number': true}\n     * @returns {boolean}     Returns true when the parameter contains any\n     *                        of the provided types\n     */\n    Param.prototype.contains = function (types) {\n      for (var i = 0; i < this.types.length; i++) {\n        if (types[this.types[i]]) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Return a string representation of this params types, like 'string' or\n     * 'number | boolean' or '...number'\n     * @param {boolean} [toConversion]   If true, the returned types string\n     *                                   contains the types where the parameter\n     *                                   will convert to. If false (default)\n     *                                   the \"from\" types are returned\n     * @returns {string}\n     */\n    Param.prototype.toString = function (toConversion) {\n      var types = [];\n      var keys = {};\n\n      for (var i = 0; i < this.types.length; i++) {\n        var conversion = this.conversions[i];\n        var type = toConversion && conversion ? conversion.to : this.types[i];\n        if (!(type in keys)) {\n          keys[type] = true;\n          types.push(type);\n        }\n      }\n\n      return (this.varArgs ? '...' : '') + types.join('|');\n    };\n\n    /**\n     * A function signature\n     * @param {string | string[] | Param[]} params\n     *                         Array with the type(s) of each parameter,\n     *                         or a comma separated string with types\n     * @param {Function} fn    The actual function\n     * @constructor\n     */\n    function Signature(params, fn) {\n      var _params;\n      if (typeof params === 'string') {\n        _params = (params !== '') ? params.split(',') : [];\n      }\n      else if (Array.isArray(params)) {\n        _params = params;\n      }\n      else {\n        throw new Error('string or Array expected');\n      }\n\n      this.params = new Array(_params.length);\n      this.anyType = false;\n      this.varArgs = false;\n      for (var i = 0; i < _params.length; i++) {\n        var param = new Param(_params[i]);\n        this.params[i] = param;\n        if (param.anyType) {\n          this.anyType = true;\n        }\n        if (i === _params.length - 1) {\n          // the last argument\n          this.varArgs = param.varArgs;\n        }\n        else {\n          // non-last argument\n          if (param.varArgs) {\n            throw new SyntaxError('Unexpected variable arguments operator \"...\"');\n          }\n        }\n      }\n\n      this.fn = fn;\n    }\n\n    /**\n     * Create a clone of this signature\n     * @returns {Signature} Returns a cloned version of this signature\n     */\n    Signature.prototype.clone = function () {\n      return new Signature(this.params.slice(), this.fn);\n    };\n\n    /**\n     * Expand a signature: split params with union types in separate signatures\n     * For example split a Signature \"string | number\" into two signatures.\n     * @return {Signature[]} Returns an array with signatures (at least one)\n     */\n    Signature.prototype.expand = function () {\n      var signatures = [];\n\n      function recurse(signature, path) {\n        if (path.length < signature.params.length) {\n          var i, newParam, conversion;\n\n          var param = signature.params[path.length];\n          if (param.varArgs) {\n            // a variable argument. do not split the types in the parameter\n            newParam = param.clone();\n\n            // add conversions to the parameter\n            // recurse for all conversions\n            for (i = 0; i < typed.conversions.length; i++) {\n              conversion = typed.conversions[i];\n              if (!contains(param.types, conversion.from) && contains(param.types, conversion.to)) {\n                var j = newParam.types.length;\n                newParam.types[j] = conversion.from;\n                newParam.conversions[j] = conversion;\n              }\n            }\n\n            recurse(signature, path.concat(newParam));\n          }\n          else {\n            // split each type in the parameter\n            for (i = 0; i < param.types.length; i++) {\n              recurse(signature, path.concat(new Param(param.types[i])));\n            }\n\n            // recurse for all conversions\n            for (i = 0; i < typed.conversions.length; i++) {\n              conversion = typed.conversions[i];\n              if (!contains(param.types, conversion.from) && contains(param.types, conversion.to)) {\n                newParam = new Param(conversion.from);\n                newParam.conversions[0] = conversion;\n                recurse(signature, path.concat(newParam));\n              }\n            }\n          }\n        }\n        else {\n          signatures.push(new Signature(path, signature.fn));\n        }\n      }\n\n      recurse(this, []);\n\n      return signatures;\n    };\n\n    /**\n     * Compare two signatures.\n     *\n     * When two params are equal and contain conversions, they will be sorted\n     * by lowest index of the first conversions.\n     *\n     * @param {Signature} a\n     * @param {Signature} b\n     * @returns {number} Returns 1 if a > b, -1 if a < b, and else 0.\n     */\n    Signature.compare = function (a, b) {\n      if (a.params.length > b.params.length) return 1;\n      if (a.params.length < b.params.length) return -1;\n\n      // count the number of conversions\n      var i;\n      var len = a.params.length; // a and b have equal amount of params\n      var ac = 0;\n      var bc = 0;\n      for (i = 0; i < len; i++) {\n        if (a.params[i].hasConversions()) ac++;\n        if (b.params[i].hasConversions()) bc++;\n      }\n\n      if (ac > bc) return 1;\n      if (ac < bc) return -1;\n\n      // compare the order per parameter\n      for (i = 0; i < a.params.length; i++) {\n        var cmp = Param.compare(a.params[i], b.params[i]);\n        if (cmp !== 0) {\n          return cmp;\n        }\n      }\n\n      return 0;\n    };\n\n    /**\n     * Test whether any of the signatures parameters has conversions\n     * @return {boolean} Returns true when any of the parameters contains\n     *                   conversions.\n     */\n    Signature.prototype.hasConversions = function () {\n      for (var i = 0; i < this.params.length; i++) {\n        if (this.params[i].hasConversions()) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    /**\n     * Test whether this signature should be ignored.\n     * Checks whether any of the parameters contains a type listed in\n     * typed.ignore\n     * @return {boolean} Returns true when the signature should be ignored\n     */\n    Signature.prototype.ignore = function () {\n      // create a map with ignored types\n      var types = {};\n      for (var i = 0; i < typed.ignore.length; i++) {\n        types[typed.ignore[i]] = true;\n      }\n\n      // test whether any of the parameters contains this type\n      for (i = 0; i < this.params.length; i++) {\n        if (this.params[i].contains(types)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    /**\n     * Test whether the path of this signature matches a given path.\n     * @param {Param[]} params\n     */\n    Signature.prototype.paramsStartWith = function (params) {\n      if (params.length === 0) {\n        return true;\n      }\n\n      var aLast = last(this.params);\n      var bLast = last(params);\n\n      for (var i = 0; i < params.length; i++) {\n        var a = this.params[i] || (aLast.varArgs ? aLast: null);\n        var b = params[i]      || (bLast.varArgs ? bLast: null);\n\n        if (!a ||  !b || !a.matches(b)) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    /**\n     * Generate the code to invoke this signature\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns code\n     */\n    Signature.prototype.toCode = function (refs, prefix) {\n      var code = [];\n\n      var args = new Array(this.params.length);\n      for (var i = 0; i < this.params.length; i++) {\n        var param = this.params[i];\n        var conversion = param.conversions[0];\n        if (param.varArgs) {\n          args[i] = 'varArgs';\n        }\n        else if (conversion) {\n          args[i] = refs.add(conversion.convert, 'convert') + '(arg' + i + ')';\n        }\n        else {\n          args[i] = 'arg' + i;\n        }\n      }\n\n      var ref = this.fn ? refs.add(this.fn, 'signature') : undefined;\n      if (ref) {\n        return prefix + 'return ' + ref + '(' + args.join(', ') + '); // signature: ' + this.params.join(', ');\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * Return a string representation of the signature\n     * @returns {string}\n     */\n    Signature.prototype.toString = function () {\n      return this.params.join(', ');\n    };\n\n    /**\n     * A group of signatures with the same parameter on given index\n     * @param {Param[]} path\n     * @param {Signature} [signature]\n     * @param {Node[]} childs\n     * @param {boolean} [fallThrough=false]\n     * @constructor\n     */\n    function Node(path, signature, childs, fallThrough) {\n      this.path = path || [];\n      this.param = path[path.length - 1] || null;\n      this.signature = signature || null;\n      this.childs = childs || [];\n      this.fallThrough = fallThrough || false;\n    }\n\n    /**\n     * Generate code for this group of signatures\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the code as string\n     */\n    Node.prototype.toCode = function (refs, prefix) {\n      // TODO: split this function in multiple functions, it's too large\n      var code = [];\n\n      if (this.param) {\n        var index = this.path.length - 1;\n        var conversion = this.param.conversions[0];\n        var comment = '// type: ' + (conversion ?\n                (conversion.from + ' (convert to ' + conversion.to + ')') :\n                this.param);\n\n        // non-root node (path is non-empty)\n        if (this.param.varArgs) {\n          if (this.param.anyType) {\n            // variable arguments with any type\n            code.push(prefix + 'if (arguments.length > ' + index + ') {');\n            code.push(prefix + '  var varArgs = [];');\n            code.push(prefix + '  for (var i = ' + index + '; i < arguments.length; i++) {');\n            code.push(prefix + '    varArgs.push(arguments[i]);');\n            code.push(prefix + '  }');\n            code.push(this.signature.toCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n          else {\n            // variable arguments with a fixed type\n            var getTests = function (types, arg) {\n              var tests = [];\n              for (var i = 0; i < types.length; i++) {\n                tests[i] = refs.add(getTypeTest(types[i]), 'test') + '(' + arg + ')';\n              }\n              return tests.join(' || ');\n            }.bind(this);\n\n            var allTypes = this.param.types;\n            var exactTypes = [];\n            for (var i = 0; i < allTypes.length; i++) {\n              if (this.param.conversions[i] === undefined) {\n                exactTypes.push(allTypes[i]);\n              }\n            }\n\n            code.push(prefix + 'if (' + getTests(allTypes, 'arg' + index) + ') { ' + comment);\n            code.push(prefix + '  var varArgs = [arg' + index + '];');\n            code.push(prefix + '  for (var i = ' + (index + 1) + '; i < arguments.length; i++) {');\n            code.push(prefix + '    if (' + getTests(exactTypes, 'arguments[i]') + ') {');\n            code.push(prefix + '      varArgs.push(arguments[i]);');\n\n            for (var i = 0; i < allTypes.length; i++) {\n              var conversion_i = this.param.conversions[i];\n              if (conversion_i) {\n                var test = refs.add(getTypeTest(allTypes[i]), 'test');\n                var convert = refs.add(conversion_i.convert, 'convert');\n                code.push(prefix + '    }');\n                code.push(prefix + '    else if (' + test + '(arguments[i])) {');\n                code.push(prefix + '      varArgs.push(' + convert + '(arguments[i]));');\n              }\n            }\n            code.push(prefix + '    } else {');\n            code.push(prefix + '      throw createError(name, arguments.length, i, arguments[i], \\'' + exactTypes.join(',') + '\\');');\n            code.push(prefix + '    }');\n            code.push(prefix + '  }');\n            code.push(this.signature.toCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n        }\n        else {\n          if (this.param.anyType) {\n            // any type\n            code.push(prefix + '// type: any');\n            code.push(this._innerCode(refs, prefix));\n          }\n          else {\n            // regular type\n            var type = this.param.types[0];\n            var test = type !== 'any' ? refs.add(getTypeTest(type), 'test') : null;\n\n            code.push(prefix + 'if (' + test + '(arg' + index + ')) { ' + comment);\n            code.push(this._innerCode(refs, prefix + '  '));\n            code.push(prefix + '}');\n          }\n        }\n      }\n      else {\n        // root node (path is empty)\n        code.push(this._innerCode(refs, prefix));\n      }\n\n      return code.join('\\n');\n    };\n\n    /**\n     * Generate inner code for this group of signatures.\n     * This is a helper function of Node.prototype.toCode\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the inner code as string\n     * @private\n     */\n    Node.prototype._innerCode = function (refs, prefix) {\n      var code = [];\n      var i;\n\n      if (this.signature) {\n        code.push(prefix + 'if (arguments.length === ' + this.path.length + ') {');\n        code.push(this.signature.toCode(refs, prefix + '  '));\n        code.push(prefix + '}');\n      }\n\n      for (i = 0; i < this.childs.length; i++) {\n        code.push(this.childs[i].toCode(refs, prefix));\n      }\n\n      // TODO: shouldn't the this.param.anyType check be redundant\n      if (!this.fallThrough || (this.param && this.param.anyType)) {\n        var exceptions = this._exceptions(refs, prefix);\n        if (exceptions) {\n          code.push(exceptions);\n        }\n      }\n\n      return code.join('\\n');\n    };\n\n\n    /**\n     * Generate code to throw exceptions\n     * @param {Refs} refs\n     * @param {string} prefix\n     * @returns {string} Returns the inner code as string\n     * @private\n     */\n    Node.prototype._exceptions = function (refs, prefix) {\n      var index = this.path.length;\n\n      if (this.childs.length === 0) {\n        // TODO: can this condition be simplified? (we have a fall-through here)\n        return [\n          prefix + 'if (arguments.length > ' + index + ') {',\n          prefix + '  throw createError(name, arguments.length, ' + index + ', arguments[' + index + ']);',\n          prefix + '}'\n        ].join('\\n');\n      }\n      else {\n        var keys = {};\n        var types = [];\n\n        for (var i = 0; i < this.childs.length; i++) {\n          var node = this.childs[i];\n          if (node.param) {\n            for (var j = 0; j < node.param.types.length; j++) {\n              var type = node.param.types[j];\n              if (!(type in keys) && !node.param.conversions[j]) {\n                keys[type] = true;\n                types.push(type);\n              }\n            }\n          }\n        }\n\n        return prefix + 'throw createError(name, arguments.length, ' + index + ', arguments[' + index + '], \\'' + types.join(',') + '\\');';\n      }\n    };\n\n    /**\n     * Split all raw signatures into an array with expanded Signatures\n     * @param {Object.<string, Function>} rawSignatures\n     * @return {Signature[]} Returns an array with expanded signatures\n     */\n    function parseSignatures(rawSignatures) {\n      // FIXME: need to have deterministic ordering of signatures, do not create via object\n      var signature;\n      var keys = {};\n      var signatures = [];\n      var i;\n\n      for (var types in rawSignatures) {\n        if (rawSignatures.hasOwnProperty(types)) {\n          var fn = rawSignatures[types];\n          signature = new Signature(types, fn);\n\n          if (signature.ignore()) {\n            continue;\n          }\n\n          var expanded = signature.expand();\n\n          for (i = 0; i < expanded.length; i++) {\n            var signature_i = expanded[i];\n            var key = signature_i.toString();\n            var existing = keys[key];\n            if (!existing) {\n              keys[key] = signature_i;\n            }\n            else {\n              var cmp = Signature.compare(signature_i, existing);\n              if (cmp < 0) {\n                // override if sorted first\n                keys[key] = signature_i;\n              }\n              else if (cmp === 0) {\n                throw new Error('Signature \"' + key + '\" is defined twice');\n              }\n              // else: just ignore\n            }\n          }\n        }\n      }\n\n      // convert from map to array\n      for (key in keys) {\n        if (keys.hasOwnProperty(key)) {\n          signatures.push(keys[key]);\n        }\n      }\n\n      // order the signatures\n      signatures.sort(function (a, b) {\n        return Signature.compare(a, b);\n      });\n\n      // filter redundant conversions from signatures with varArgs\n      // TODO: simplify this loop or move it to a separate function\n      for (i = 0; i < signatures.length; i++) {\n        signature = signatures[i];\n\n        if (signature.varArgs) {\n          var index = signature.params.length - 1;\n          var param = signature.params[index];\n\n          var t = 0;\n          while (t < param.types.length) {\n            if (param.conversions[t]) {\n              var type = param.types[t];\n\n              for (var j = 0; j < signatures.length; j++) {\n                var other = signatures[j];\n                var p = other.params[index];\n\n                if (other !== signature &&\n                    p &&\n                    contains(p.types, type) && !p.conversions[index]) {\n                  // this (conversion) type already exists, remove it\n                  param.types.splice(t, 1);\n                  param.conversions.splice(t, 1);\n                  t--;\n                  break;\n                }\n              }\n            }\n            t++;\n          }\n        }\n      }\n\n      return signatures;\n    }\n\n    /**\n     * Filter all any type signatures\n     * @param {Signature[]} signatures\n     * @return {Signature[]} Returns only any type signatures\n     */\n    function filterAnyTypeSignatures (signatures) {\n      var filtered = [];\n\n      for (var i = 0; i < signatures.length; i++) {\n        if (signatures[i].anyType) {\n          filtered.push(signatures[i]);\n        }\n      }\n\n      return filtered;\n    }\n\n    /**\n     * create a map with normalized signatures as key and the function as value\n     * @param {Signature[]} signatures   An array with split signatures\n     * @return {Object.<string, Function>} Returns a map with normalized\n     *                                     signatures as key, and the function\n     *                                     as value.\n     */\n    function mapSignatures(signatures) {\n      var normalized = {};\n\n      for (var i = 0; i < signatures.length; i++) {\n        var signature = signatures[i];\n        if (signature.fn && !signature.hasConversions()) {\n          var params = signature.params.join(',');\n          normalized[params] = signature.fn;\n        }\n      }\n\n      return normalized;\n    }\n\n    /**\n     * Parse signatures recursively in a node tree.\n     * @param {Signature[]} signatures  Array with expanded signatures\n     * @param {Param[]} path            Traversed path of parameter types\n     * @param {Signature[]} anys\n     * @return {Node}                   Returns a node tree\n     */\n    function parseTree(signatures, path, anys) {\n      var i, signature;\n      var index = path.length;\n      var nodeSignature;\n\n      var filtered = [];\n      for (i = 0; i < signatures.length; i++) {\n        signature = signatures[i];\n\n        // filter the first signature with the correct number of params\n        if (signature.params.length === index && !nodeSignature) {\n          nodeSignature = signature;\n        }\n\n        if (signature.params[index] != undefined) {\n          filtered.push(signature);\n        }\n      }\n\n      // sort the filtered signatures by param\n      filtered.sort(function (a, b) {\n        return Param.compare(a.params[index], b.params[index]);\n      });\n\n      // recurse over the signatures\n      var entries = [];\n      for (i = 0; i < filtered.length; i++) {\n        signature = filtered[i];\n        // group signatures with the same param at current index\n        var param = signature.params[index];\n\n        // TODO: replace the next filter loop\n        var existing = entries.filter(function (entry) {\n          return entry.param.overlapping(param);\n        })[0];\n\n        //var existing;\n        //for (var j = 0; j < entries.length; j++) {\n        //  if (entries[j].param.overlapping(param)) {\n        //    existing = entries[j];\n        //    break;\n        //  }\n        //}\n\n        if (existing) {\n          if (existing.param.varArgs) {\n            throw new Error('Conflicting types \"' + existing.param + '\" and \"' + param + '\"');\n          }\n          existing.signatures.push(signature);\n        }\n        else {\n          entries.push({\n            param: param,\n            signatures: [signature]\n          });\n        }\n      }\n\n      // find all any type signature that can still match our current path\n      var matchingAnys = [];\n      for (i = 0; i < anys.length; i++) {\n        if (anys[i].paramsStartWith(path)) {\n          matchingAnys.push(anys[i]);\n        }\n      }\n\n      // see if there are any type signatures that don't match any of the\n      // signatures that we have in our tree, i.e. we have alternative\n      // matching signature(s) outside of our current tree and we should\n      // fall through to them instead of throwing an exception\n      var fallThrough = false;\n      for (i = 0; i < matchingAnys.length; i++) {\n        if (!contains(signatures, matchingAnys[i])) {\n          fallThrough = true;\n          break;\n        }\n      }\n\n      // parse the childs\n      var childs = new Array(entries.length);\n      for (i = 0; i < entries.length; i++) {\n        var entry = entries[i];\n        childs[i] = parseTree(entry.signatures, path.concat(entry.param), matchingAnys)\n      }\n\n      return new Node(path, nodeSignature, childs, fallThrough);\n    }\n\n    /**\n     * Generate an array like ['arg0', 'arg1', 'arg2']\n     * @param {number} count Number of arguments to generate\n     * @returns {Array} Returns an array with argument names\n     */\n    function getArgs(count) {\n      // create an array with all argument names\n      var args = [];\n      for (var i = 0; i < count; i++) {\n        args[i] = 'arg' + i;\n      }\n\n      return args;\n    }\n\n    /**\n     * Compose a function from sub-functions each handling a single type signature.\n     * Signatures:\n     *   typed(signature: string, fn: function)\n     *   typed(name: string, signature: string, fn: function)\n     *   typed(signatures: Object.<string, function>)\n     *   typed(name: string, signatures: Object.<string, function>)\n     *\n     * @param {string | null} name\n     * @param {Object.<string, Function>} signatures\n     * @return {Function} Returns the typed function\n     * @private\n     */\n    function _typed(name, signatures) {\n      var refs = new Refs();\n\n      // parse signatures, expand them\n      var _signatures = parseSignatures(signatures);\n      if (_signatures.length == 0) {\n        throw new Error('No signatures provided');\n      }\n\n      // filter all any type signatures\n      var anys = filterAnyTypeSignatures(_signatures);\n\n      // parse signatures into a node tree\n      var node = parseTree(_signatures, [], anys);\n\n      //var util = require('util');\n      //console.log('ROOT');\n      //console.log(util.inspect(node, { depth: null }));\n\n      // generate code for the typed function\n      // safeName is a conservative replacement of characters \n      // to prevend being able to inject JS code at the place of the function name \n      // the name is useful for stack trackes therefore we want have it there\n      var code = [];\n      var safeName = (name || '').replace(/[^a-zA-Z0-9_$]/g, '_')\n      var args = getArgs(maxParams(_signatures));\n      code.push('function ' + safeName + '(' + args.join(', ') + ') {');\n      code.push('  \"use strict\";');\n      code.push('  var name = ' + JSON.stringify(name || '') + ';');\n      code.push(node.toCode(refs, '  ', false));\n      code.push('}');\n\n      // generate body for the factory function\n      var body = [\n        refs.toCode(),\n        'return ' + code.join('\\n')\n      ].join('\\n');\n\n      // evaluate the JavaScript code and attach function references\n      var factory = (new Function(refs.name, 'createError', body));\n      var fn = factory(refs, createError);\n\n      //console.log('FN\\n' + fn.toString()); // TODO: cleanup\n\n      // attach the signatures with sub-functions to the constructed function\n      fn.signatures = mapSignatures(_signatures);\n\n      return fn;\n    }\n\n    /**\n     * Calculate the maximum number of parameters in givens signatures\n     * @param {Signature[]} signatures\n     * @returns {number} The maximum number of parameters\n     */\n    function maxParams(signatures) {\n      var max = 0;\n\n      for (var i = 0; i < signatures.length; i++) {\n        var len = signatures[i].params.length;\n        if (len > max) {\n          max = len;\n        }\n      }\n\n      return max;\n    }\n\n    /**\n     * Get the type of a value\n     * @param {*} x\n     * @returns {string} Returns a string with the type of value\n     */\n    function getTypeOf(x) {\n      var obj;\n\n      for (var i = 0; i < typed.types.length; i++) {\n        var entry = typed.types[i];\n\n        if (entry.name === 'Object') {\n          // Array and Date are also Object, so test for Object afterwards\n          obj = entry;\n        }\n        else {\n          if (entry.test(x)) return entry.name;\n        }\n      }\n\n      // at last, test whether an object\n      if (obj && obj.test(x)) return obj.name;\n\n      return 'unknown';\n    }\n\n    /**\n     * Test whether an array contains some item\n     * @param {Array} array\n     * @param {*} item\n     * @return {boolean} Returns true if array contains item, false if not.\n     */\n    function contains(array, item) {\n      return array.indexOf(item) !== -1;\n    }\n\n    /**\n     * Returns the last item in the array\n     * @param {Array} array\n     * @return {*} item\n     */\n    function last (array) {\n      return array[array.length - 1];\n    }\n\n    // data type tests\n    var types = [\n      { name: 'number',    test: function (x) { return typeof x === 'number' } },\n      { name: 'string',    test: function (x) { return typeof x === 'string' } },\n      { name: 'boolean',   test: function (x) { return typeof x === 'boolean' } },\n      { name: 'Function',  test: function (x) { return typeof x === 'function'} },\n      { name: 'Array',     test: Array.isArray },\n      { name: 'Date',      test: function (x) { return x instanceof Date } },\n      { name: 'RegExp',    test: function (x) { return x instanceof RegExp } },\n      { name: 'Object',    test: function (x) { return typeof x === 'object' } },\n      { name: 'null',      test: function (x) { return x === null } },\n      { name: 'undefined', test: function (x) { return x === undefined } }\n    ];\n\n    // configuration\n    var config = {};\n\n    // type conversions. Order is important\n    var conversions = [];\n\n    // types to be ignored\n    var ignore = [];\n\n    // temporary object for holding types and conversions, for constructing\n    // the `typed` function itself\n    // TODO: find a more elegant solution for this\n    var typed = {\n      config: config,\n      types: types,\n      conversions: conversions,\n      ignore: ignore\n    };\n\n    /**\n     * Construct the typed function itself with various signatures\n     *\n     * Signatures:\n     *\n     *   typed(signatures: Object.<string, function>)\n     *   typed(name: string, signatures: Object.<string, function>)\n     */\n    typed = _typed('typed', {\n      'Object': function (signatures) {\n        var fns = [];\n        for (var signature in signatures) {\n          if (signatures.hasOwnProperty(signature)) {\n            fns.push(signatures[signature]);\n          }\n        }\n        var name = getName(fns);\n\n        return _typed(name, signatures);\n      },\n      'string, Object': _typed,\n      // TODO: add a signature 'Array.<function>'\n      '...Function': function (fns) {\n        var err;\n        var name = getName(fns);\n        var signatures = {};\n\n        for (var i = 0; i < fns.length; i++) {\n          var fn = fns[i];\n\n          // test whether this is a typed-function\n          if (!(typeof fn.signatures === 'object')) {\n            err = new TypeError('Function is no typed-function (index: ' + i + ')');\n            err.data = {index: i};\n            throw err;\n          }\n\n          // merge the signatures\n          for (var signature in fn.signatures) {\n            if (fn.signatures.hasOwnProperty(signature)) {\n              if (signatures.hasOwnProperty(signature)) {\n                if (fn.signatures[signature] !== signatures[signature]) {\n                  err = new Error('Signature \"' + signature + '\" is defined twice');\n                  err.data = {signature: signature};\n                  throw err;\n                }\n                // else: both signatures point to the same function, that's fine\n              }\n              else {\n                signatures[signature] = fn.signatures[signature];\n              }\n            }\n          }\n        }\n\n        return _typed(name, signatures);\n      }\n    });\n\n    /**\n     * Find a specific signature from a (composed) typed function, for\n     * example:\n     *\n     *   typed.find(fn, ['number', 'string'])\n     *   typed.find(fn, 'number, string')\n     *\n     * Function find only only works for exact matches.\n     *\n     * @param {Function} fn                   A typed-function\n     * @param {string | string[]} signature   Signature to be found, can be\n     *                                        an array or a comma separated string.\n     * @return {Function}                     Returns the matching signature, or\n     *                                        throws an errror when no signature\n     *                                        is found.\n     */\n    function find (fn, signature) {\n      if (!fn.signatures) {\n        throw new TypeError('Function is no typed-function');\n      }\n\n      // normalize input\n      var arr;\n      if (typeof signature === 'string') {\n        arr = signature.split(',');\n        for (var i = 0; i < arr.length; i++) {\n          arr[i] = arr[i].trim();\n        }\n      }\n      else if (Array.isArray(signature)) {\n        arr = signature;\n      }\n      else {\n        throw new TypeError('String array or a comma separated string expected');\n      }\n\n      var str = arr.join(',');\n\n      // find an exact match\n      var match = fn.signatures[str];\n      if (match) {\n        return match;\n      }\n\n      // TODO: extend find to match non-exact signatures\n\n      throw new TypeError('Signature not found (signature: ' + (fn.name || 'unnamed') + '(' + arr.join(', ') + '))');\n    }\n\n    /**\n     * Convert a given value to another data type.\n     * @param {*} value\n     * @param {string} type\n     */\n    function convert (value, type) {\n      var from = getTypeOf(value);\n\n      // check conversion is needed\n      if (type === from) {\n        return value;\n      }\n\n      for (var i = 0; i < typed.conversions.length; i++) {\n        var conversion = typed.conversions[i];\n        if (conversion.from === from && conversion.to === type) {\n          return conversion.convert(value);\n        }\n      }\n\n      throw new Error('Cannot convert from ' + from + ' to ' + type);\n    }\n\n    // attach types and conversions to the final `typed` function\n    typed.config = config;\n    typed.types = types;\n    typed.conversions = conversions;\n    typed.ignore = ignore;\n    typed.create = create;\n    typed.find = find;\n    typed.convert = convert;\n\n    // add a type\n    typed.addType = function (type) {\n      if (!type || typeof type.name !== 'string' || typeof type.test !== 'function') {\n        throw new TypeError('Object with properties {name: string, test: function} expected');\n      }\n\n      typed.types.push(type);\n    };\n\n    // add a conversion\n    typed.addConversion = function (conversion) {\n      if (!conversion\n          || typeof conversion.from !== 'string'\n          || typeof conversion.to !== 'string'\n          || typeof conversion.convert !== 'function') {\n        throw new TypeError('Object with properties {from: string, to: string, convert: function} expected');\n      }\n\n      typed.conversions.push(conversion);\n    };\n\n    return typed;\n  }\n\n  return create();\n}));\n\n\n\n// WEBPACK FOOTER //\n// node_modules/typed-function/typed-function.js","'use strict';\n\n/**\n * @typedef {{sign: '+' | '-' | '', coefficients: number[], exponent: number}} SplitValue\n */\n\n/**\n * Test whether value is a number\n * @param {*} value\n * @return {boolean} isNumber\n */\nexports.isNumber = function(value) {\n  return typeof value === 'number';\n};\n\n/**\n * Check if a number is integer\n * @param {number | boolean} value\n * @return {boolean} isInteger\n */\nexports.isInteger = function(value) {\n  return isFinite(value)\n      ? (value == Math.round(value))\n      : false;\n  // Note: we use ==, not ===, as we can have Booleans as well\n};\n\n/**\n * Calculate the sign of a number\n * @param {number} x\n * @returns {*}\n */\nexports.sign = Math.sign || function(x) {\n  if (x > 0) {\n    return 1;\n  }\n  else if (x < 0) {\n    return -1;\n  }\n  else {\n    return 0;\n  }\n};\n\n/**\n * Convert a number to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'engineering'    Always use engineering notation.\n *                                          For example '123.4e+0' and '14.0e+6'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential' and\n *                                          'auto', `precision` defines the total\n *                                          number of significant digits returned\n *                                          and is undefined by default.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point, and is 0 by default.\n *                     {Object} exponential An object containing two parameters,\n *                                          {number} lower and {number} upper,\n *                                          used by notation 'auto' to determine\n *                                          when to return exponential notation.\n *                                          Default values are `lower=1e-3` and\n *                                          `upper=1e5`.\n *                                          Only applicable for notation `auto`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4);                                        // '6.4'\n *    format(1240000);                                    // '1.24e6'\n *    format(1/3);                                        // '0.3333333333333333'\n *    format(1/3, 3);                                     // '0.333'\n *    format(21385, 2);                                   // '21000'\n *    format(12.071, {notation: 'fixed'});                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2});  // '2.30'\n *    format(52.8,   {notation: 'exponential'});          // '5.28e+1'\n *    format(12345678, {notation: 'engineering'});        // '12.345678e+6'\n *\n * @param {number} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexports.format = function(value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (value === Infinity) {\n    return 'Infinity';\n  }\n  else if (value === -Infinity) {\n    return '-Infinity';\n  }\n  else if (isNaN(value)) {\n    return 'NaN';\n  }\n\n  // default values for options\n  var notation = 'auto';\n  var precision = undefined;\n\n  if (options) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    }\n\n    // determine precision from options\n    if (exports.isNumber(options)) {\n      precision = options;\n    }\n    else if (options.precision) {\n      precision = options.precision;\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'engineering':\n      return exports.toEngineering(value, precision);\n\n    case 'auto':\n      return exports\n          .toPrecision(value, precision, options && options.exponential)\n\n          // remove trailing zeros after the decimal point\n          .replace(/((\\.\\d*?)(0+))($|e)/, function () {\n            var digits = arguments[2];\n            var e = arguments[4];\n            return (digits !== '.') ? digits + e : e;\n          });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n\n/**\n * Split a number into sign, coefficients, and exponent\n * @param {number | string} value\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n */\nexports.splitNumber = function (value) {\n  // parse the input value\n  var match = String(value).toLowerCase().match(/^0*?(-?)(\\d+\\.?\\d*)(e([+-]?\\d+))?$/);\n  if (!match) {\n    throw new SyntaxError('Invalid number ' + value);\n  }\n\n  var sign         = match[1];\n  var digits       = match[2];\n  var exponent     = parseFloat(match[4] || '0');\n\n  var dot = digits.indexOf('.');\n  exponent += (dot !== -1) ? (dot - 1) : (digits.length - 1);\n\n  var coefficients = digits\n      .replace('.', '')  // remove the dot (must be removed before removing leading zeros)\n      .replace(/^0*/, function (zeros) {\n        // remove leading zeros, add their count to the exponent\n        exponent -= zeros.length;\n        return '';\n      })\n      .replace(/0*$/, '') // remove trailing zeros\n      .split('')\n      .map(function (d) {\n        return parseInt(d);\n      });\n\n  if (coefficients.length === 0) {\n    coefficients.push(0);\n    exponent++;\n  }\n\n  return {\n    sign: sign,\n    coefficients: coefficients,\n    exponent: exponent\n  };\n};\n\n\n/**\n * Format a number in engineering notation. Like '1.23e+6', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toEngineering = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n  \n  var rounded = exports.roundDigits(exports.splitNumber(value), precision);\n\n  var e = rounded.exponent;\n  var c = rounded.coefficients;\n\n  // find nearest lower multiple of 3 for exponent\n  var newExp = e % 3 === 0 ? e : (e < 0 ? (e - 3) - (e % 3) : e - (e % 3));\n\n  // concatenate coefficients with necessary zeros\n  var significandsDiff = e >= 0 ? e : Math.abs(newExp);\n\n  // add zeros if necessary (for ex: 1e+8)\n  if (c.length - 1 < significandsDiff) c = c.concat(zeros(significandsDiff - (c.length - 1)));\n\n  // find difference in exponents\n  var expDiff = Math.abs(e - newExp);\n\n  var decimalIdx = 1;\n\n  // push decimal index over by expDiff times\n  while (--expDiff >= 0) decimalIdx++;\n\n  // if all coefficient values are zero after the decimal point, don't add a decimal value.\n  // otherwise concat with the rest of the coefficients\n  var decimals = c.slice(decimalIdx).join('');\n  var decimalVal = decimals.match(/[1-9]/) ? ('.' + decimals) : '';\n\n  var str = c.slice(0, decimalIdx).join('') +\n      decimalVal +\n      'e' + (e >= 0 ? '+' : '') + newExp.toString();\n  return rounded.sign + str;\n};\n\n/**\n * Format a number with fixed notation.\n * @param {number | string} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toFixed = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  var splitValue = exports.splitNumber(value)\n  var rounded = exports.roundDigits(splitValue, splitValue.exponent + 1 + (precision || 0));\n  var c = rounded.coefficients;\n  var p = rounded.exponent + 1; // exponent may have changed\n\n  // append zeros if needed\n  var pp = p + (precision || 0);\n  if (c.length < pp) {\n    c = c.concat(zeros(pp - c.length));\n  }\n\n  // prepend zeros if needed\n  if (p < 0) {\n    c = zeros(-p + 1).concat(c);\n    p = 1;\n  }\n\n  // insert a dot if needed\n  if (precision) {\n    c.splice(p, 0, (p === 0) ? '0.' : '.');\n  }\n\n  return rounded.sign + c.join('');\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {number | string} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n */\nexports.toExponential = function (value, precision) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  // round if needed, else create a clone\n  var split = exports.splitNumber(value)\n  var rounded = precision ? exports.roundDigits(split, precision) : split;\n  var c = rounded.coefficients;\n  var e = rounded.exponent;\n\n  // append zeros if needed\n  if (c.length < precision) {\n    c = c.concat(zeros(precision - c.length));\n  }\n\n  // format as `C.CCCe+EEE` or `C.CCCe-EEE`\n  var first = c.shift();\n  return rounded.sign + first + (c.length > 0 ? ('.' + c.join('')) : '') +\n      'e' + (e >= 0 ? '+' : '') + e;\n}\n\n/**\n * Format a number with a certain precision\n * @param {number | string} value\n * @param {number} [precision=undefined] Optional number of digits.\n * @param {{lower: number | undefined, upper: number | undefined}} [options]\n *                                       By default:\n *                                         lower = 1e-3 (excl)\n *                                         upper = 1e+5 (incl)\n * @return {string}\n */\nexports.toPrecision = function (value, precision, options) {\n  if (isNaN(value) || !isFinite(value)) {\n    return String(value);\n  }\n\n  // determine lower and upper bound for exponential notation.\n  var lower = (options && options.lower !== undefined) ? options.lower : 1e-3;\n  var upper = (options && options.upper !== undefined) ? options.upper : 1e+5;\n\n  var split = exports.splitNumber(value)\n  var abs = Math.abs(Math.pow(10, split.exponent));\n  if (abs < lower || abs >= upper) {\n    // exponential notation\n    return exports.toExponential(value, precision);\n  }\n  else {\n    var rounded = precision ? exports.roundDigits(split, precision) : split;\n    var c = rounded.coefficients;\n    var e = rounded.exponent;\n\n    // append trailing zeros\n    if (c.length < precision) {\n      c = c.concat(zeros(precision - c.length));\n    }\n\n    // append trailing zeros\n    // TODO: simplify the next statement\n    c = c.concat(zeros(e - c.length + 1 +\n        (c.length < precision ? precision - c.length : 0)));\n\n    // prepend zeros\n    c = zeros(-e).concat(c);\n\n    var dot = e > 0 ? e : 0;\n    if (dot < c.length - 1) {\n      c.splice(dot + 1, 0, '.');\n    }\n\n    return rounded.sign + c.join('');\n  }\n}\n\n/**\n * Round the number of digits of a number *\n * @param {SplitValue} split       A value split with .splitNumber(value)\n * @param {number} precision  A positive integer\n * @return {SplitValue}\n *              Returns an object containing sign, coefficients, and exponent\n *              with rounded digits\n */\nexports.roundDigits = function (split, precision) {\n  // create a clone\n  var rounded = {\n    sign: split.sign,\n    coefficients: split.coefficients,\n    exponent: split.exponent\n  }\n  var c = rounded.coefficients;\n\n  // prepend zeros if needed\n  while (precision <= 0) {\n    c.unshift(0);\n    rounded.exponent++;\n    precision++;\n  }\n\n  if (c.length > precision) {\n    var removed = c.splice(precision, c.length - precision);\n\n    if (removed[0] >= 5) {\n      var i = precision - 1;\n      c[i]++;\n      while (c[i] === 10) {\n        c.pop();\n        if (i === 0) {\n          c.unshift(0);\n          rounded.exponent++;\n          i++;\n        }\n        i--;\n        c[i]++;\n      }\n    }\n  }\n\n  return rounded;\n};\n\n/**\n * Create an array filled with zeros.\n * @param {number} length\n * @return {Array}\n */\nfunction zeros(length) {\n  var arr = [];\n  for (var i = 0; i < length; i++) {\n    arr.push(0);\n  }\n  return arr;\n}\n\n/**\n * Count the number of significant digits of a number.\n *\n * For example:\n *   2.34 returns 3\n *   0.0034 returns 2\n *   120.5e+30 returns 4\n *\n * @param {number} value\n * @return {number} digits   Number of significant digits\n */\nexports.digits = function(value) {\n  return value\n      .toExponential()\n      .replace(/e.*$/, '')          // remove exponential notation\n      .replace( /^0\\.?0*|\\./, '')   // remove decimal point and leading zeros\n      .length\n};\n\n/**\n * Minimum number added to one that makes the result different than one\n */\nexports.DBL_EPSILON = Number.EPSILON || 2.2204460492503130808472633361816E-16;\n\n/**\n * Compares two floating point numbers.\n * @param {number} x          First value to compare\n * @param {number} y          Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n*/\nexports.nearlyEqual = function(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon == null) {\n    return x == y;\n  }\n\n  // use \"==\" operator, handles infinities\n  if (x == y) {\n    return true;\n  }\n\n  // NaN\n  if (isNaN(x) || isNaN(y)) {\n    return false;\n  }\n\n  // at this point x and y should be finite\n  if(isFinite(x) && isFinite(y)) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = Math.abs(x - y);\n    if (diff < exports.DBL_EPSILON) {\n      return true;\n    }\n    else {\n      // use relative error\n      return diff <= Math.max(Math.abs(x), Math.abs(y)) * epsilon;\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/number.js","'use strict';\n\n/**\n * Test whether a value is a Matrix\n * @param {*} x\n * @returns {boolean} returns true with input is a Matrix\n *                    (like a DenseMatrix or SparseMatrix)\n */\nmodule.exports = function isMatrix (x) {\n  return x && x.constructor.prototype.isMatrix || false;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/collection/isMatrix.js","var Emitter = require('tiny-emitter');\n\n/**\n * Extend given object with emitter functions `on`, `off`, `once`, `emit`\n * @param {Object} obj\n * @return {Object} obj\n */\nexports.mixin = function (obj) {\n  // create event emitter\n  var emitter = new Emitter();\n\n  // bind methods to obj (we don't want to expose the emitter.e Array...)\n  obj.on   = emitter.on.bind(emitter);\n  obj.off  = emitter.off.bind(emitter);\n  obj.once = emitter.once.bind(emitter);\n  obj.emit = emitter.emit.bind(emitter);\n\n  return obj;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/emitter.js","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/tiny-emitter/index.js","'use strict';\n\nvar lazy = require('../../utils/object').lazy;\nvar isFactory = require('../../utils/object').isFactory;\nvar traverse = require('../../utils/object').traverse;\nvar ArgumentsError = require('../../error/ArgumentsError');\n\nfunction factory (type, config, load, typed, math) {\n  /**\n   * Import functions from an object or a module\n   *\n   * Syntax:\n   *\n   *    math.import(object)\n   *    math.import(object, options)\n   *\n   * Where:\n   *\n   * - `object: Object`\n   *   An object with functions to be imported.\n   * - `options: Object` An object with import options. Available options:\n   *   - `override: boolean`\n   *     If true, existing functions will be overwritten. False by default.\n   *   - `silent: boolean`\n   *     If true, the function will not throw errors on duplicates or invalid\n   *     types. False by default.\n   *   - `wrap: boolean`\n   *     If true, the functions will be wrapped in a wrapper function\n   *     which converts data types like Matrix to primitive data types like Array.\n   *     The wrapper is needed when extending math.js with libraries which do not\n   *     support these data type. False by default.\n   *\n   * Examples:\n   *\n   *    // define new functions and variables\n   *    math.import({\n   *      myvalue: 42,\n   *      hello: function (name) {\n   *        return 'hello, ' + name + '!';\n   *      }\n   *    });\n   *\n   *    // use the imported function and variable\n   *    math.myvalue * 2;               // 84\n   *    math.hello('user');             // 'hello, user!'\n   *\n   *    // import the npm module 'numbers'\n   *    // (must be installed first with `npm install numbers`)\n   *    math.import(require('numbers'), {wrap: true});\n   *\n   *    math.fibonacci(7); // returns 13\n   *\n   * @param {Object | Array} object   Object with functions to be imported.\n   * @param {Object} [options]        Import options.\n   */\n  function math_import(object, options) {\n    var num = arguments.length;\n    if (num !== 1 && num !== 2) {\n      throw new ArgumentsError('import', num, 1, 2);\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (isFactory(object)) {\n      _importFactory(object, options);\n    }\n    // TODO: allow a typed-function with name too\n    else if (Array.isArray(object)) {\n      object.forEach(function (entry) {\n        math_import(entry, options);\n      });\n    }\n    else if (typeof object === 'object') {\n      // a map with functions\n      for (var name in object) {\n        if (object.hasOwnProperty(name)) {\n          var value = object[name];\n          if (isSupportedType(value)) {\n            _import(name, value, options);\n          }\n          else if (isFactory(object)) {\n            _importFactory(object, options);\n          }\n          else {\n            math_import(value, options);\n          }\n        }\n      }\n    }\n    else {\n      if (!options.silent) {\n        throw new TypeError('Factory, Object, or Array expected');\n      }\n    }\n  }\n\n  /**\n   * Add a property to the math namespace and create a chain proxy for it.\n   * @param {string} name\n   * @param {*} value\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n  function _import(name, value, options) {\n    // TODO: refactor this function, it's to complicated and contains duplicate code\n    if (options.wrap && typeof value === 'function') {\n      // create a wrapper around the function\n      value = _wrap(value);\n    }\n\n    if (isTypedFunction(math[name]) && isTypedFunction(value)) {\n      if (options.override) {\n        // give the typed function the right name\n        value = typed(name, value.signatures);\n      }\n      else {\n        // merge the existing and typed function\n        value = typed(math[name], value);\n      }\n\n      math[name] = value;\n      _importTransform(name, value);\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (math[name] === undefined || options.override) {\n      math[name] = value;\n      _importTransform(name, value);\n      math.emit('import', name, function resolver() {\n        return value;\n      });\n      return;\n    }\n\n    if (!options.silent) {\n      throw new Error('Cannot import \"' + name + '\": already exists');\n    }\n  }\n\n  function _importTransform (name, value) {\n    if (value && typeof value.transform === 'function') {\n      math.expression.transform[name] = value.transform;\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value.transform\n      }\n    }\n    else {\n      // remove existing transform\n      delete math.expression.transform[name]\n      if (allowedInExpressions(name)) {\n        math.expression.mathWithTransform[name] = value\n      }\n    }\n  }\n\n  /**\n   * Create a wrapper a round an function which converts the arguments\n   * to their primitive values (like convert a Matrix to Array)\n   * @param {Function} fn\n   * @return {Function} Returns the wrapped function\n   * @private\n   */\n  function _wrap (fn) {\n    var wrapper = function wrapper () {\n      var args = [];\n      for (var i = 0, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        args[i] = arg && arg.valueOf();\n      }\n      return fn.apply(math, args);\n    };\n\n    if (fn.transform) {\n      wrapper.transform = fn.transform;\n    }\n\n    return wrapper;\n  }\n\n  /**\n   * Import an instance of a factory into math.js\n   * @param {{factory: Function, name: string, path: string, math: boolean}} factory\n   * @param {Object} options  See import for a description of the options\n   * @private\n   */\n  function _importFactory(factory, options) {\n    if (typeof factory.name === 'string') {\n      var name = factory.name;\n      var existingTransform = name in math.expression.transform\n      var namespace = factory.path ? traverse(math, factory.path) : math;\n      var existing = namespace.hasOwnProperty(name) ? namespace[name] : undefined;\n\n      var resolver = function () {\n        var instance = load(factory);\n        if (instance && typeof instance.transform === 'function') {\n          throw new Error('Transforms cannot be attached to factory functions. ' +\n              'Please create a separate function for it with exports.path=\"expression.transform\"');\n        }\n\n        if (isTypedFunction(existing) && isTypedFunction(instance)) {\n          if (options.override) {\n            // replace the existing typed function (nothing to do)\n          }\n          else {\n            // merge the existing and new typed function\n            instance = typed(existing, instance);\n          }\n\n          return instance;\n        }\n\n        if (existing === undefined || options.override) {\n          return instance;\n        }\n\n        if (!options.silent) {\n          throw new Error('Cannot import \"' + name + '\": already exists');\n        }\n      };\n\n      if (factory.lazy !== false) {\n        lazy(namespace, name, resolver);\n\n        if (!existingTransform) {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            lazy(math.expression.mathWithTransform, name, resolver);\n          }\n        }\n      }\n      else {\n        namespace[name] = resolver();\n\n        if (!existingTransform) {\n          if (factory.path === 'expression.transform' || factoryAllowedInExpressions(factory)) {\n            math.expression.mathWithTransform[name] = resolver();\n          }\n        }\n      }\n\n      math.emit('import', name, resolver, factory.path);\n    }\n    else {\n      // unnamed factory.\n      // no lazy loading\n      load(factory);\n    }\n  }\n\n  /**\n   * Check whether given object is a type which can be imported\n   * @param {Function | number | string | boolean | null | Unit | Complex} object\n   * @return {boolean}\n   * @private\n   */\n  function isSupportedType(object) {\n    return typeof object === 'function'\n        || typeof object === 'number'\n        || typeof object === 'string'\n        || typeof object === 'boolean'\n        || object === null\n        || (object && type.isUnit(object))\n        || (object && type.isComplex(object))\n        || (object && type.isBigNumber(object))\n        || (object && type.isFraction(object))\n        || (object && type.isMatrix(object))\n        || (object && Array.isArray(object))\n  }\n\n  /**\n   * Test whether a given thing is a typed-function\n   * @param {*} fn\n   * @return {boolean} Returns true when `fn` is a typed-function\n   */\n  function isTypedFunction (fn) {\n    return typeof fn === 'function' && typeof fn.signatures === 'object';\n  }\n\n  function allowedInExpressions (name) {\n    return !unsafe.hasOwnProperty(name);\n  }\n\n  function factoryAllowedInExpressions (factory) {\n    return factory.path === undefined && !unsafe.hasOwnProperty(factory.name);\n  }\n\n  // namespaces and functions not available in the parser for safety reasons\n  var unsafe = {\n    'expression': true,\n    'type': true,\n    'docs': true,\n    'error': true,\n    'json': true,\n    'chain': true // chain method not supported. Note that there is a unit chain too.\n  };\n\n  return math_import;\n}\n\nexports.math = true; // request access to the math namespace as 5th argument of the factory function\nexports.name = 'import';\nexports.factory = factory;\nexports.lazy = true;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/core/function/import.js","'use strict';\n\n/**\n * Create a syntax error with the message:\n *     'Wrong number of arguments in function <fn> (<count> provided, <min>-<max> expected)'\n * @param {string} fn     Function name\n * @param {number} count  Actual argument count\n * @param {number} min    Minimum required argument count\n * @param {number} [max]  Maximum required argument count\n * @extends Error\n */\nfunction ArgumentsError(fn, count, min, max) {\n  if (!(this instanceof ArgumentsError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.fn = fn;\n  this.count = count;\n  this.min = min;\n  this.max = max;\n\n  this.message = 'Wrong number of arguments in function ' + fn +\n      ' (' + count + ' provided, ' +\n      min + ((max != undefined) ? ('-' + max) : '') + ' expected)';\n\n  this.stack = (new Error()).stack;\n}\n\nArgumentsError.prototype = new Error();\nArgumentsError.prototype.constructor = Error;\nArgumentsError.prototype.name = 'ArgumentsError';\nArgumentsError.prototype.isArgumentsError = true;\n\nmodule.exports = ArgumentsError;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/error/ArgumentsError.js","'use strict';\n\nvar object = require('../../utils/object');\n\nfunction factory (type, config, load, typed, math) {\n  var MATRIX = ['Matrix', 'Array'];                   // valid values for option matrix\n  var NUMBER = ['number', 'BigNumber', 'Fraction'];   // valid values for option number\n\n  /**\n   * Set configuration options for math.js, and get current options.\n   * Will emit a 'config' event, with arguments (curr, prev, changes).\n   *\n   * Syntax:\n   *\n   *     math.config(config: Object): Object\n   *\n   * Examples:\n   *\n   *     math.config().number;                // outputs 'number'\n   *     math.eval('0.4');                    // outputs number 0.4\n   *     math.config({number: 'Fraction'});\n   *     math.eval('0.4');                    // outputs Fraction 2/5\n   *\n   * @param {Object} [options] Available options:\n   *                            {number} epsilon\n   *                              Minimum relative difference between two\n   *                              compared values, used by all comparison functions.\n   *                            {string} matrix\n   *                              A string 'Matrix' (default) or 'Array'.\n   *                            {string} number\n   *                              A string 'number' (default), 'BigNumber', or 'Fraction'\n   *                            {number} precision\n   *                              The number of significant digits for BigNumbers.\n   *                              Not applicable for Numbers.\n   *                            {string} parenthesis\n   *                              How to display parentheses in LaTeX and string\n   *                              output.\n   *                            {string} randomSeed\n   *                              Random seed for seeded pseudo random number generator.\n   *                              Set to null to randomly seed.\n   * @return {Object} Returns the current configuration\n   */\n  function _config(options) {\n    if (options) {\n      var prev = object.map(config, object.clone);\n\n      // validate some of the options\n      validateOption(options, 'matrix', MATRIX);\n      validateOption(options, 'number', NUMBER);\n\n      // merge options\n      object.deepExtend(config, options);\n\n      var curr = object.map(config, object.clone);\n\n      var changes = object.map(options, object.clone);\n\n      // emit 'config' event\n      math.emit('config', curr, prev, changes);\n\n      return curr;\n    }\n    else {\n      return object.map(config, object.clone);\n    }\n  }\n\n  // attach the valid options to the function so they can be extended\n  _config.MATRIX = MATRIX;\n  _config.NUMBER = NUMBER;\n\n  return _config;\n}\n\n/**\n * Test whether an Array contains a specific item.\n * @param {Array.<string>} array\n * @param {string} item\n * @return {boolean}\n */\nfunction contains (array, item) {\n  return array.indexOf(item) !== -1;\n}\n\n/**\n * Find a string in an array. Case insensitive search\n * @param {Array.<string>} array\n * @param {string} item\n * @return {number} Returns the index when found. Returns -1 when not found\n */\nfunction findIndex (array, item) {\n  return array\n      .map(function (i) {\n        return i.toLowerCase();\n      })\n      .indexOf(item.toLowerCase());\n}\n\n/**\n * Validate an option\n * @param {Object} options         Object with options\n * @param {string} name            Name of the option to validate\n * @param {Array.<string>} values  Array with valid values for this option\n */\nfunction validateOption(options, name, values) {\n  if (options[name] !== undefined && !contains(values, options[name])) {\n    var index = findIndex(values, options[name]);\n    if (index !== -1) {\n      // right value, wrong casing\n      // TODO: lower case values are deprecated since v3, remove this warning some day.\n      console.warn('Warning: Wrong casing for configuration option \"' + name + '\", should be \"' + values[index] + '\" instead of \"' + options[name] + '\".');\n\n      options[name] = values[index]; // change the option to the right casing\n    }\n    else {\n      // unknown value\n      console.warn('Warning: Unknown value \"' + options[name] + '\" for configuration option \"' + name + '\". Available options: ' + values.map(JSON.stringify).join(', ') + '.');\n    }\n  }\n}\n\nexports.name = 'config';\nexports.math = true; // request the math namespace as fifth argument\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/core/function/config.js","module.exports = [\n  // types\n  require('./Matrix'),\n  require('./DenseMatrix'),\n  require('./SparseMatrix'),\n  require('./Spa'),\n  require('./FibonacciHeap'),\n  require('./ImmutableDenseMatrix'),\n  require('./MatrixIndex'),\n  require('./Range'),\n\n  // construction functions\n  require('./function/index'),\n  require('./function/matrix'),\n  require('./function/sparse')\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/index.js","'use strict';\n\nvar util = require('../../utils/index');\n\nvar string = util.string;\n\nvar isString = string.isString;\n\nfunction factory (type, config, load, typed) {\n  /**\n   * @constructor Matrix\n   *\n   * A Matrix is a wrapper around an Array. A matrix can hold a multi dimensional\n   * array. A matrix can be constructed as:\n   *     var matrix = math.matrix(data)\n   *\n   * Matrix contains the functions to resize, get and set values, get the size,\n   * clone the matrix and to convert the matrix to a vector, array, or scalar.\n   * Furthermore, one can iterate over the matrix using map and forEach.\n   * The internal Array of the Matrix can be accessed using the function valueOf.\n   *\n   * Example usage:\n   *     var matrix = math.matrix([[1, 2], [3, 4]]);\n   *     matix.size();              // [2, 2]\n   *     matrix.resize([3, 2], 5);\n   *     matrix.valueOf();          // [[1, 2], [3, 4], [5, 5]]\n   *     matrix.subset([1,2])       // 3 (indexes are zero-based)\n   *\n   */\n  function Matrix() {\n    if (!(this instanceof Matrix)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Matrix.prototype.type = 'Matrix';\n  Matrix.prototype.isMatrix = true;\n\n  /**\n   * Get the Matrix storage constructor for the given format.\n   *\n   * @param {string} format       The Matrix storage format.\n   *\n   * @return {Function}           The Matrix storage constructor.\n   */\n  Matrix.storage = function (format) {\n    // check storage format is a string\n    if (!isString(format)) {\n      throw new TypeError('format must be a string value');\n    }\n\n    // get storage format constructor\n    var constructor = Matrix._storage[format];\n    if (!constructor) {\n      throw new SyntaxError('Unsupported matrix storage format: ' + format);\n    }\n\n    // return storage constructor\n    return constructor;\n  };\n\n  // a map with all constructors for all storage types\n  Matrix._storage = {};\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @return {string}           The storage format.\n   */\n  Matrix.prototype.storage = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke storage on a Matrix interface');\n  };\n  \n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @return {string}           The datatype.\n   */\n  Matrix.prototype.datatype = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke datatype on a Matrix interface');\n  };\n\n  /**\n   * Create a new Matrix With the type of the current matrix instance\n   * @param {Array | Object} data\n   * @param {string} [datatype]\n   */\n  Matrix.prototype.create = function (data, datatype) {\n    throw new Error('Cannot invoke create on a Matrix interface');\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | Matrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  Matrix.prototype.subset = function (index, replacement, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke subset on a Matrix interface');\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  Matrix.prototype.get = function (index) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke get on a Matrix interface');\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {Matrix} self\n   */\n  Matrix.prototype.set = function (index, value, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke set on a Matrix interface');\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  Matrix.prototype.resize = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke resize on a Matrix interface');\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  Matrix.prototype.reshape = function (size, defaultValue) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke reshape on a Matrix interface');\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {Matrix} clone\n   */\n  Matrix.prototype.clone = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke clone on a Matrix interface');\n  };\n\n  /**\n   * Retrieve the size of the matrix.\n   * @returns {number[]} size\n   */\n  Matrix.prototype.size = function() {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke size on a Matrix interface');\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {Matrix} matrix\n   */\n  Matrix.prototype.map = function (callback, skipZeros) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke map on a Matrix interface');\n  };\n\n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  Matrix.prototype.forEach = function (callback) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke forEach on a Matrix interface');\n  };\n\n  /**\n   * Create an Array with a copy of the data of the Matrix\n   * @returns {Array} array\n   */\n  Matrix.prototype.toArray = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toArray on a Matrix interface');\n  };\n\n  /**\n   * Get the primitive value of the Matrix: a multidimensional array\n   * @returns {Array} array\n   */\n  Matrix.prototype.valueOf = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke valueOf on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Matrix.prototype.format = function (options) {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke format on a Matrix interface');\n  };\n\n  /**\n   * Get a string representation of the matrix\n   * @returns {string} str\n   */\n  Matrix.prototype.toString = function () {\n    // must be implemented by each of the Matrix implementations\n    throw new Error('Cannot invoke toString on a Matrix interface');\n  };\n   \n  // exports\n  return Matrix;\n}\n\nexports.name = 'Matrix';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/Matrix.js","'use strict';\n\nexports.array = require('./array');\nexports['boolean'] = require('./boolean');\nexports['function'] = require('./function');\nexports.number = require('./number');\nexports.object = require('./object');\nexports.string = require('./string');\nexports.types = require('./types');\nexports.emitter = require('./emitter');\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/index.js","'use strict';\n\nvar number = require('./number');\nvar string = require('./string');\nvar object = require('./object');\nvar types = require('./types');\n\nvar DimensionError = require('../error/DimensionError');\nvar IndexError = require('../error/IndexError');\n\n/**\n * Calculate the size of a multi dimensional array.\n * This function checks the size of the first entry, it does not validate\n * whether all dimensions match. (use function `validate` for that)\n * @param {Array} x\n * @Return {Number[]} size\n */\nexports.size = function (x) {\n  var s = [];\n\n  while (Array.isArray(x)) {\n    s.push(x.length);\n    x = x[0];\n  }\n\n  return s;\n};\n\n/**\n * Recursively validate whether each element in a multi dimensional array\n * has a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @param {number} dim   Current dimension\n * @throws DimensionError\n * @private\n */\nfunction _validate(array, size, dim) {\n  var i;\n  var len = array.length;\n\n  if (len != size[dim]) {\n    throw new DimensionError(len, size[dim]);\n  }\n\n  if (dim < size.length - 1) {\n    // recursively validate each child array\n    var dimNext = dim + 1;\n    for (i = 0; i < len; i++) {\n      var child = array[i];\n      if (!Array.isArray(child)) {\n        throw new DimensionError(size.length - 1, size.length, '<');\n      }\n      _validate(array[i], size, dimNext);\n    }\n  }\n  else {\n    // last dimension. none of the childs may be an array\n    for (i = 0; i < len; i++) {\n      if (Array.isArray(array[i])) {\n        throw new DimensionError(size.length + 1, size.length, '>');\n      }\n    }\n  }\n}\n\n/**\n * Validate whether each element in a multi dimensional array has\n * a size corresponding to the provided size array.\n * @param {Array} array    Array to be validated\n * @param {number[]} size  Array with the size of each dimension\n * @throws DimensionError\n */\nexports.validate = function(array, size) {\n  var isScalar = (size.length == 0);\n  if (isScalar) {\n    // scalar\n    if (Array.isArray(array)) {\n      throw new DimensionError(array.length, 0);\n    }\n  }\n  else {\n    // array\n    _validate(array, size, 0);\n  }\n};\n\n/**\n * Test whether index is an integer number with index >= 0 and index < length\n * when length is provided\n * @param {number} index    Zero-based index\n * @param {number} [length] Length of the array\n */\nexports.validateIndex = function(index, length) {\n  if (!number.isNumber(index) || !number.isInteger(index)) {\n    throw new TypeError('Index must be an integer (value: ' + index + ')');\n  }\n  if (index < 0 || (typeof length === 'number' && index >= length)) {\n    throw new IndexError(index, length);\n  }\n};\n\n// a constant used to specify an undefined defaultValue\nexports.UNINITIALIZED = {};\n\n/**\n * Resize a multi dimensional array. The resized array is returned.\n * @param {Array} array         Array to be resized\n * @param {Array.<number>} size Array with the size of each dimension\n * @param {*} [defaultValue=0]  Value to be filled in in new entries,\n *                              zero by default. To leave new entries undefined,\n *                              specify array.UNINITIALIZED as defaultValue\n * @return {Array} array         The resized array\n */\nexports.resize = function(array, size, defaultValue) {\n  // TODO: add support for scalars, having size=[] ?\n\n  // check the type of the arguments\n  if (!Array.isArray(array) || !Array.isArray(size)) {\n    throw new TypeError('Array expected');\n  }\n  if (size.length === 0) {\n    throw new Error('Resizing to scalar is not supported');\n  }\n\n  // check whether size contains positive integers\n  size.forEach(function (value) {\n    if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n      throw new TypeError('Invalid size, must contain positive integers ' +\n          '(size: ' + string.format(size) + ')');\n    }\n  });\n\n  // recursively resize the array\n  var _defaultValue = (defaultValue !== undefined) ? defaultValue : 0;\n  _resize(array, size, 0, _defaultValue);\n\n  return array;\n};\n\n/**\n * Recursively resize a multi dimensional array\n * @param {Array} array         Array to be resized\n * @param {number[]} size       Array with the size of each dimension\n * @param {number} dim          Current dimension\n * @param {*} [defaultValue]    Value to be filled in in new entries,\n *                              undefined by default.\n * @private\n */\nfunction _resize (array, size, dim, defaultValue) {\n  var i;\n  var elem;\n  var oldLen = array.length;\n  var newLen = size[dim];\n  var minLen = Math.min(oldLen, newLen);\n\n  // apply new length\n  array.length = newLen;\n\n  if (dim < size.length - 1) {\n    // non-last dimension\n    var dimNext = dim + 1;\n\n    // resize existing child arrays\n    for (i = 0; i < minLen; i++) {\n      // resize child array\n      elem = array[i];\n      if (!Array.isArray(elem)) {\n        elem = [elem]; // add a dimension\n        array[i] = elem;\n      }\n      _resize(elem, size, dimNext, defaultValue);\n    }\n\n    // create new child arrays\n    for (i = minLen; i < newLen; i++) {\n      // get child array\n      elem = [];\n      array[i] = elem;\n\n      // resize new child array\n      _resize(elem, size, dimNext, defaultValue);\n    }\n  }\n  else {\n    // last dimension\n\n    // remove dimensions of existing values\n    for (i = 0; i < minLen; i++) {\n      while (Array.isArray(array[i])) {\n        array[i] = array[i][0];\n      }\n    }\n\n    if(defaultValue !== exports.UNINITIALIZED) {\n      // fill new elements with the default value\n      for (i = minLen; i < newLen; i++) {\n        array[i] = defaultValue;\n      }\n    }\n  }\n}\n\n/**\n * Re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nexports.reshape = function(array, sizes) {\n  var flatArray = exports.flatten(array);\n  var newArray;\n\n  var product = function (arr) {\n    return arr.reduce(function (prev, curr) {\n      return prev * curr;\n    });\n  };\n\n  if (!Array.isArray(array) || !Array.isArray(sizes)) {\n    throw new TypeError('Array expected');\n  }\n\n  if (sizes.length === 0) {\n    throw new DimensionError(0, product(exports.size(array)), '!=');\n  }\n\n  try {\n    newArray  = _reshape(flatArray, sizes);\n  } catch (e) {\n    if (e instanceof DimensionError) {\n      throw new DimensionError(\n        product(sizes),\n        product(exports.size(array)),\n        '!='\n      );\n    }\n    throw e;\n  }\n\n  if (flatArray.length > 0) {\n    throw new DimensionError(\n      product(sizes),\n      product(exports.size(array)),\n      '!='\n    );\n  }\n\n  return newArray;\n};\n\n/**\n * Recursively re-shape a multi dimensional array to fit the specified dimensions\n * @param {Array} array           Array to be reshaped\n * @param {Array.<number>} sizes  List of sizes for each dimension\n * @returns {Array}               Array whose data has been formatted to fit the\n *                                specified dimensions\n *\n * @throws {DimensionError}       If the product of the new dimension sizes does\n *                                not equal that of the old ones\n */\nfunction _reshape(array, sizes) {\n  var accumulator = [];\n  var i;\n\n  if (sizes.length === 0) {\n    if (array.length === 0) {\n      throw new DimensionError(null, null, '!=');\n    }\n    return array.shift();\n  }\n  for (i = 0; i < sizes[0]; i += 1) {\n    accumulator.push(_reshape(array, sizes.slice(1)));\n  }\n  return accumulator;\n}\n\n\n/**\n * Squeeze a multi dimensional array\n * @param {Array} array\n * @param {Array} [size]\n * @returns {Array} returns the array itself\n */\nexports.squeeze = function(array, size) {\n  var s = size || exports.size(array);\n\n  // squeeze outer dimensions\n  while (Array.isArray(array) && array.length === 1) {\n    array = array[0];\n    s.shift();\n  }\n\n  // find the first dimension to be squeezed\n  var dims = s.length;\n  while (s[dims - 1] === 1) {\n    dims--;\n  }\n\n  // squeeze inner dimensions\n  if (dims < s.length) {\n    array = _squeeze(array, dims, 0);\n    s.length = dims;\n  }\n\n  return array;\n};\n\n/**\n * Recursively squeeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _squeeze (array, dims, dim) {\n  var i, ii;\n\n  if (dim < dims) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _squeeze(array[i], dims, next);\n    }\n  }\n  else {\n    while (Array.isArray(array)) {\n      array = array[0];\n    }\n  }\n\n  return array;\n}\n\n/**\n * Unsqueeze a multi dimensional array: add dimensions when missing\n * \n * Paramter `size` will be mutated to match the new, unqueezed matrix size.\n * \n * @param {Array} array\n * @param {number} dims     Desired number of dimensions of the array\n * @param {number} [outer]  Number of outer dimensions to be added\n * @param {Array} [size]    Current size of array.\n * @returns {Array} returns the array itself\n * @private\n */\nexports.unsqueeze = function(array, dims, outer, size) {\n  var s = size || exports.size(array);\n\n  // unsqueeze outer dimensions\n  if (outer) {\n    for (var i = 0; i < outer; i++) {\n      array = [array];\n      s.unshift(1);\n    }\n  }\n\n  // unsqueeze inner dimensions\n  array = _unsqueeze(array, dims, 0);\n  while (s.length < dims) {\n    s.push(1);\n  }\n\n  return array;\n};\n\n/**\n * Recursively unsqueeze a multi dimensional array\n * @param {Array} array\n * @param {number} dims Required number of dimensions\n * @param {number} dim  Current dimension\n * @returns {Array | *} Returns the squeezed array\n * @private\n */\nfunction _unsqueeze (array, dims, dim) {\n  var i, ii;\n\n  if (Array.isArray(array)) {\n    var next = dim + 1;\n    for (i = 0, ii = array.length; i < ii; i++) {\n      array[i] = _unsqueeze(array[i], dims, next);\n    }\n  }\n  else {\n    for (var d = dim; d < dims; d++) {\n      array = [array];\n    }\n  }\n\n  return array;\n}\n/**\n * Flatten a multi dimensional array, put all elements in a one dimensional\n * array\n * @param {Array} array   A multi dimensional array\n * @return {Array}        The flattened array (1 dimensional)\n */\nexports.flatten = function(array) {\n  if (!Array.isArray(array)) {\n    //if not an array, return as is\n    return array;\n  }\n  var flat = [];\n\n  array.forEach(function callback(value) {\n    if (Array.isArray(value)) {\n      value.forEach(callback);  //traverse through sub-arrays recursively\n    }\n    else {\n      flat.push(value);\n    }\n  });\n\n  return flat;\n};\n\n/**\n * A safe map\n * @param {Array} array\n * @param {function} callback\n */\nexports.map = function (array, callback) {\n  return Array.prototype.map.call(array, callback);\n}\n\n/**\n * A safe forEach\n * @param {Array} array\n * @param {function} callback\n */\nexports.forEach = function (array, callback) {\n  Array.prototype.forEach.call(array, callback);\n}\n\n/**\n * A safe filter\n * @param {Array} array\n * @param {function} callback\n */\nexports.filter = function (array, callback) {\n  if (exports.size(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, callback);\n}\n\n/**\n * Filter values in a callback given a regular expression\n * @param {Array} array\n * @param {RegExp} regexp\n * @return {Array} Returns the filtered array\n * @private\n */\nexports.filterRegExp = function (array, regexp) {\n  if (exports.size(array).length !== 1) {\n    throw new Error('Only one dimensional matrices supported');\n  }\n\n  return Array.prototype.filter.call(array, function (entry) {\n    return regexp.test(entry);\n  });\n}\n\n/**\n * A safe join\n * @param {Array} array\n * @param {string} separator\n */\nexports.join = function (array, separator) {\n  return Array.prototype.join.call(array, separator);\n}\n\n/**\n * Assign a numeric identifier to every element of a sorted array\n * @param {Array}\ta  An array\n * @return {Array}\tAn array of objects containing the original value and its identifier\n */\nexports.identify = function(a) {\n  if (!Array.isArray(a)) {\n\tthrow new TypeError('Array input expected');\n  }\n\t\n  if (a.length === 0) {\n\treturn a;\n  }\n\t\n  var b = [];\n  var count = 0;\n  b[0] = {value: a[0], identifier: 0};\n  for (var i=1; i<a.length; i++) {\n    if (a[i] === a[i-1]) {\n  \tcount++;\n    }\n    else {\n      count = 0;\n    }\n    b.push({value: a[i], identifier: count});\n  }\n  return b;\n}\n\n/**\n * Remove the numeric identifier from the elements\n * @param\ta  An array\n * @return\tAn array of values without identifiers\n */\nexports.generalize = function(a) {\n  if (!Array.isArray(a)) {\n\tthrow new TypeError('Array input expected');\n  }\n\t\n  if (a.length === 0) {\n\treturn a;\n  }\n\t\n  var b = [];\n  for (var i=0; i<a.length; i++) {\n    b.push(a[i].value);\n  }\n  return b;\n}\n\n/**\n * Test whether an object is an array\n * @param {*} value\n * @return {boolean} isArray\n */\nexports.isArray = Array.isArray;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/array.js","'use strict';\n\nvar formatNumber = require('./number').format;\nvar formatBigNumber = require('./bignumber/formatter').format;\nvar isBigNumber = require('./bignumber/isBigNumber');\n\n/**\n * Test whether value is a string\n * @param {*} value\n * @return {boolean} isString\n */\nexports.isString = function(value) {\n  return typeof value === 'string';\n};\n\n/**\n * Check if a text ends with a certain string.\n * @param {string} text\n * @param {string} search\n */\nexports.endsWith = function(text, search) {\n  var start = text.length - search.length;\n  var end = text.length;\n  return (text.substring(start, end) === search);\n};\n\n/**\n * Format a value of any type into a string.\n *\n * Usage:\n *     math.format(value)\n *     math.format(value, precision)\n *\n * When value is a function:\n *\n * - When the function has a property `syntax`, it returns this\n *   syntax description.\n * - In other cases, a string `'function'` is returned.\n *\n * When `value` is an Object:\n *\n * - When the object contains a property `format` being a function, this\n *   function is invoked as `value.format(options)` and the result is returned.\n * - When the object has its own `toString` method, this method is invoked\n *   and the result is returned.\n * - In other cases the function will loop over all object properties and\n *   return JSON object notation like '{\"a\": 2, \"b\": 3}'.\n *\n * Example usage:\n *     math.format(2/7);                // '0.2857142857142857'\n *     math.format(math.pi, 3);         // '3.14'\n *     math.format(new Complex(2, 3));  // '2 + 3i'\n *     math.format('hello');            // '\"hello\"'\n *\n * @param {*} value             Value to be stringified\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @return {string} str\n */\nexports.format = function(value, options) {\n  if (typeof value === 'number') {\n    return formatNumber(value, options);\n  }\n\n  if (isBigNumber(value)) {\n    return formatBigNumber(value, options);\n  }\n\n  // note: we use unsafe duck-typing here to check for Fractions, this is\n  // ok here since we're only invoking toString or concatenating its values\n  if (looksLikeFraction(value)) {\n    if (!options || options.fraction !== 'decimal') {\n      // output as ratio, like '1/3'\n      return (value.s * value.n) + '/' + value.d;\n    }\n    else {\n      // output as decimal, like '0.(3)'\n      return value.toString();\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return formatArray(value, options);\n  }\n\n  if (exports.isString(value)) {\n    return '\"' + value + '\"';\n  }\n\n  if (typeof value === 'function') {\n    return value.syntax ? String(value.syntax) : 'function';\n  }\n\n  if (value && typeof value === 'object') {\n    if (typeof value.format === 'function') {\n      return value.format(options);\n    }\n    else if (value && value.toString() !== {}.toString()) {\n      // this object has a non-native toString method, use that one\n      return value.toString();\n    }\n    else {\n      var entries = [];\n\n      for (var key in value) {\n        if (value.hasOwnProperty(key)) {\n          entries.push('\"' + key + '\": ' + exports.format(value[key], options));\n        }\n      }\n\n      return '{' + entries.join(', ') + '}';\n    }\n  }\n\n  return String(value);\n};\n\n/**\n * Stringify a value into a string enclosed in double quotes.\n * Unescaped double quotes and backslashes inside the value are escaped.\n * @param {*} value\n * @return {string}\n */\nexports.stringify = function (value) {\n  var text = String(value);\n  var escaped = '';\n  var i = 0;\n  while (i < text.length) {\n    var c = text.charAt(i);\n\n    if (c === '\\\\') {\n      escaped += c;\n      i++;\n\n      c = text.charAt(i);\n      if (c === '' || '\"\\\\/bfnrtu'.indexOf(c) === -1) {\n        escaped += '\\\\';  // no valid escape character -> escape it\n      }\n      escaped += c;\n    }\n    else if (c === '\"') {\n      escaped += '\\\\\"';\n    }\n    else {\n      escaped += c;\n    }\n    i++;\n  }\n\n  return '\"' + escaped + '\"';\n}\n\n/**\n * Escape special HTML characters\n * @param {*} value\n * @return {string}\n */\nexports.escape = function (value) {\n  var text = String(value);\n  text = text.replace(/&/g, '&amp;')\n\t\t\t .replace(/\"/g, '&quot;')\n\t\t\t .replace(/'/g, '&#39;')\n\t\t\t .replace(/</g, '&lt;')\n\t\t\t .replace(/>/g, '&gt;');\n  \n  return text;\n}\n\n/**\n * Recursively format an n-dimensional matrix\n * Example output: \"[[1, 2], [3, 4]]\"\n * @param {Array} array\n * @param {Object | number | Function} [options]  Formatting options. See\n *                                                lib/utils/number:format for a\n *                                                description of the available\n *                                                options.\n * @returns {string} str\n */\nfunction formatArray (array, options) {\n  if (Array.isArray(array)) {\n    var str = '[';\n    var len = array.length;\n    for (var i = 0; i < len; i++) {\n      if (i != 0) {\n        str += ', ';\n      }\n      str += formatArray(array[i], options);\n    }\n    str += ']';\n    return str;\n  }\n  else {\n    return exports.format(array, options);\n  }\n}\n\n/**\n * Check whether a value looks like a Fraction (unsafe duck-type check)\n * @param {*} value\n * @return {boolean}\n */\nfunction looksLikeFraction (value) {\n  return (value &&\n      typeof value === 'object' &&\n      typeof value.s === 'number' &&\n      typeof value.n === 'number' &&\n      typeof value.d === 'number') || false;\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/string.js","/**\n * Convert a BigNumber to a formatted string representation.\n *\n * Syntax:\n *\n *    format(value)\n *    format(value, options)\n *    format(value, precision)\n *    format(value, fn)\n *\n * Where:\n *\n *    {number} value   The value to be formatted\n *    {Object} options An object with formatting options. Available options:\n *                     {string} notation\n *                         Number notation. Choose from:\n *                         'fixed'          Always use regular number notation.\n *                                          For example '123.40' and '14000000'\n *                         'exponential'    Always use exponential notation.\n *                                          For example '1.234e+2' and '1.4e+7'\n *                         'auto' (default) Regular number notation for numbers\n *                                          having an absolute value between\n *                                          `lower` and `upper` bounds, and uses\n *                                          exponential notation elsewhere.\n *                                          Lower bound is included, upper bound\n *                                          is excluded.\n *                                          For example '123.4' and '1.4e7'.\n *                     {number} precision   A number between 0 and 16 to round\n *                                          the digits of the number.\n *                                          In case of notations 'exponential' and\n *                                          'auto', `precision` defines the total\n *                                          number of significant digits returned\n *                                          and is undefined by default.\n *                                          In case of notation 'fixed',\n *                                          `precision` defines the number of\n *                                          significant digits after the decimal\n *                                          point, and is 0 by default.\n *                     {Object} exponential An object containing two parameters,\n *                                          {number} lower and {number} upper,\n *                                          used by notation 'auto' to determine\n *                                          when to return exponential notation.\n *                                          Default values are `lower=1e-3` and\n *                                          `upper=1e5`.\n *                                          Only applicable for notation `auto`.\n *    {Function} fn    A custom formatting function. Can be used to override the\n *                     built-in notations. Function `fn` is called with `value` as\n *                     parameter and must return a string. Is useful for example to\n *                     format all values inside a matrix in a particular way.\n *\n * Examples:\n *\n *    format(6.4);                                        // '6.4'\n *    format(1240000);                                    // '1.24e6'\n *    format(1/3);                                        // '0.3333333333333333'\n *    format(1/3, 3);                                     // '0.333'\n *    format(21385, 2);                                   // '21000'\n *    format(12.071, {notation: 'fixed'});                // '12'\n *    format(2.3,    {notation: 'fixed', precision: 2});  // '2.30'\n *    format(52.8,   {notation: 'exponential'});          // '5.28e+1'\n *\n * @param {BigNumber} value\n * @param {Object | Function | number} [options]\n * @return {string} str The formatted value\n */\nexports.format = function (value, options) {\n  if (typeof options === 'function') {\n    // handle format(value, fn)\n    return options(value);\n  }\n\n  // handle special cases\n  if (!value.isFinite()) {\n    return value.isNaN() ? 'NaN' : (value.gt(0) ? 'Infinity' : '-Infinity');\n  }\n\n  // default values for options\n  var notation = 'auto';\n  var precision = undefined;\n\n  if (options !== undefined) {\n    // determine notation from options\n    if (options.notation) {\n      notation = options.notation;\n    }\n\n    // determine precision from options\n    if (typeof options === 'number') {\n      precision = options;\n    }\n    else if (options.precision) {\n      precision = options.precision;\n    }\n  }\n\n  // handle the various notations\n  switch (notation) {\n    case 'fixed':\n      return exports.toFixed(value, precision);\n\n    case 'exponential':\n      return exports.toExponential(value, precision);\n\n    case 'auto':\n      // determine lower and upper bound for exponential notation.\n      // TODO: implement support for upper and lower to be BigNumbers themselves\n      var lower = 1e-3;\n      var upper = 1e5;\n      if (options && options.exponential) {\n        if (options.exponential.lower !== undefined) {\n          lower = options.exponential.lower;\n        }\n        if (options.exponential.upper !== undefined) {\n          upper = options.exponential.upper;\n        }\n      }\n\n      // adjust the configuration of the BigNumber constructor (yeah, this is quite tricky...)\n      var oldConfig = {\n        toExpNeg: value.constructor.toExpNeg,\n        toExpPos: value.constructor.toExpPos\n      };\n\n      value.constructor.config({\n        toExpNeg: Math.round(Math.log(lower) / Math.LN10),\n        toExpPos: Math.round(Math.log(upper) / Math.LN10)\n      });\n\n      // handle special case zero\n      if (value.isZero()) return '0';\n\n      // determine whether or not to output exponential notation\n      var str;\n      var abs = value.abs();\n      if (abs.gte(lower) && abs.lt(upper)) {\n        // normal number notation\n        str = value.toSignificantDigits(precision).toFixed();\n      }\n      else {\n        // exponential notation\n        str = exports.toExponential(value, precision);\n      }\n\n      // remove trailing zeros after the decimal point\n      return str.replace(/((\\.\\d*?)(0+))($|e)/, function () {\n        var digits = arguments[2];\n        var e = arguments[4];\n        return (digits !== '.') ? digits + e : e;\n      });\n\n    default:\n      throw new Error('Unknown notation \"' + notation + '\". ' +\n          'Choose \"auto\", \"exponential\", or \"fixed\".');\n  }\n};\n\n/**\n * Format a number in exponential notation. Like '1.23e+5', '2.3e+0', '3.500e-3'\n * @param {BigNumber} value\n * @param {number} [precision]  Number of digits in formatted output.\n *                              If not provided, the maximum available digits\n *                              is used.\n * @returns {string} str\n */\nexports.toExponential = function (value, precision) {\n  if (precision !== undefined) {\n    return value.toExponential(precision - 1); // Note the offset of one\n  }\n  else {\n    return value.toExponential();\n  }\n};\n\n/**\n * Format a number with fixed notation.\n * @param {BigNumber} value\n * @param {number} [precision=0]        Optional number of decimals after the\n *                                      decimal point. Zero by default.\n */\nexports.toFixed = function (value, precision) {\n  return value.toFixed(precision || 0);\n  // Note: the (precision || 0) is needed as the toFixed of BigNumber has an\n  // undefined default precision instead of 0.\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/bignumber/formatter.js","'use strict';\n\n/**\n * Determine the type of a variable\n *\n *     type(x)\n *\n * The following types are recognized:\n *\n *     'undefined'\n *     'null'\n *     'boolean'\n *     'number'\n *     'string'\n *     'Array'\n *     'Function'\n *     'Date'\n *     'RegExp'\n *     'Object'\n *\n * @param {*} x\n * @return {string} Returns the name of the type. Primitive types are lower case,\n *                  non-primitive types are upper-camel-case.\n *                  For example 'number', 'string', 'Array', 'Date'.\n */\nexports.type = function(x) {\n  var type = typeof x;\n\n  if (type === 'object') {\n    if (x === null)           return 'null';\n    if (Array.isArray(x))     return 'Array';\n    if (x instanceof Date)    return 'Date';\n    if (x instanceof RegExp)  return 'RegExp';\n    if (x instanceof Boolean) return 'boolean';\n    if (x instanceof Number)  return 'number';\n    if (x instanceof String)  return 'string';\n\n    return 'Object';\n  }\n\n  if (type === 'function')    return 'Function';\n\n  return type;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/types.js","'use strict';\n\n/**\n * Create a range error with the message:\n *     'Dimension mismatch (<actual size> != <expected size>)'\n * @param {number | number[]} actual        The actual size\n * @param {number | number[]} expected      The expected size\n * @param {string} [relation='!=']          Optional relation between actual\n *                                          and expected size: '!=', '<', etc.\n * @extends RangeError\n */\nfunction DimensionError(actual, expected, relation) {\n  if (!(this instanceof DimensionError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.actual   = actual;\n  this.expected = expected;\n  this.relation = relation;\n\n  this.message = 'Dimension mismatch (' +\n      (Array.isArray(actual) ? ('[' + actual.join(', ') + ']') : actual) +\n      ' ' + (this.relation || '!=') + ' ' +\n      (Array.isArray(expected) ? ('[' + expected.join(', ') + ']') : expected) +\n      ')';\n\n  this.stack = (new Error()).stack;\n}\n\nDimensionError.prototype = new RangeError();\nDimensionError.prototype.constructor = RangeError;\nDimensionError.prototype.name = 'DimensionError';\nDimensionError.prototype.isDimensionError = true;\n\nmodule.exports = DimensionError;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/error/DimensionError.js","'use strict';\n\n/**\n * Create a range error with the message:\n *     'Index out of range (index < min)'\n *     'Index out of range (index < max)'\n *\n * @param {number} index     The actual index\n * @param {number} [min=0]   Minimum index (included)\n * @param {number} [max]     Maximum index (excluded)\n * @extends RangeError\n */\nfunction IndexError(index, min, max) {\n  if (!(this instanceof IndexError)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  this.index = index;\n  if (arguments.length < 3) {\n    this.min = 0;\n    this.max = min;\n  }\n  else {\n    this.min = min;\n    this.max = max;\n  }\n\n  if (this.min !== undefined && this.index < this.min) {\n    this.message = 'Index out of range (' + this.index + ' < ' + this.min + ')';\n  }\n  else if (this.max !== undefined && this.index >= this.max) {\n    this.message = 'Index out of range (' + this.index + ' > ' + (this.max - 1) + ')';\n  }\n  else {\n    this.message = 'Index out of range (' + this.index + ')';\n  }\n\n  this.stack = (new Error()).stack;\n}\n\nIndexError.prototype = new RangeError();\nIndexError.prototype.constructor = RangeError;\nIndexError.prototype.name = 'IndexError';\nIndexError.prototype.isIndexError = true;\n\nmodule.exports = IndexError;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/error/IndexError.js","'use strict';\n\n/**\n * Test whether value is a boolean\n * @param {*} value\n * @return {boolean} isBoolean\n */\nexports.isBoolean = function(value) {\n  return typeof value == 'boolean';\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/boolean.js","// function utils\n\n/**\n * Memoize a given function by caching the computed result.\n * The cache of a memoized function can be cleared by deleting the `cache`\n * property of the function.\n *\n * @param {function} fn                     The function to be memoized.\n *                                          Must be a pure function.\n * @param {function(args: Array)} [hasher]  A custom hash builder.\n *                                          Is JSON.stringify by default.\n * @return {function}                       Returns the memoized function\n */\nexports.memoize = function(fn, hasher) {\n  return function memoize() {\n    if (typeof memoize.cache !== 'object') {\n      memoize.cache = {};\n    }\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    var hash = hasher ? hasher(args) : JSON.stringify(args);\n    if (!(hash in memoize.cache)) {\n      return memoize.cache[hash] = fn.apply(fn, args);\n    }\n    return memoize.cache[hash];\n  };\n};\n\n/**\n * Find the maximum number of arguments expected by a typed function.\n * @param {function} fn   A typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\nexports.maxArgumentCount = function (fn) {\n  return Object.keys(fn.signatures || {})\n      .reduce(function (args, signature) {\n        var count = (signature.match(/,/g) || []).length + 1;\n        return Math.max(args, count);\n      }, -1);\n};\n\n/**\n * Call a typed function with the\n * @param {function} fn   A function or typed function\n * @return {number} Returns the maximum number of expected arguments.\n *                  Returns -1 when no signatures where found on the function.\n */\nexports.callWithRightArgumentCount = function (fn, args, argCount) {\n  return Object.keys(fn.signatures || {})\n      .reduce(function (args, signature) {\n        var count = (signature.match(/,/g) || []).length + 1;\n        return Math.max(args, count);\n      }, -1);\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/function.js","'use strict';\n\nvar util = require('../../utils/index');\nvar DimensionError = require('../../error/DimensionError');\nvar getSafeProperty = require('../../utils/customs').getSafeProperty;\nvar setSafeProperty = require('../../utils/customs').setSafeProperty;\n\nvar string = util.string;\nvar array = util.array;\nvar object = util.object;\nvar number = util.number;\n\nvar isArray = Array.isArray;\nvar isNumber = number.isNumber;\nvar isInteger = number.isInteger;\nvar isString = string.isString;\n\nvar validateIndex = array.validateIndex;\n\nfunction factory (type, config, load, typed) {\n  var Matrix = load(require('./Matrix')); // force loading Matrix (do not use via type.Matrix)\n\n  /**\n   * Dense Matrix implementation. A regular, dense matrix, supporting multi-dimensional matrices. This is the default matrix type.\n   * @class DenseMatrix\n   */\n  function DenseMatrix(data, datatype) {\n    if (!(this instanceof DenseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n\n    if (type.isMatrix(data)) {\n      // check data is a DenseMatrix\n      if (data.type === 'DenseMatrix') {\n        // clone data & size\n        this._data = object.clone(data._data);\n        this._size = object.clone(data._size);\n        this._datatype = datatype || data._datatype;\n      }\n      else {\n        // build data from existing matrix\n        this._data = data.toArray();\n        this._size = data.size();\n        this._datatype = datatype || data._datatype;\n      }\n    }\n    else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    }\n    else if (isArray(data)) {\n      // replace nested Matrices with Arrays\n      this._data = preprocess(data);\n      // get the dimensions of the array\n      this._size = array.size(this._data);\n      // verify the dimensions of the array, TODO: compute size while processing array\n      array.validate(this._data, this._size);\n      // data type unknown\n      this._datatype = datatype;\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n    }\n  }\n  \n  DenseMatrix.prototype = new Matrix();\n\n  /**\n   * Attach type information\n   */\n  DenseMatrix.prototype.type = 'DenseMatrix';\n  DenseMatrix.prototype.isDenseMatrix = true;\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The storage format.\n   */\n  DenseMatrix.prototype.storage = function () {\n    return 'dense';\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @memberof DenseMatrix\n   * @return {string}           The datatype.\n   */\n  DenseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n\n  /**\n   * Create a new DenseMatrix\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  DenseMatrix.prototype.create = function (data, datatype) {\n    return new DenseMatrix(data, datatype);\n  };\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof DenseMatrix\n   * @param {Index} index\n   * @param {Array | DenseMatrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  DenseMatrix.prototype.subset = function (index, replacement, defaultValue) {\n    switch (arguments.length) {\n      case 1:\n        return _get(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _set(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  \n  /**\n   * Get a single element from the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  DenseMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check index\n    for (var x = 0; x < index.length; x++)\n      validateIndex(index[x], this._size[x]);\n\n    var data = this._data;\n    for (var i = 0, ii = index.length; i < ii; i++) {\n      var index_i = index[i];\n      validateIndex(index_i, data.length);\n      data = data[index_i];\n    }\n\n    return data;\n  };\n  \n  /**\n   * Replace a single element in the matrix.\n   * @memberof DenseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {DenseMatrix} self\n   */\n  DenseMatrix.prototype.set = function (index, value, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length < this._size.length)\n      throw new DimensionError(index.length, this._size.length, '<');\n\n    var i, ii, index_i;\n\n    // enlarge matrix when needed\n    var size = index.map(function (i) {\n      return i + 1;\n    });\n    _fit(this, size, defaultValue);\n\n    // traverse over the dimensions\n    var data = this._data;\n    for (i = 0, ii = index.length - 1; i < ii; i++) {\n      index_i = index[i];\n      validateIndex(index_i, data.length);\n      data = data[index_i];\n    }\n\n    // set new value\n    index_i = index[index.length - 1];\n    validateIndex(index_i, data.length);\n    data[index_i] = value;\n\n    return this;\n  };\n  \n  /**\n   * Get a submatrix of this matrix\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index   Zero-based index\n   * @private\n   */\n  function _get (matrix, index) {\n    if (!type.isIndex(index)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = index.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(index.min());\n    }\n    else {\n      // validate dimensions\n      var size = index.size();\n      if (size.length != matrix._size.length) {\n        throw new DimensionError(size.length, matrix._size.length);\n      }\n\n      // validate if any of the ranges in the index is out of range\n      var min = index.min();\n      var max = index.max();\n      for (var i = 0, ii = matrix._size.length; i < ii; i++) {\n        validateIndex(min[i], matrix._size[i]);\n        validateIndex(max[i], matrix._size[i]);\n      }\n\n      // retrieve submatrix\n      // TODO: more efficient when creating an empty matrix and setting _data and _size manually\n      return new DenseMatrix(_getSubmatrix(matrix._data, index, size.length, 0), matrix._datatype);\n    }\n  }\n  \n  /**\n   * Recursively get a submatrix of a multi dimensional matrix.\n   * Index is not checked for correct number or length of dimensions.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim    Current dimension\n   * @return {Array} submatrix\n   * @private\n   */\n  function _getSubmatrix (data, index, dims, dim) {\n    var last = (dim === dims - 1);\n    var range = index.dimension(dim);\n\n    if (last) {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        return data[i];\n      }).valueOf();\n    }\n    else {\n      return range.map(function (i) {\n        validateIndex(i, data.length);\n        var child = data[i];\n        return _getSubmatrix(child, index, dims, dim + 1);\n      }).valueOf();\n    }\n  }\n  \n  /**\n   * Replace a submatrix in this matrix\n   * Indexes are zero-based.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix\n   * @param {Index} index\n   * @param {DenseMatrix | Array | *} submatrix\n   * @param {*} defaultValue          Default value, filled in on new entries when\n   *                                  the matrix is resized.\n   * @return {DenseMatrix} matrix\n   * @private\n   */\n  function _set (matrix, index, submatrix, defaultValue) {\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    }\n\n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n\n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (type.isMatrix(submatrix)) {\n      sSize = submatrix.size();\n      submatrix = submatrix.valueOf();\n    }\n    else {\n      sSize = array.size(submatrix);\n    }\n\n    if (isScalar) {\n      // set a scalar\n\n      // check whether submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // set a submatrix\n\n      // validate dimensions\n      if (iSize.length < matrix._size.length) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n\n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n\n      // enlarge matrix when needed\n      var size = index.max().map(function (i) {\n        return i + 1;\n      });\n      _fit(matrix, size, defaultValue);\n\n      // insert the sub matrix\n      var dims = iSize.length,\n          dim = 0;\n      _setSubmatrix (matrix._data, index, submatrix, dims, dim);\n    }\n\n    return matrix;\n  }\n  \n  /**\n   * Replace a submatrix of a multi dimensional matrix.\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @param {Index} index\n   * @param {Array} submatrix\n   * @param {number} dims   Total number of dimensions\n   * @param {number} dim\n   * @private\n   */\n  function _setSubmatrix (data, index, submatrix, dims, dim) {\n    var last = (dim === dims - 1),\n        range = index.dimension(dim);\n\n    if (last) {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        data[dataIndex] = submatrix[subIndex[0]];\n      });\n    }\n    else {\n      range.forEach(function (dataIndex, subIndex) {\n        validateIndex(dataIndex);\n        _setSubmatrix(data[dataIndex], index, submatrix[subIndex[0]], dims, dim + 1);\n      });\n    }\n  }\n  \n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  DenseMatrix.prototype.resize = function (size, defaultValue, copy) {\n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n\n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size, defaultValue);\n  };\n  \n  var _resize = function (matrix, size, defaultValue) {\n    // check size\n    if (size.length === 0) {\n      // first value in matrix\n      var v = matrix._data;\n      // go deep\n      while (isArray(v)) {\n        v = v[0];\n      }\n      return v;\n    }\n    // resize matrix\n    matrix._size = size.slice(0); // copy the array\n    matrix._data = array.resize(matrix._data, matrix._size, defaultValue);\n    // return matrix\n    return matrix;\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof DenseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  DenseMatrix.prototype.reshape = function (size, copy) {\n    var m = copy ? this.clone() : this;\n\n    m._data = array.reshape(m._data, size);\n    m._size = size.slice(0);\n    return m;\n  };\n  \n  /**\n   * Enlarge the matrix when it is smaller than given size.\n   * If the matrix is larger or equal sized, nothing is done.\n   * @memberof DenseMatrix\n   * @param {DenseMatrix} matrix           The matrix to be resized\n   * @param {number[]} size\n   * @param {*} defaultValue          Default value, filled in on new entries.\n   * @private\n   */\n  function _fit(matrix, size, defaultValue) {\n    var newSize = matrix._size.slice(0), // copy the array\n        changed = false;\n\n    // add dimensions when needed\n    while (newSize.length < size.length) {\n      newSize.push(0);\n      changed = true;\n    }\n\n    // enlarge size when needed\n    for (var i = 0, ii = size.length; i < ii; i++) {\n      if (size[i] > newSize[i]) {\n        newSize[i] = size[i];\n        changed = true;\n      }\n    }\n\n    if (changed) {\n      // resize only when size is changed\n      _resize(matrix, newSize, defaultValue);\n    }\n  }\n  \n  /**\n   * Create a clone of the matrix\n   * @memberof DenseMatrix\n   * @return {DenseMatrix} clone\n   */\n  DenseMatrix.prototype.clone = function () {\n    var m = new DenseMatrix({\n      data: object.clone(this._data),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  \n  /**\n   * Retrieve the size of the matrix.\n   * @memberof DenseMatrix\n   * @returns {number[]} size\n   */\n  DenseMatrix.prototype.size = function() {\n    return this._size.slice(0); // return a clone of _size\n  };\n  \n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   *\n   * @return {DenseMatrix} matrix\n   */\n  DenseMatrix.prototype.map = function (callback) {\n    // matrix instance\n    var me = this;\n    var recurse = function (value, index) {\n      if (isArray(value)) {\n        return value.map(function (child, i) {\n          return recurse(child, index.concat(i));\n        });\n      }\n      else {\n        return callback(value, index, me);\n      }\n    };\n    // return dense format\n    return new DenseMatrix({\n      data: recurse(this._data, []),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n  };\n  \n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof DenseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   */\n  DenseMatrix.prototype.forEach = function (callback) {\n    // matrix instance\n    var me = this;\n    var recurse = function (value, index) {\n      if (isArray(value)) {\n        value.forEach(function (child, i) {\n          recurse(child, index.concat(i));\n        });\n      }\n      else {\n        callback(value, index, me);\n      }\n    };\n    recurse(this._data, []);\n  };\n  \n  /**\n   * Create an Array with a copy of the data of the DenseMatrix\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.toArray = function () {\n    return object.clone(this._data);\n  };\n  \n  /**\n   * Get the primitive value of the DenseMatrix: a multidimensional array\n   * @memberof DenseMatrix\n   * @returns {Array} array\n   */\n  DenseMatrix.prototype.valueOf = function () {\n    return this._data;\n  };\n  \n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof DenseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.format = function (options) {\n    return string.format(this._data, options);\n  };\n  \n  /**\n   * Get a string representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {string} str\n   */\n  DenseMatrix.prototype.toString = function () {\n    return string.format(this._data);\n  };\n  \n  /**\n   * Get a JSON representation of the matrix\n   * @memberof DenseMatrix\n   * @returns {Object}\n   */\n  DenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'DenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n  \n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof DenseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Array}                      The array vector with the diagonal values.\n   */\n  DenseMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n\n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // x is a matrix get diagonal from matrix\n    var data = [];\n    \n    // loop rows\n    for (var i = 0; i < n; i++) {\n      data[i] = this._data[i + kSub][i + kSuper];\n    }\n\n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [n],\n      datatype: this._datatype\n    });\n  };\n  \n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {Array} size                   The matrix size.\n   * @param {number | Array} value          The values for the diagonal.\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will be filled in.\n   * @param {number} [defaultValue]        The default value for non-diagonal\n   *\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (type.isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n    \n    if (defaultValue && isString(datatype)) {\n      // convert defaultValue to the same datatype\n      defaultValue = typed.convert(defaultValue, datatype);\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n\n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n\n    // value extraction function\n    var _value;\n\n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };      \n    }\n    else if (type.isMatrix(value)) {\n      // matrix size\n      var ms = value.size();\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n    \n    // discover default value if needed\n    if (!defaultValue) {\n      // check first value in array\n      defaultValue = type.isBigNumber(_value(0)) ? new type.BigNumber(0) : 0;\n    }\n\n    // empty array\n    var data = [];\n\n    // check we need to resize array\n    if (size.length > 0) {\n      // resize array\n      data = array.resize(data, size, defaultValue);\n      // fill diagonal\n      for (var d = 0; d < n; d++) {\n        data[d + kSub][d + kSuper] = _value(d);\n      }\n    }\n    \n    // create DenseMatrix\n    return new DenseMatrix({\n      data: data,\n      size: [rows, columns]\n    });\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @memberof DenseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"DenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {DenseMatrix}\n   */\n  DenseMatrix.fromJSON = function (json) {\n    return new DenseMatrix(json);\n  };\n  \n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof DenseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  DenseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    // validate index\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]);\n\n    // swap rows\n    DenseMatrix._swapRows(i, j, this._data);\n    // return current instance\n    return this;\n  };\n\n  /**\n   * Swap rows i and j in Dense Matrix data structure.\n   *\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   */\n  DenseMatrix._swapRows = function (i, j, data) {\n    // swap values i <-> j\n    var vi = data[i];\n    data[i] = data[j];\n    data[j] = vi;\n  };\n\n  /**\n   * Preprocess data, which can be an Array or DenseMatrix with nested Arrays and\n   * Matrices. Replaces all nested Matrices with Arrays\n   * @memberof DenseMatrix\n   * @param {Array} data\n   * @return {Array} data\n   */\n  function preprocess(data) {\n    for (var i = 0, ii = data.length; i < ii; i++) {\n      var elem = data[i];\n      if (isArray(elem)) {\n        data[i] = preprocess(elem);\n      }\n      else if (elem && elem.isMatrix === true) {\n        data[i] = preprocess(elem.valueOf());\n      }\n    }\n\n    return data;\n  }\n\n  // register this type in the base class Matrix\n  type.Matrix._storage.dense = DenseMatrix;\n  type.Matrix._storage['default'] = DenseMatrix;\n\n  // exports\n  return DenseMatrix;\n}\n\nexports.name = 'DenseMatrix';\nexports.path = 'type';\nexports.factory = factory;\nexports.lazy = false;  // no lazy loading, as we alter type.Matrix._storage\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/DenseMatrix.js","'use strict';\n\nvar hasOwnProperty = require('./object').hasOwnProperty;\n\n/**\n * Get a property of a plain object\n * Throws an error in case the object is not a plain object or the\n * property is not defined on the object itself\n * @param {Object} object\n * @param {string} prop\n * @return {*} Returns the property value when safe\n */\nfunction getSafeProperty (object, prop) {\n  // only allow getting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop];\n  }\n\n  if (typeof object[prop] === 'function' && isSafeMethod(object, prop)) {\n    throw new Error('Cannot access method \"' + prop + '\" as a property');\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\n * Set a property on a plain object.\n * Throws an error in case the object is not a plain object or the\n * property would override an inherited property like .constructor or .toString\n * @param {Object} object\n * @param {string} prop\n * @param {*} value\n * @return {*} Returns the value\n */\n// TODO: merge this function into access.js?\nfunction setSafeProperty (object, prop, value) {\n  // only allow setting safe properties of a plain object\n  if (isPlainObject(object) && isSafeProperty(object, prop)) {\n    return object[prop] = value;\n  }\n\n  throw new Error('No access to property \"' + prop + '\"');\n}\n\n/**\n * Test whether a property is safe to use for an object.\n * For example .toString and .constructor are not safe\n * @param {string} prop\n * @return {boolean} Returns true when safe\n */\nfunction isSafeProperty (object, prop) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g length\n  if (hasOwnProperty(safeNativeProperties, prop)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (prop in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (prop in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n\n/**\n * Validate whether a method is safe.\n * Throws an error when that's not the case.\n * @param {Object} object\n * @param {string} method\n */\n// TODO: merge this function into assign.js?\nfunction validateSafeMethod (object, method) {\n  if (!isSafeMethod(object, method)) {\n    throw new Error('No access to method \"' + method + '\"');\n  }\n}\n\n/**\n * Check whether a method is safe.\n * Throws an error when that's not the case (for example for `constructor`).\n * @param {Object} object\n * @param {string} method\n * @return {boolean} Returns true when safe, false otherwise\n */\nfunction isSafeMethod (object, method) {\n  if (!object || typeof object[method] !== 'function') {\n    return false;\n  }\n  // UNSAFE: ghosted\n  // e.g overridden toString\n  // Note that IE10 doesn't support __proto__ and we can't do this check there.\n  if (hasOwnProperty(object, method) &&\n      (object.__proto__ && (method in object.__proto__))) {\n    return false;\n  }\n  // SAFE: whitelisted\n  // e.g toString\n  if (hasOwnProperty(safeNativeMethods, method)) {\n    return true;\n  }\n  // UNSAFE: inherited from Object prototype\n  // e.g constructor\n  if (method in Object.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Object.prototype is a root object\n    return false;\n  }\n  // UNSAFE: inherited from Function prototype\n  // e.g call, apply\n  if (method in Function.prototype) {\n    // 'in' is used instead of hasOwnProperty for nodejs v0.10\n    // which is inconsistent on root prototypes. It is safe\n    // here because Function.prototype is a root object\n    return false;\n  }\n  return true;\n}\n\nfunction isPlainObject (object) {\n  return typeof object === 'object' && object && object.constructor === Object;\n}\n\nvar safeNativeProperties = {\n  length: true,\n  name: true\n};\n\nvar safeNativeMethods = {\n  toString: true,\n  valueOf: true,\n  toLocaleString: true\n};\n\nexports.getSafeProperty = getSafeProperty;\nexports.setSafeProperty = setSafeProperty;\nexports.isSafeProperty = isSafeProperty;\nexports.validateSafeMethod = validateSafeMethod;\nexports.isSafeMethod = isSafeMethod;\nexports.isPlainObject = isPlainObject;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/customs.js","'use strict';\n\nvar util = require('../../utils/index');\nvar DimensionError = require('../../error/DimensionError');\n\nvar array = util.array;\nvar object = util.object;\nvar string = util.string;\nvar number = util.number;\n\nvar isArray = Array.isArray;\nvar isNumber = number.isNumber;\nvar isInteger = number.isInteger;\nvar isString = string.isString;\n\nvar validateIndex = array.validateIndex;\n\nfunction factory (type, config, load, typed) {\n  var Matrix = load(require('./Matrix')); // force loading Matrix (do not use via type.Matrix)\n  var equalScalar = load(require('../../function/relational/equalScalar'));\n\n  /**\n   * Sparse Matrix implementation. This type implements a Compressed Column Storage format\n   * for sparse matrices.\n   * @class SparseMatrix\n   */\n  function SparseMatrix(data, datatype) {\n    if (!(this instanceof SparseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n    \n    if (type.isMatrix(data)) {\n      // create from matrix\n      _createFromMatrix(this, data, datatype);\n    }\n    else if (data && isArray(data.index) && isArray(data.ptr) && isArray(data.size)) {\n      // initialize fields\n      this._values = data.values;\n      this._index = data.index;\n      this._ptr = data.ptr;\n      this._size = data.size;\n      this._datatype = datatype || data.datatype;\n    }\n    else if (isArray(data)) {\n      // create from array\n      _createFromArray(this, data, datatype);\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._values = [];\n      this._index = [];\n      this._ptr = [0];\n      this._size = [0, 0];\n      this._datatype = datatype;\n    }\n  }\n  \n  var _createFromMatrix = function (matrix, source, datatype) {\n    // check matrix type\n    if (source.type === 'SparseMatrix') {\n      // clone arrays\n      matrix._values = source._values ? object.clone(source._values) : undefined;\n      matrix._index = object.clone(source._index);\n      matrix._ptr = object.clone(source._ptr);\n      matrix._size = object.clone(source._size);\n      matrix._datatype = datatype || source._datatype;\n    }\n    else {\n      // build from matrix data\n      _createFromArray(matrix, source.valueOf(), datatype || source._datatype);\n    }\n  };\n  \n  var _createFromArray = function (matrix, data, datatype) {\n    // initialize fields\n    matrix._values = [];\n    matrix._index = [];\n    matrix._ptr = [];\n    matrix._datatype = datatype;\n    // discover rows & columns, do not use math.size() to avoid looping array twice\n    var rows = data.length;\n    var columns = 0;\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    \n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype);\n    }\n\n    // check we have rows (empty array)\n    if (rows > 0) {\n      // column index\n      var j = 0;\n      do {\n        // store pointer to values index\n        matrix._ptr.push(matrix._index.length);\n        // loop rows\n        for (var i = 0; i < rows; i++) {\n          // current row\n          var row = data[i];\n          // check row is an array\n          if (isArray(row)) {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < row.length)\n              columns = row.length;\n            // check row has column\n            if (j < row.length) {\n              // value\n              var v = row[j];\n              // check value != 0\n              if (!eq(v, zero)) {\n                // store value\n                matrix._values.push(v);\n                // index\n                matrix._index.push(i);\n              }\n            }\n          }\n          else {\n            // update columns if needed (only on first column)\n            if (j === 0 && columns < 1)\n              columns = 1;\n            // check value != 0 (row is a scalar)\n            if (!eq(row, zero)) {\n              // store value\n              matrix._values.push(row);\n              // index\n              matrix._index.push(i);\n            }\n          }\n        }\n        // increment index\n        j++;      \n      }\n      while (j < columns);\n    }\n    // store number of values in ptr\n    matrix._ptr.push(matrix._index.length);\n    // size\n    matrix._size = [rows, columns];\n  };\n  \n  SparseMatrix.prototype = new Matrix();\n\n  /**\n   * Attach type information\n   */\n  SparseMatrix.prototype.type = 'SparseMatrix';\n  SparseMatrix.prototype.isSparseMatrix = true;\n\n  /**\n   * Get the storage format used by the matrix.\n   *\n   * Usage:\n   *     var format = matrix.storage()                   // retrieve storage format\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The storage format.\n   */\n  SparseMatrix.prototype.storage = function () {\n    return 'sparse';\n  };\n\n  /**\n   * Get the datatype of the data stored in the matrix.\n   *\n   * Usage:\n   *     var format = matrix.datatype()                   // retrieve matrix datatype\n   *\n   * @memberof SparseMatrix\n   * @return {string}           The datatype.\n   */\n  SparseMatrix.prototype.datatype = function () {\n    return this._datatype;\n  };\n\n  /**\n   * Create a new SparseMatrix\n   * @memberof SparseMatrix\n   * @param {Array} data\n   * @param {string} [datatype]\n   */\n  SparseMatrix.prototype.create = function (data, datatype) {\n    return new SparseMatrix(data, datatype);\n  };\n\n  /**\n   * Get the matrix density.\n   *\n   * Usage:\n   *     var density = matrix.density()                   // retrieve matrix density\n   *\n   * @memberof SparseMatrix\n   * @return {number}           The matrix density.\n   */\n  SparseMatrix.prototype.density = function () {\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // calculate density\n    return rows !== 0 && columns !== 0 ? (this._index.length / (rows * columns)) : 0;\n  };\n  \n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @memberof SparseMatrix\n   * @param {Index} index\n   * @param {Array | Maytrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  SparseMatrix.prototype.subset = function (index, replacement, defaultValue) { // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke subset on a Pattern only matrix');\n\n    // check arguments\n    switch (arguments.length) {\n      case 1:\n        return _getsubset(this, index);\n\n        // intentional fall through\n      case 2:\n      case 3:\n        return _setsubset(this, index, replacement, defaultValue);\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n  \n  var _getsubset = function (matrix, idx) {\n    // check idx\n    if (!type.isIndex(idx)) {\n      throw new TypeError('Invalid index');\n    }\n\n    var isScalar = idx.isScalar();\n    if (isScalar) {\n      // return a scalar\n      return matrix.get(idx.min());\n    }\n    // validate dimensions\n    var size = idx.size();\n    if (size.length != matrix._size.length) {\n      throw new DimensionError(size.length, matrix._size.length);\n    }\n\n    // vars\n    var i, ii, k, kk;\n    \n    // validate if any of the ranges in the index is out of range\n    var min = idx.min();\n    var max = idx.max();\n    for (i = 0, ii = matrix._size.length; i < ii; i++) {\n      validateIndex(min[i], matrix._size[i]);\n      validateIndex(max[i], matrix._size[i]);\n    }\n    \n    // matrix arrays\n    var mvalues = matrix._values;\n    var mindex = matrix._index;\n    var mptr = matrix._ptr;\n        \n    // rows & columns dimensions for result matrix\n    var rows = idx.dimension(0);\n    var columns = idx.dimension(1);\n    \n    // workspace & permutation vector\n    var w = [];\n    var pv = [];\n    \n    // loop rows in resulting matrix\n    rows.forEach(function (i, r) {\n      // update permutation vector\n      pv[i] = r[0];  \n      // mark i in workspace\n      w[i] = true;\n    });\n\n    // result matrix arrays\n    var values = mvalues ? [] : undefined;\n    var index = [];\n    var ptr = [];\n        \n    // loop columns in result matrix\n    columns.forEach(function (j) {\n      // update ptr\n      ptr.push(index.length);\n      // loop values in column j\n      for (k = mptr[j], kk = mptr[j + 1]; k < kk; k++) {\n        // row\n        i = mindex[k];\n        // check row is in result matrix\n        if (w[i] === true) {\n          // push index\n          index.push(pv[i]);\n          // check we need to process values\n          if (values)\n            values.push(mvalues[k]);\n        }\n      }\n    });\n    // update ptr\n    ptr.push(index.length);\n    \n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: size,\n      datatype: matrix._datatype\n    });\n  };\n  \n  var _setsubset = function (matrix, index, submatrix, defaultValue) {\n    // check index\n    if (!index || index.isIndex !== true) {\n      throw new TypeError('Invalid index');\n    }\n    \n    // get index size and check whether the index contains a single value\n    var iSize = index.size(),\n        isScalar = index.isScalar();\n    \n    // calculate the size of the submatrix, and convert it into an Array if needed\n    var sSize;\n    if (type.isMatrix(submatrix)) {\n      // submatrix size\n      sSize = submatrix.size();\n      // use array representation\n      submatrix = submatrix.toArray();\n    }\n    else {\n      // get submatrix size (array, scalar)\n      sSize = array.size(submatrix);\n    }\n    \n    // check index is a scalar\n    if (isScalar) {\n      // verify submatrix is a scalar\n      if (sSize.length !== 0) {\n        throw new TypeError('Scalar expected');\n      }\n      // set value\n      matrix.set(index.min(), submatrix, defaultValue);\n    }\n    else {\n      // validate dimensions, index size must be one or two dimensions\n      if (iSize.length !== 1 && iSize.length !== 2) {\n        throw new DimensionError(iSize.length, matrix._size.length, '<');\n      }\n      \n      // check submatrix and index have the same dimensions\n      if (sSize.length < iSize.length) {\n        // calculate number of missing outer dimensions\n        var i = 0;\n        var outer = 0;\n        while (iSize[i] === 1 && sSize[i] === 1) {\n          i++;\n        }\n        while (iSize[i] === 1) {\n          outer++;\n          i++;\n        }\n        // unsqueeze both outer and inner dimensions\n        submatrix = array.unsqueeze(submatrix, iSize.length, outer, sSize);\n      }\n      \n      // check whether the size of the submatrix matches the index size\n      if (!object.deepEqual(iSize, sSize)) {\n        throw new DimensionError(iSize, sSize, '>');\n      }\n      \n      // offsets\n      var x0 = index.min()[0];\n      var y0 = index.min()[1];      \n      \n      // submatrix rows and columns\n      var m = sSize[0];\n      var n = sSize[1];\n\n      // loop submatrix\n      for (var x = 0; x < m; x++) {\n        // loop columns\n        for (var y = 0; y < n; y++) {\n          // value at i, j\n          var v = submatrix[x][y];\n          // invoke set (zero value will remove entry from matrix)\n          matrix.set([x + x0, y + y0], v, defaultValue);\n        }\n      }\n    }\n    return matrix;\n  };\n\n  /**\n   * Get a single element from the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @return {*} value\n   */\n  SparseMatrix.prototype.get = function (index) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke get on a Pattern only matrix');\n\n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // check i, j are valid\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[1]);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i)\n      return this._values[k];\n\n    return 0;\n  };\n  \n  /**\n   * Replace a single element in the matrix.\n   * @memberof SparseMatrix\n   * @param {number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be set to zero.\n   * @return {SparseMatrix} self\n   */\n  SparseMatrix.prototype.set = function (index, v, defaultValue) {\n    if (!isArray(index))\n      throw new TypeError('Array expected');\n    if (index.length != this._size.length)\n      throw new DimensionError(index.length, this._size.length);\n\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke set on a Pattern only matrix');\n      \n    // row and column\n    var i = index[0];\n    var j = index[1];\n\n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(this._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [this._datatype, this._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, this._datatype);\n    }\n\n    // check we need to resize matrix\n    if (i > rows - 1 || j > columns - 1) {\n      // resize matrix\n      _resize(this, Math.max(i + 1, rows), Math.max(j + 1, columns), defaultValue);\n      // update rows & columns\n      rows = this._size[0];\n      columns = this._size[1];\n    }\n\n    // check i, j are valid\n    validateIndex(i, rows);\n    validateIndex(j, columns);\n\n    // find value index\n    var k = _getValueIndex(i, this._ptr[j], this._ptr[j + 1], this._index);\n    // check k is prior to next column k and it is in the correct row\n    if (k < this._ptr[j + 1] && this._index[k] === i) {\n      // check value != 0\n      if (!eq(v, zero)) {\n        // update value\n        this._values[k] = v;\n      }\n      else {\n        // remove value from matrix\n        _remove(k, j, this._values, this._index, this._ptr);\n      }\n    }\n    else {\n      // insert value @ (i, j)\n      _insert(k, i, j, v, this._values, this._index, this._ptr);\n    }\n\n    return this;\n  };\n  \n  var _getValueIndex = function(i, top, bottom, index) {\n    // check row is on the bottom side\n    if (bottom - top === 0)\n      return bottom;\n    // loop rows [top, bottom[\n    for (var r = top; r < bottom; r++) {\n      // check we found value index\n      if (index[r] === i)\n        return r;\n    }\n    // we did not find row\n    return top;\n  };\n\n  var _remove = function (k, j, values, index, ptr) {\n    // remove value @ k\n    values.splice(k, 1);\n    index.splice(k, 1);\n    // update pointers\n    for (var x = j + 1; x < ptr.length; x++)\n      ptr[x]--;\n  };\n\n  var _insert = function (k, i, j, v, values, index, ptr) {\n    // insert value\n    values.splice(k, 0, v);\n    // update row for k\n    index.splice(k, 0, i);\n    // update column pointers\n    for (var x = j + 1; x < ptr.length; x++)\n      ptr[x]++;\n  };\n  \n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when \n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  SparseMatrix.prototype.resize = function (size, defaultValue, copy) {    \n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + string.format(size) + ')');\n      }\n    });\n    \n    // matrix to resize\n    var m = copy ? this.clone() : this;\n    // resize matrix\n    return _resize(m, size[0], size[1], defaultValue);\n  };\n  \n  var _resize = function (matrix, rows, columns, defaultValue) {\n    // value to insert at the time of growing matrix\n    var value = defaultValue || 0;\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype);\n      // convert value to the same datatype\n      value = typed.convert(value, matrix._datatype);\n    }\n    \n    // should we insert the value?\n    var ins = !eq(value, zero);\n\n    // old columns and rows\n    var r = matrix._size[0];\n    var c = matrix._size[1];\n\n    var i, j, k;\n\n    // check we need to increase columns\n    if (columns > c) {\n      // loop new columns\n      for (j = c; j < columns; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._values.length;\n        // check we need to insert matrix._values\n        if (ins) {\n          // loop rows\n          for (i = 0; i < r; i++) {\n            // add new matrix._values\n            matrix._values.push(value);\n            // update matrix._index\n            matrix._index.push(i);\n          }\n        }        \n      }\n      // store number of matrix._values in matrix._ptr\n      matrix._ptr[columns] = matrix._values.length;\n    }\n    else if (columns < c) {\n      // truncate matrix._ptr\n      matrix._ptr.splice(columns + 1, c - columns);\n      // truncate matrix._values and matrix._index\n      matrix._values.splice(matrix._ptr[columns], matrix._values.length);\n      matrix._index.splice(matrix._ptr[columns], matrix._index.length);\n    }\n    // update columns\n    c = columns;\n\n    // check we need to increase rows\n    if (rows > r) {\n      // check we have to insert values\n      if (ins) {\n        // inserts\n        var n = 0;\n        // loop columns\n        for (j = 0; j < c; j++) {\n          // update matrix._ptr for current column\n          matrix._ptr[j] = matrix._ptr[j] + n;\n          // where to insert matrix._values\n          k = matrix._ptr[j + 1] + n;\n          // pointer\n          var p = 0;\n          // loop new rows, initialize pointer\n          for (i = r; i < rows; i++, p++) {\n            // add value\n            matrix._values.splice(k + p, 0, value);\n            // update matrix._index\n            matrix._index.splice(k + p, 0, i);\n            // increment inserts\n            n++;\n          }\n        }\n        // store number of matrix._values in matrix._ptr\n        matrix._ptr[c] = matrix._values.length;\n      }\n    }\n    else if (rows < r) {\n      // deletes\n      var d = 0;\n      // loop columns\n      for (j = 0; j < c; j++) {\n        // update matrix._ptr for current column\n        matrix._ptr[j] = matrix._ptr[j] - d;\n        // where matrix._values start for next column\n        var k0 = matrix._ptr[j];\n        var k1 = matrix._ptr[j + 1] - d;\n        // loop matrix._index\n        for (k = k0; k < k1; k++) {\n          // row\n          i = matrix._index[k];\n          // check we need to delete value and matrix._index\n          if (i > rows - 1) {\n            // remove value\n            matrix._values.splice(k, 1);\n            // remove item from matrix._index\n            matrix._index.splice(k, 1);\n            // increase deletes\n            d++;\n          }\n        }\n      }\n      // update matrix._ptr for current column\n      matrix._ptr[j] = matrix._values.length;\n    }\n    // update matrix._size\n    matrix._size[0] = rows;\n    matrix._size[1] = columns;\n    // return matrix\n    return matrix;\n  };\n\n  /**\n   * Reshape the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (reshape in place).\n   *\n   * NOTE: This might be better suited to copy by default, instead of modifying\n   *       in place. For now, it operates in place to remain consistent with\n   *       resize().\n   *\n   * @memberof SparseMatrix\n   * @param {number[]} size           The new size the matrix should have.\n   * @param {boolean} [copy]          Return a reshaped copy of the matrix\n   *\n   * @return {Matrix}                 The reshaped matrix\n   */\n  SparseMatrix.prototype.reshape = function (size, copy) {\n\n    // validate arguments\n    if (!isArray(size))\n      throw new TypeError('Array expected');\n    if (size.length !== 2)\n      throw new Error('Sparse matrices can only be reshaped in two dimensions');\n\n    // check sizes\n    size.forEach(function (value) {\n      if (!number.isNumber(value) || !number.isInteger(value) || value < 0) {\n        throw new TypeError('Invalid size, must contain positive integers ' +\n                            '(size: ' + string.format(size) + ')');\n      }\n    });\n\n    // m * n must not change\n    if(this._size[0] * this._size[1] !== size[0] * size[1]) {\n      throw new Error('Reshaping sparse matrix will result in the wrong number of elements');\n    }\n\n    // matrix to reshape\n    var m = copy ? this.clone() : this;\n\n    // return unchanged if the same shape\n    if(this._size[0] === size[0] && this._size[1] === size[1]) {\n      return m;\n    }\n\n    // Convert to COO format (generate a column index)\n    var colIndex = [];\n    for(var i=0; i<m._ptr.length; i++) {\n      for(var j=0; j<m._ptr[i+1]-m._ptr[i]; j++) {\n        colIndex.push(i);\n      }\n    }\n\n    // Clone the values array\n    var values = m._values.slice();\n\n    // Clone the row index array\n    var rowIndex = m._index.slice();\n\n    // Transform the (row, column) indices\n    for(var i=0; i<m._index.length; i++) {\n      var r1 = rowIndex[i];\n      var c1 = colIndex[i];\n      var flat = r1 * m._size[1] + c1;\n      colIndex[i] = flat % size[1];\n      rowIndex[i] = Math.floor(flat / size[1]);\n    }\n\n    // Now reshaping is supposed to preserve the row-major order, BUT these sparse matrices are stored\n    // in column-major order, so we have to reorder the value array now. One option is to use a multisort,\n    // sorting several arrays based on some other array.\n\n    // OR, we could easily just:\n\n    // 1. Remove all values from the matrix\n    m._values.length = 0;\n    m._index.length = 0;\n    m._ptr.length = size[1] + 1;\n    m._size = size.slice();\n    for(var i=0; i<m._ptr.length; i++) {\n      m._ptr[i] = 0;\n    }\n\n    // 2. Re-insert all elements in the proper order (simplified code from SparseMatrix.prototype.set)\n    // This step is probably the most time-consuming\n    for(var h=0; h<values.length; h++) {\n      var i = rowIndex[h];\n      var j = colIndex[h];\n      var v = values[h];\n      var k = _getValueIndex(i, m._ptr[j], m._ptr[j + 1], m._index);\n      _insert(k, i, j, v, m._values, m._index, m._ptr);\n    }\n\n    // The value indices are inserted out of order, but apparently that's... still OK?\n\n    return m;\n  }\n  \n  /**\n   * Create a clone of the matrix\n   * @memberof SparseMatrix\n   * @return {SparseMatrix} clone\n   */\n  SparseMatrix.prototype.clone = function () {\n    var m = new SparseMatrix({\n      values: this._values ? object.clone(this._values) : undefined,\n      index: object.clone(this._index),\n      ptr: object.clone(this._ptr),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n  \n  /**\n   * Retrieve the size of the matrix.\n   * @memberof SparseMatrix\n   * @returns {number[]} size\n   */\n  SparseMatrix.prototype.size = function() {\n    return this._size.slice(0); // copy the Array\n  };\n  \n  /**\n   * Create a new matrix with the results of the callback function executed on\n   * each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   *\n   * @return {SparseMatrix} matrix\n   */\n  SparseMatrix.prototype.map = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke map on a Pattern only matrix');\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // invoke callback\n    var invoke = function (v, i, j) {\n      // invoke callback\n      return callback(v, [i, j], me);\n    };\n    // invoke _map\n    return _map(this, 0, rows - 1, 0, columns - 1, invoke, skipZeros);\n  };\n\n  /**\n   * Create a new matrix with the results of the callback function executed on the interval\n   * [minRow..maxRow, minColumn..maxColumn].\n   */\n  var _map = function (matrix, minRow, maxRow, minColumn, maxColumn, callback, skipZeros) {\n    // result arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    \n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(matrix._datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [matrix._datatype, matrix._datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, matrix._datatype);\n    }\n    \n    // invoke callback\n    var invoke = function (v, x, y) {\n      // invoke callback\n      v = callback(v, x, y);\n      // check value != 0\n      if (!eq(v, zero)) {\n        // store value\n        values.push(v);\n        // index\n        index.push(x);\n      }\n    };\n    // loop columns\n    for (var j = minColumn; j <= maxColumn; j++) {\n      // store pointer to values index\n      ptr.push(values.length);\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = matrix._ptr[j];\n      var k1 = matrix._ptr[j + 1];\n      // row pointer\n      var p = minRow;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = matrix._index[k];\n        // check i is in range\n        if (i >= minRow && i <= maxRow) {\n          // zero values\n          if (!skipZeros) {\n           for (var x = p; x < i; x++)\n             invoke(0, x - minRow, j - minColumn);\n          }\n          // value @ k\n          invoke(matrix._values[k], i - minRow, j - minColumn);\n        }\n        // update pointer\n        p = i + 1;\n      }\n      // zero values\n      if (!skipZeros) {\n        for (var y = p; y <= maxRow; y++)\n          invoke(0, y - minRow, j - minColumn);\n      }\n    }\n    // store number of values in ptr\n    ptr.push(values.length);\n    // return sparse matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [maxRow - minRow + 1, maxColumn - minColumn + 1]\n    });\n  };\n  \n  /**\n   * Execute a callback function on each entry of the matrix.\n   * @memberof SparseMatrix\n   * @param {Function} callback   The callback function is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n   */\n  SparseMatrix.prototype.forEach = function (callback, skipZeros) {\n    // check it is a pattern matrix\n    if (!this._values)\n      throw new Error('Cannot invoke forEach on a Pattern only matrix');\n    // matrix instance\n    var me = this;\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // column pointer\n      var p = 0;\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // check we need to process zeros\n        if (!skipZeros) {\n          // zero values\n          for (var x = p; x < i; x++)\n            callback(0, [x, j], me);\n        }\n        // value @ k\n        callback(this._values[k], [i, j], me);\n        // update pointer\n        p = i + 1;\n      }\n      // check we need to process zeros\n      if (!skipZeros) {\n        // zero values\n        for (var y = p; y < rows; y++)\n          callback(0, [y, j], me);\n      }\n    }\n  };\n  \n  /**\n   * Create an Array with a copy of the data of the SparseMatrix\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.toArray = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, true);\n  };\n\n  /**\n   * Get the primitive value of the SparseMatrix: a two dimensions array\n   * @memberof SparseMatrix\n   * @returns {Array} array\n   */\n  SparseMatrix.prototype.valueOf = function () {\n    return _toArray(this._values, this._index, this._ptr, this._size, false);\n  };\n  \n  var _toArray = function (values, index, ptr, size, copy) {    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n    // result\n    var a = [];\n    // vars\n    var i, j;\n    // initialize array\n    for (i = 0; i < rows; i++) {\n      a[i] = [];\n      for (j = 0; j < columns; j++)\n        a[i][j] = 0;\n    }\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        i = index[k];\n        // set value (use one for pattern matrix)\n        a[i][j] = values ? (copy ? object.clone(values[k]) : values[k]) : 1;\n      }\n    }\n    return a;\n  };\n  \n  /**\n   * Get a string representation of the matrix, with optional formatting options.\n   * @memberof SparseMatrix\n   * @param {Object | number | Function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.format = function (options) {\n    // rows and columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    // density\n    var density = this.density();\n    // rows & columns\n    var str = 'Sparse Matrix [' + string.format(rows, options) + ' x ' + string.format(columns, options) + '] density: ' + string.format(density, options) + '\\n';\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop k within [k0, k1[\n      for (var k = k0; k < k1; k++) {\n        // row index\n        var i = this._index[k];\n        // append value\n        str += '\\n    (' + string.format(i, options) + ', ' + string.format(j, options) + ') ==> ' + (this._values ? string.format(this._values[k], options) : 'X');\n      }\n    }\n    return str;\n  };\n  \n  /**\n   * Get a string representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {string} str\n   */\n  SparseMatrix.prototype.toString = function () {\n    return string.format(this.toArray());\n  };\n  \n  /**\n   * Get a JSON representation of the matrix\n   * @memberof SparseMatrix\n   * @returns {Object}\n   */\n  SparseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'SparseMatrix',\n      values: this._values,\n      index: this._index,\n      ptr: this._ptr,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n\n  /**\n   * Get the kth Matrix diagonal.\n   *\n   * @memberof SparseMatrix\n   * @param {number | BigNumber} [k=0]     The kth diagonal where the vector will retrieved.\n   *\n   * @returns {Matrix}                     The matrix vector with the diagonal values.\n   */\n  SparseMatrix.prototype.diagonal = function(k) {\n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows & columns\n    var rows = this._size[0];\n    var columns = this._size[1];\n    \n    // number diagonal values\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // diagonal arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    // initial ptr value\n    ptr[0] = 0;\n    // loop columns\n    for (var j = kSuper; j < columns && values.length < n; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = this._ptr[j];\n      var k1 = this._ptr[j + 1];\n      // loop x within [k0, k1[\n      for (var x = k0; x < k1; x++) {\n        // row index\n        var i = this._index[x];\n        // check row\n        if (i === j - kSuper + kSub) {\n          // value on this column\n          values.push(this._values[x]);\n          // store row\n          index[values.length - 1] = i - kSub;\n          // exit loop\n          break;\n        }\n      }\n    }\n    // close ptr\n    ptr.push(values.length);\n    // return matrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [n, 1]\n    });\n  };\n  \n  /**\n   * Generate a matrix from a JSON object\n   * @memberof SparseMatrix\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"SparseMatrix\", \"values\": [], \"index\": [], \"ptr\": [], \"size\": []}`,\n   *                       where mathjs is optional\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.fromJSON = function (json) {\n    return new SparseMatrix(json);\n  };\n\n  /**\n   * Create a diagonal matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {Array} size                       The matrix size.\n   * @param {number | Array | Matrix } value   The values for the diagonal.\n   * @param {number | BigNumber} [k=0]         The kth diagonal where the vector will be filled in.\n   * @param {string} [datatype]                The Matrix datatype, values must be of this datatype.\n   *\n   * @returns {SparseMatrix}\n   */\n  SparseMatrix.diagonal = function (size, value, k, defaultValue, datatype) {\n    if (!isArray(size))\n      throw new TypeError('Array expected, size parameter');\n    if (size.length !== 2)\n      throw new Error('Only two dimensions matrix are supported');\n    \n    // map size & validate\n    size = size.map(function (s) {\n      // check it is a big number\n      if (type.isBigNumber(s)) {\n        // convert it\n        s = s.toNumber();\n      }\n      // validate arguments\n      if (!isNumber(s) || !isInteger(s) || s < 1) {\n        throw new Error('Size values must be positive integers');\n      } \n      return s;\n    });\n    \n    // validate k if any\n    if (k) {\n      // convert BigNumber to a number\n      if (type.isBigNumber(k))\n        k = k.toNumber();\n      // is must be an integer\n      if (!isNumber(k) || !isInteger(k)) {\n        throw new TypeError ('The parameter k must be an integer number');\n      }\n    }\n    else {\n      // default value\n      k = 0;\n    }\n\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    if (isString(datatype)) {\n      // find signature that matches (datatype, datatype)\n      eq = typed.find(equalScalar, [datatype, datatype]) || equalScalar;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, datatype);\n    }\n    \n    var kSuper = k > 0 ? k : 0;\n    var kSub = k < 0 ? -k : 0;\n    \n    // rows and columns\n    var rows = size[0];\n    var columns = size[1];\n    \n    // number of non-zero items\n    var n = Math.min(rows - kSub, columns -  kSuper);\n    \n    // value extraction function\n    var _value;\n      \n    // check value\n    if (isArray(value)) {\n      // validate array\n      if (value.length !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid value array length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value[i];\n      };\n    }\n    else if (type.isMatrix(value)) {\n      // matrix size\n      var ms = value.size();\n      // validate matrix\n      if (ms.length !== 1 || ms[0] !== n) {\n        // number of values in array must be n\n        throw new Error('Invalid matrix length');\n      }\n      // define function\n      _value = function (i) {\n        // return value @ i\n        return value.get([i]);\n      };\n    }\n    else {\n      // define function\n      _value = function () {\n        // return value\n        return value;\n      };\n    }\n    \n    // create arrays\n    var values = [];\n    var index = [];\n    var ptr = [];\n    \n    // loop items\n    for (var j = 0; j < columns; j++) {\n      // number of rows with value\n      ptr.push(values.length);\n      // diagonal index\n      var i = j - kSuper;      \n      // check we need to set diagonal value\n      if (i >= 0 && i < n) {\n        // get value @ i\n        var v = _value(i);\n        // check for zero\n        if (!eq(v, zero)) {\n          // column\n          index.push(i + kSub);\n          // add value\n          values.push(v);\n        }\n      }\n    }\n    // last value should be number of values\n    ptr.push(values.length);\n    // create SparseMatrix\n    return new SparseMatrix({\n      values: values,\n      index: index,\n      ptr: ptr,\n      size: [rows, columns]\n    });\n  };\n  \n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @memberof SparseMatrix\n   * @param {number} i       Matrix row index 1\n   * @param {number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  SparseMatrix.prototype.swapRows = function (i, j) {\n    // check index\n    if (!isNumber(i) || !isInteger(i) || !isNumber(j) || !isInteger(j)) {\n      throw new Error('Row index must be positive integers');\n    }\n    // check dimensions\n    if (this._size.length !== 2) {\n      throw new Error('Only two dimensional matrix is supported');\n    }\n    // validate index\n    validateIndex(i, this._size[0]);\n    validateIndex(j, this._size[0]);\n    \n    // swap rows\n    SparseMatrix._swapRows(i, j, this._size[1], this._values, this._index, this._ptr);\n    // return current instance\n    return this;\n  };\n  \n  /**\n   * Loop rows with data in column j.\n   *\n   * @param {number} j            Column\n   * @param {Array} values        Matrix values\n   * @param {Array} index         Matrix row indeces\n   * @param {Array} ptr           Matrix column pointers\n   * @param {Function} callback   Callback function invoked for every row in column j\n   */\n  SparseMatrix._forEachRow = function (j, values, index, ptr, callback) {\n    // indeces for column j\n    var k0 = ptr[j];\n    var k1 = ptr[j + 1];\n    // loop\n    for (var k = k0; k < k1; k++) {\n      // invoke callback\n      callback(index[k], values[k]);\n    }\n  };\n  \n  /**\n   * Swap rows x and y in Sparse Matrix data structures.\n   *\n   * @param {number} x         Matrix row index 1\n   * @param {number} y         Matrix row index 2\n   * @param {number} columns   Number of columns in matrix\n   * @param {Array} values     Matrix values\n   * @param {Array} index      Matrix row indeces\n   * @param {Array} ptr        Matrix column pointers\n   */\n  SparseMatrix._swapRows = function (x, y, columns, values, index, ptr) {\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // k0 <= k < k1 where k0 = _ptr[j] && k1 = _ptr[j+1]\n      var k0 = ptr[j];\n      var k1 = ptr[j + 1];\n      // find value index @ x\n      var kx = _getValueIndex(x, k0, k1, index);\n      // find value index @ x\n      var ky = _getValueIndex(y, k0, k1, index);\n      // check both rows exist in matrix\n      if (kx < k1 && ky < k1 && index[kx] === x && index[ky] === y) {\n        // swap values (check for pattern matrix)\n        if (values) {\n          var v = values[kx];\n          values[kx] = values[ky];\n          values[ky] = v;\n        }\n        // next column\n        continue;\n      }\n      // check x row exist & no y row\n      if (kx < k1 && index[kx] === x && (ky >= k1 || index[ky] !== y)) {\n        // value @ x (check for pattern matrix)\n        var vx = values ? values[kx] : undefined;\n        // insert value @ y\n        index.splice(ky, 0, y);\n        if (values)\n          values.splice(ky, 0, vx);        \n        // remove value @ x (adjust array index if needed)\n        index.splice(ky <= kx ? kx + 1 : kx, 1);\n        if (values)\n          values.splice(ky <= kx ? kx + 1 : kx, 1);\n        // next column\n        continue;\n      }\n      // check y row exist & no x row\n      if (ky < k1 && index[ky] === y && (kx >= k1 || index[kx] !== x)) {\n        // value @ y (check for pattern matrix)\n        var vy = values ? values[ky] : undefined;\n        // insert value @ x\n        index.splice(kx, 0, x);\n        if (values)\n          values.splice(kx, 0, vy);\n        // remove value @ y (adjust array index if needed)\n        index.splice(kx <= ky ? ky + 1 : ky, 1);\n        if (values)\n          values.splice(kx <= ky ? ky + 1 : ky, 1);\n      }\n    }\n  };\n\n  // register this type in the base class Matrix\n  type.Matrix._storage.sparse = SparseMatrix;\n\n  return SparseMatrix;\n}\n\nexports.name = 'SparseMatrix';\nexports.path = 'type';\nexports.factory = factory;\nexports.lazy = false;  // no lazy loading, as we alter type.Matrix._storage\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/SparseMatrix.js","'use strict';\n\nvar nearlyEqual = require('../../utils/number').nearlyEqual;\nvar bigNearlyEqual = require('../../utils/bignumber/nearlyEqual');\n\nfunction factory (type, config, load, typed) {\n  \n  /**\n   * Test whether two values are equal.\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Complex | Unit} x   First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Complex} y          Second value to compare\n   * @return {boolean}                                                  Returns true when the compared values are equal, else returns false\n   * @private\n   */\n  var equalScalar = typed('equalScalar', {\n\n    'boolean, boolean': function (x, y) {\n      return x === y;\n    },\n\n    'number, number': function (x, y) {\n      return x === y || nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.eq(y) || bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.equals(y);\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.equals(y);\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return equalScalar(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x === y;\n    }\n  });\n  \n  return equalScalar;\n}\n\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/relational/equalScalar.js","'use strict';\n\n/**\n * Compares two BigNumbers.\n * @param {BigNumber} x       First value to compare\n * @param {BigNumber} y       Second value to compare\n * @param {number} [epsilon]  The maximum relative difference between x and y\n *                            If epsilon is undefined or null, the function will\n *                            test whether x and y are exactly equal.\n * @return {boolean} whether the two numbers are nearly equal\n */\nmodule.exports = function nearlyEqual(x, y, epsilon) {\n  // if epsilon is null or undefined, test whether x and y are exactly equal\n  if (epsilon == null) {\n    return x.eq(y);\n  }\n\n\n  // use \"==\" operator, handles infinities\n  if (x.eq(y)) {\n    return true;\n  }\n\n  // NaN\n  if (x.isNaN() || y.isNaN()) {\n    return false;\n  }\n\n  // at this point x and y should be finite\n  if(x.isFinite() && y.isFinite()) {\n    // check numbers are very close, needed when comparing numbers near zero\n    var diff = x.minus(y).abs();\n    if (diff.isZero()) {\n      return true;\n    }\n    else {\n      // use relative error\n      var max = x.constructor.max(x.abs(), y.abs());\n      return diff.lte(max.times(epsilon));\n    }\n  }\n\n  // Infinite and Number or negative Infinite and positive Infinite cases\n  return false;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/bignumber/nearlyEqual.js","'use strict';\n\nfunction factory (type, config, load) {\n  \n  var add = load(require('../../function/arithmetic/add'));\n  var equalScalar = load(require('../../function/relational/equalScalar'));\n  \n  /**\n   * An ordered Sparse Accumulator is a representation for a sparse vector that includes a dense array \n   * of the vector elements and an ordered list of non-zero elements.\n   */\n  function Spa() {\n    if (!(this instanceof Spa))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    \n    // allocate vector, TODO use typed arrays\n    this._values = [];\n    this._heap = new type.FibonacciHeap();\n  }\n\n  /**\n   * Attach type information\n   */\n  Spa.prototype.type = 'Spa';\n  Spa.prototype.isSpa = true;\n\n  /**\n   * Set the value for index i.\n   *\n   * @param {number} i                       The index\n   * @param {number | BigNumber | Complex}   The value at index i\n   */\n  Spa.prototype.set = function (i, v) {\n    // check we have a value @ i\n    if (!this._values[i]) {\n      // insert in heap\n      var node = this._heap.insert(i, v);\n      // set the value @ i\n      this._values[i] = node;\n    }\n    else {\n      // update the value @ i\n      this._values[i].value = v;\n    }\n  };\n  \n  Spa.prototype.get = function (i) {\n    var node = this._values[i];\n    if (node)\n      return node.value;\n    return 0;\n  };\n  \n  Spa.prototype.accumulate = function (i, v) {\n    // node @ i\n    var node = this._values[i];\n    if (!node) {\n      // insert in heap\n      node = this._heap.insert(i, v);\n      // initialize value\n      this._values[i] = node;\n    }\n    else {\n      // accumulate value\n      node.value = add(node.value, v);\n    }\n  };\n  \n  Spa.prototype.forEach = function (from, to, callback) {\n    // references\n    var heap = this._heap;\n    var values = this._values;\n    // nodes\n    var nodes = [];\n    // node with minimum key, save it\n    var node = heap.extractMinimum();\n    if (node)\n      nodes.push(node);\n    // extract nodes from heap (ordered)\n    while (node && node.key <= to) {\n      // check it is in range\n      if (node.key >= from) {\n        // check value is not zero\n        if (!equalScalar(node.value, 0)) {\n          // invoke callback\n          callback(node.key, node.value, this);\n        }\n      }\n      // extract next node, save it\n      node = heap.extractMinimum();\n      if (node)\n        nodes.push(node);\n    }\n    // reinsert all nodes in heap\n    for (var i = 0; i < nodes.length; i++) {\n      // current node\n      var n = nodes[i];\n      // insert node in heap\n      node = heap.insert(n.key, n.value);\n      // update values\n      values[node.key] = node;\n    }\n  };\n  \n  Spa.prototype.swap = function (i, j) {\n    // node @ i and j\n    var nodei = this._values[i];\n    var nodej = this._values[j];\n    // check we need to insert indeces\n    if (!nodei && nodej) {\n      // insert in heap\n      nodei = this._heap.insert(i, nodej.value);\n      // remove from heap\n      this._heap.remove(nodej);\n      // set values\n      this._values[i] = nodei;\n      this._values[j] = undefined;\n    }\n    else if (nodei && !nodej) {\n      // insert in heap\n      nodej = this._heap.insert(j, nodei.value);\n      // remove from heap\n      this._heap.remove(nodei);\n      // set values\n      this._values[j] = nodej;\n      this._values[i] = undefined;\n    }\n    else if (nodei && nodej) {\n      // swap values\n      var v = nodei.value;\n      nodei.value = nodej.value;\n      nodej.value = v;\n    }\n  };\n  \n  return Spa;\n}\n\nexports.name = 'Spa';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/Spa.js","'use strict';\n\nvar extend = require('../../utils/object').extend;\n\nfunction factory (type, config, load, typed) {\n\n  var matrix = load(require('../../type/matrix/function/matrix'));\n  var addScalar = load(require('./addScalar'));\n  var latex = require('../../utils/latex.js');\n  \n  var algorithm01 = load(require('../../type/matrix/utils/algorithm01'));\n  var algorithm04 = load(require('../../type/matrix/utils/algorithm04'));\n  var algorithm10 = load(require('../../type/matrix/utils/algorithm10'));\n  var algorithm13 = load(require('../../type/matrix/utils/algorithm13'));\n  var algorithm14 = load(require('../../type/matrix/utils/algorithm14'));\n\n  /**\n   * Add two or more values, `x + y`.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.add(x, y)\n   *    math.add(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.add(2, 3);               // returns number 5\n   *    math.add(2, 3, 4);            // returns number 9\n   *\n   *    var a = math.complex(2, 3);\n   *    var b = math.complex(-4, 1);\n   *    math.add(a, b);               // returns Complex -2 + 4i\n   *\n   *    math.add([1, 2, 3], 4);       // returns Array [5, 6, 7]\n   *\n   *    var c = math.unit('5 cm');\n   *    var d = math.unit('2.1 mm');\n   *    math.add(c, d);               // returns Unit 52.1 mm\n   *\n   *    math.add(\"2.3\", \"4\");         // returns number 6.3\n   *\n   * See also:\n   *\n   *    subtract, sum\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to add\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Sum of `x` and `y`\n   */\n  var add = typed('add', extend({\n    // we extend the signatures of addScalar with signatures dealing with matrices\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n      \n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm04(x, y, addScalar);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm01(y, x, addScalar, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm01(x, y, addScalar, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, addScalar);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n    \n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), matrix(y)).valueOf();\n    },\n    \n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return add(matrix(x), y);\n    },\n    \n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return add(x, matrix(y));\n    },\n    \n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm10(x, y, addScalar, false);\n          break;\n        default:\n          c = algorithm14(x, y, addScalar, false);\n          break;\n      }\n      return c;\n    },\n    \n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm10(y, x, addScalar, true);\n          break;\n        default:\n          c = algorithm14(y, x, addScalar, true);\n          break;\n      }\n      return c;\n    },\n    \n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, addScalar, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, addScalar, true).valueOf();\n    },\n\n    'any, any': addScalar,\n\n    'Array | Matrix | any, Array | Matrix | any, ...any': function (x, y, rest) {\n      var result = add(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = add(result, rest[i]);\n      }\n\n      return result;\n    }\n  }, addScalar.signatures));\n\n  add.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['add'] + '${args[1]}\\\\right)'\n  };\n  \n  return add;\n}\n\nexports.name = 'add';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/arithmetic/add.js","'use strict';\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create a Matrix. The function creates a new `math.type.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   * Supported storage formats are 'dense' and 'sparse'.\n   *\n   * Syntax:\n   *\n   *    math.matrix()                         // creates an empty matrix using default storage format (dense).\n   *    math.matrix(data)                     // creates a matrix with initial data using default storage format (dense).\n   *    math.matrix('dense')                  // creates an empty matrix using the given storage format.\n   *    math.matrix(data, 'dense')            // creates a matrix with initial data using the given storage format.\n   *    math.matrix(data, 'sparse')           // creates a sparse matrix with initial data.\n   *    math.matrix(data, 'sparse', 'number') // creates a sparse matrix with initial data, number data type.\n   *\n   * Examples:\n   *\n   *    var m = math.matrix([[1, 2], [3, 4]]);\n   *    m.size();                        // Array [2, 2]\n   *    m.resize([3, 2], 5);\n   *    m.valueOf();                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, sparse\n   *\n   * @param {Array | Matrix} [data]    A multi dimensional array\n   * @param {string} [format]          The Matrix storage format\n   *\n   * @return {Matrix} The created matrix\n   */\n  var matrix = typed('matrix', {\n    '': function () {\n      return _create([]);\n    },\n\n    'string': function (format) {\n      return _create([], format);\n    },\n    \n    'string, string': function (format, datatype) {\n      return _create([], format, datatype);\n    },\n\n    'Array': function (data) {\n      return _create(data);\n    },\n      \n    'Matrix': function (data) {\n      return _create(data, data.storage());\n    },\n    \n    'Array | Matrix, string': _create,\n    \n    'Array | Matrix, string, string': _create\n  });\n\n  matrix.toTex = {\n    0: '\\\\begin{bmatrix}\\\\end{bmatrix}',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(${args[0]}\\\\right)'\n  };\n\n  return matrix;\n\n  /**\n   * Create a new Matrix with given storage format\n   * @param {Array} data\n   * @param {string} [format]\n   * @param {string} [datatype]\n   * @returns {Matrix} Returns a new Matrix\n   * @private\n   */\n  function _create(data, format, datatype) {\n    // get storage format constructor\n    var M = type.Matrix.storage(format || 'default');\n\n    // create instance\n    return new M(data, datatype);\n  }\n}\n\nexports.name = 'matrix';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/function/matrix.js","'use strict';\n\nfunction factory(type, config, load, typed) {\n\n  /**\n   * Add two scalar values, `x + y`.\n   * This function is meant for internal use: it is used by the public function\n   * `add`\n   *\n   * This function does not support collections (Array or Matrix), and does\n   * not validate the number of of inputs.\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to add\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to add\n   * @return {number | BigNumber | Fraction | Complex | Unit}                      Sum of `x` and `y`\n   * @private\n   */\n  var add = typed('add', {\n\n    'number, number': function (x, y) {\n      return x + y;\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.add(y);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.plus(y);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.add(y);\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (x.value == null) throw new Error('Parameter x contains a unit with undefined value');\n      if (y.value == null) throw new Error('Parameter y contains a unit with undefined value');\n      if (!x.equalBase(y)) throw new Error('Units do not match');\n\n      var res = x.clone();\n      res.value = add(res.value, y.value);\n      res.fixPrefix = false;\n      return res;\n    }\n  });\n\n  return add;\n}\n\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/arithmetic/addScalar.js","'use strict';\n\nexports.symbols = {\n  // GREEK LETTERS\n  Alpha: 'A',     alpha: '\\\\alpha',\n  Beta: 'B',      beta: '\\\\beta',\n  Gamma: '\\\\Gamma',    gamma: '\\\\gamma',\n  Delta: '\\\\Delta',    delta: '\\\\delta',\n  Epsilon: 'E',   epsilon: '\\\\epsilon',  varepsilon: '\\\\varepsilon',\n  Zeta: 'Z',      zeta: '\\\\zeta',\n  Eta: 'H',       eta: '\\\\eta',\n  Theta: '\\\\Theta',    theta: '\\\\theta',    vartheta: '\\\\vartheta',\n  Iota: 'I',      iota: '\\\\iota',\n  Kappa: 'K',     kappa: '\\\\kappa',    varkappa: '\\\\varkappa',\n  Lambda: '\\\\Lambda',   lambda: '\\\\lambda',\n  Mu: 'M',        mu: '\\\\mu',\n  Nu: 'N',        nu: '\\\\nu',\n  Xi: '\\\\Xi',       xi: '\\\\xi',\n  Omicron: 'O',   omicron: 'o',\n  Pi: '\\\\Pi',       pi: '\\\\pi',       varpi: '\\\\varpi',\n  Rho: 'P',       rho: '\\\\rho',      varrho: '\\\\varrho',\n  Sigma: '\\\\Sigma',    sigma: '\\\\sigma',    varsigma: '\\\\varsigma',\n  Tau: 'T',       tau: '\\\\tau',\n  Upsilon: '\\\\Upsilon',  upsilon: '\\\\upsilon',\n  Phi: '\\\\Phi',      phi: '\\\\phi',      varphi: '\\\\varphi',\n  Chi: 'X',       chi: '\\\\chi',\n  Psi: '\\\\Psi',      psi: '\\\\psi',\n  Omega: '\\\\Omega',    omega: '\\\\omega',\n  //logic\n  'true': '\\\\mathrm{True}',\n  'false': '\\\\mathrm{False}',\n  //other\n  i: 'i', //TODO use \\i ??\n  inf: '\\\\infty',\n  Inf: '\\\\infty',\n  infinity: '\\\\infty',\n  Infinity: '\\\\infty',\n  oo: '\\\\infty',\n  lim: '\\\\lim',\n  'undefined': '\\\\mathbf{?}'\n};\n\nexports.operators = {\n  'transpose': '^\\\\top',\n  'factorial': '!',\n  'pow': '^',\n  'dotPow': '.^\\\\wedge', //TODO find ideal solution\n  'unaryPlus': '+',\n  'unaryMinus': '-',\n  'bitNot': '~', //TODO find ideal solution\n  'not': '\\\\neg',\n  'multiply': '\\\\cdot',\n  'divide': '\\\\frac', //TODO how to handle that properly?\n  'dotMultiply': '.\\\\cdot', //TODO find ideal solution\n  'dotDivide': '.:', //TODO find ideal solution\n  'mod': '\\\\mod',\n  'add': '+',\n  'subtract': '-',\n  'to': '\\\\rightarrow',\n  'leftShift': '<<',\n  'rightArithShift': '>>',\n  'rightLogShift': '>>>',\n  'equal': '=',\n  'unequal': '\\\\neq',\n  'smaller': '<',\n  'larger': '>',\n  'smallerEq': '\\\\leq',\n  'largerEq': '\\\\geq',\n  'bitAnd': '\\\\&',\n  'bitXor': '\\\\underline{|}',\n  'bitOr': '|',\n  'and': '\\\\wedge',\n  'xor': '\\\\veebar',\n  'or': '\\\\vee'\n};\n\nexports.defaultTemplate = '\\\\mathrm{${name}}\\\\left(${args}\\\\right)';\n\nvar units = {\n  deg: '^\\\\circ'\n};\n\n//@param {string} name\n//@param {boolean} isUnit\nexports.toSymbol = function (name, isUnit) {\n  isUnit = typeof isUnit === 'undefined' ? false : isUnit;\n  if (isUnit) {\n    if (units.hasOwnProperty(name)) {\n      return units[name];\n    }\n    return '\\\\mathrm{' + name + '}';\n  }\n\n  if (exports.symbols.hasOwnProperty(name)) {\n    return exports.symbols[name];\n  }\n  else if (name.indexOf('_') !== -1) {\n    //symbol with index (eg. alpha_1)\n    var index = name.indexOf('_');\n    return exports.toSymbol(name.substring(0, index)) + '_{'\n      + exports.toSymbol(name.substring(index + 1)) + '}';\n  }\n  return name;\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/latex.js","'use strict';\n\nvar DimensionError = require('../../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix nonzero items and invokes the callback function f(Dij, Sij). \n   * Callback function invoked NNZ times (number of nonzero items in SparseMatrix).\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  Dij          ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (S)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  var algorithm01 = function (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype;\n    // sparse matrix arrays\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues)\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // process data types\n    var dt = typeof adt === 'string' && adt === bdt ? adt : undefined;\n    // callback function\n    var cf = dt ? typed.find(callback, [dt, dt]) : callback;\n\n    // vars\n    var i, j;\n    \n    // result (DenseMatrix)\n    var cdata = [];\n    // initialize c\n    for (i = 0; i < rows; i++)\n      cdata[i] = [];      \n    \n    // workspace\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns in b\n    for (j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1;\n      // values in column j\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k];\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        // mark i as updated\n        w[i] = mark;\n      }\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // check row is in workspace\n        if (w[i] === mark) {\n          // c[i][j] was already calculated\n          cdata[i][j] = x[i];\n        }\n        else {\n          // item does not exist in S\n          cdata[i][j] = adata[i][j];\n        }\n      }\n    }\n\n    // return dense matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n  \n  return algorithm01;\n}\n\nexports.name = 'algorithm01';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm01.js","'use strict';\n\nvar DimensionError = require('../../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n\n  var equalScalar = load(require('../../../function/relational/equalScalar'));\n\n  var SparseMatrix = type.SparseMatrix;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B nonzero items and invokes the callback function f(Aij, Bij). \n   * Callback function invoked MAX(NNZA, NNZB) times\n   *\n   *\n   *          ┌  f(Aij, Bij)  ; A(i,j) !== 0 && B(i,j) !== 0\n   * C(i,j) = ┤  A(i,j)       ; A(i,j) !== 0\n   *          └  B(i,j)       ; B(i,j) !== 0\n   *\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  var algorithm04 = function (a, b, callback) {\n    // sparse matrix arrays\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var asize = a._size;\n    var adt = a._datatype;\n    // sparse matrix arrays\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cvalues = avalues && bvalues ? [] : undefined;\n    var cindex = [];\n    var cptr = [];\n    // matrix\n    var c = new SparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspace\n    var xa = avalues && bvalues ? [] : undefined;\n    var xb = avalues && bvalues ? [] : undefined;\n    // marks indicating we have a value in x for a given column\n    var wa = [];\n    var wb = [];\n\n    // vars \n    var i, j, k, k0, k1;\n    \n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // update cptr\n      cptr[j] = cindex.length;\n      // columns mark\n      var mark = j + 1;\n      // loop A(:,j)\n      for (k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = aindex[k];\n        // update c\n        cindex.push(i);\n        // update workspace\n        wa[i] = mark;\n        // check we need to process values\n        if (xa)\n          xa[i] = avalues[k];\n      }\n      // loop B(:,j)\n      for (k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        i = bindex[k];\n        // check row exists in A\n        if (wa[i] === mark) {\n          // update record in xa @ i\n          if (xa) {\n            // invoke callback\n            var v = cf(xa[i], bvalues[k]);\n            // check for zero\n            if (!eq(v, zero)) {\n              // update workspace\n              xa[i] = v;              \n            }\n            else {\n              // remove mark (index will be removed later)\n              wa[i] = null;\n            }\n          }\n        }\n        else {\n          // update c\n          cindex.push(i);\n          // update workspace\n          wb[i] = mark;\n          // check we need to process values\n          if (xb)\n            xb[i] = bvalues[k];\n        }\n      }\n      // check we need to process values (non pattern matrix)\n      if (xa && xb) {\n        // initialize first index in j\n        k = cptr[j];\n        // loop index in j\n        while (k < cindex.length) {\n          // row\n          i = cindex[k];\n          // check workspace has value @ i\n          if (wa[i] === mark) {\n            // push value (Aij != 0 || (Aij != 0 && Bij != 0))\n            cvalues[k] = xa[i];\n            // increment pointer\n            k++;\n          }\n          else if (wb[i] === mark) {\n            // push value (bij != 0)\n            cvalues[k] = xb[i];\n            // increment pointer\n            k++;\n          }\n          else {\n            // remove index @ k\n            cindex.splice(k, 1);\n          }\n        }\n      }\n    }\n    // update cptr\n    cptr[columns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  };\n  \n  return algorithm04;\n}\n\nexports.name = 'algorithm04';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm04.js","'use strict';\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b). \n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤  \n   *          └  b          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  var algorithm10 = function (s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues)\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cdata = [];\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k];\n        // update workspace\n        x[r] = avalues[k];\n        w[r] = mark;\n      }\n      // loop rows\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        }\n        else {\n          // dense matrix value @ i, j\n          cdata[i][j] = b;\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c;\n  };\n\n  return algorithm10;\n}\n\nexports.name = 'algorithm10';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm10.js","'use strict';\n\nvar util = require('../../../utils/index');\nvar DimensionError = require('../../../error/DimensionError');\n\nvar string = util.string,\n    isString = string.isString;\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, Bij..z). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, Bij..z)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Matrix}   b                 The DenseMatrix instance (B)\n   * @param {Function} callback          The f(Aij..z,Bij..z) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97658658\n   */\n  var algorithm13 = function (a, b, callback) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    // b arrays\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype;\n    // c arrays\n    var csize = [];\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // validate each one of the dimension sizes\n    for (var s = 0; s < asize.length; s++) {\n      // must match\n      if (asize[s] !== bsize[s])\n        throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n      // update dimension in c\n      csize[s] = asize[s];\n    }\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // populate cdata, iterate through dimensions\n    var cdata = csize.length > 0 ? _iterate(cf, 0, csize, csize[0], adata, bdata) : [];\n    \n    // c matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: csize,\n      datatype: dt\n    });\n  };\n  \n  // recursive function\n  var _iterate = function (f, level, s, n, av, bv) {\n    // initialize array for this level\n    var cv = [];\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = f(av[i], bv[i]);\n      }\n    }\n    else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv[j]);\n      }\n    }\n    return cv;\n  };\n  \n  return algorithm13;\n}\n\nexports.name = 'algorithm13';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm13.js","'use strict';\n\nvar clone = require('../../../utils/object').clone;\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over DenseMatrix items and invokes the callback function f(Aij..z, b). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j,...z) = f(Aij..z, b)\n   *\n   * @param {Matrix}   a                 The DenseMatrix instance (A)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij..z,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Aij..z)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97659042\n   */\n  var algorithm14 = function (a, b, callback, inverse) {\n    // a arrays\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    \n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n    \n    // populate cdata, iterate through dimensions\n    var cdata = asize.length > 0 ? _iterate(cf, 0, asize, asize[0], adata, b, inverse) : [];\n\n    // c matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: clone(asize),\n      datatype: dt\n    });\n  };\n  \n  // recursive function\n  var _iterate = function (f, level, s, n, av, bv, inverse) {\n    // initialize array for this level\n    var cv = [];\n    // check we reach the last level\n    if (level === s.length - 1) {\n      // loop arrays in last level\n      for (var i = 0; i < n; i++) {\n        // invoke callback and store value\n        cv[i] = inverse ? f(bv, av[i]) : f(av[i], bv);\n      }\n    }\n    else {\n      // iterate current level\n      for (var j = 0; j < n; j++) {\n        // iterate next level\n        cv[j] = _iterate(f, level + 1, s, s[level + 1], av[j], bv, inverse);\n      }\n    }\n    return cv;\n  };\n\n  return algorithm14;\n}\n\nexports.name = 'algorithm14';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm14.js","'use strict';\n\nfunction factory (type, config, load, typed) {\n  \n  var smaller = load(require('../../function/relational/smaller'));\n  var larger = load(require('../../function/relational/larger'));\n  \n  var oneOverLogPhi = 1.0 / Math.log((1.0 + Math.sqrt(5.0)) / 2.0);\n  \n  /**\n   * Fibonacci Heap implementation, used interally for Matrix math.\n   * @class FibonacciHeap\n   * @constructor FibonacciHeap\n   */\n  function FibonacciHeap() {\n    if (!(this instanceof FibonacciHeap))\n      throw new SyntaxError('Constructor must be called with the new operator');\n\n    // initialize fields\n    this._minimum = null;\n    this._size = 0;\n  }\n\n  /**\n   * Attach type information\n   */\n  FibonacciHeap.prototype.type = 'FibonacciHeap';\n  FibonacciHeap.prototype.isFibonacciHeap = true;\n\n  /**\n   * Inserts a new data element into the heap. No heap consolidation is\n   * performed at this time, the new node is simply inserted into the root\n   * list of this heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.insert = function (key, value) {\n    // create node\n    var node = {\n      key: key,\n      value: value,\n      degree: 0\n    };\n    // check we have a node in the minimum\n    if (this._minimum) {\n      // minimum node\n      var minimum = this._minimum;\n      // update left & right of node\n      node.left = minimum;\n      node.right = minimum.right;\n      minimum.right = node;\n      node.right.left = node;\n      // update minimum node in heap if needed\n      if (smaller(key, minimum.key)) {\n        // node has a smaller key, use it as minimum\n        this._minimum = node;\n      }\n    }\n    else {\n      // set left & right\n      node.left = node;\n      node.right = node;\n      // this is the first node\n      this._minimum = node;\n    }\n    // increment number of nodes in heap\n    this._size++;\n    // return node\n    return node;\n  };\n\n  /**\n   * Returns the number of nodes in heap. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.size = function () {\n    return this._size;\n  };\n\n  /**\n   * Removes all elements from this heap.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.clear = function () {\n    this._minimum = null;\n    this._size = 0;\n  };\n\n  /**\n   * Returns true if the heap is empty, otherwise false.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.isEmpty = function () {\n    return this._size === 0;\n  };\n  \n  /**\n   * Extracts the node with minimum key from heap. Amortized running \n   * time: O(log n).\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.extractMinimum = function () {\n    // node to remove\n    var node = this._minimum;\n    // check we have a minimum\n    if (node === null)\n      return node;\n    // current minimum\n    var minimum = this._minimum;\n    // get number of children\n    var numberOfChildren = node.degree;\n    // pointer to the first child\n    var x = node.child;\n    // for each child of node do...\n    while (numberOfChildren > 0) {\n      // store node in right side\n      var tempRight = x.right;\n      // remove x from child list\n      x.left.right = x.right;\n      x.right.left = x.left;\n      // add x to root list of heap\n      x.left = minimum;\n      x.right = minimum.right;\n      minimum.right = x;\n      x.right.left = x;\n      // set Parent[x] to null\n      x.parent = null;\n      x = tempRight;\n      numberOfChildren--;\n    }\n    // remove node from root list of heap\n    node.left.right = node.right;\n    node.right.left = node.left;\n    // update minimum\n    if (node == node.right) {\n      // empty\n      minimum = null;\n    }\n    else {\n      // update minimum\n      minimum = node.right;\n      // we need to update the pointer to the root with minimum key\n      minimum = _findMinimumNode(minimum, this._size);\n    }\n    // decrement size of heap\n    this._size--;\n    // update minimum\n    this._minimum = minimum;\n    // return node\n    return node;\n  };\n  \n  /**\n   * Removes a node from the heap given the reference to the node. The trees\n   * in the heap will be consolidated, if necessary. This operation may fail\n   * to remove the correct element if there are nodes with key value -Infinity.\n   * Running time: O(log n) amortized.\n   * @memberof FibonacciHeap\n   */\n  FibonacciHeap.prototype.remove = function (node) {\n    // decrease key value\n    this._minimum = _decreaseKey(this._minimum, node, -1);\n    // remove the smallest\n    this.extractMinimum();\n  };\n  \n  /**\n   * Decreases the key value for a heap node, given the new value to take on.\n   * The structure of the heap may be changed and will not be consolidated. \n   * Running time: O(1) amortized.\n   * @memberof FibonacciHeap\n   */\n  var _decreaseKey = function (minimum, node, key) {\n    // set node key\n    node.key = key;\n    // get parent node\n    var parent = node.parent;\n    if (parent && smaller(node.key, parent.key)) {\n      // remove node from parent\n      _cut(minimum, node, parent);\n      // remove all nodes from parent to the root parent\n      _cascadingCut(minimum, parent);\n    }\n    // update minimum node if needed\n    if (smaller(node.key, minimum.key))\n      minimum = node;\n    // return minimum\n    return minimum;\n  };\n  \n  /**\n   * The reverse of the link operation: removes node from the child list of parent.\n   * This method assumes that min is non-null. Running time: O(1).\n   * @memberof FibonacciHeap\n   */\n  var _cut = function (minimum, node, parent) {\n    // remove node from parent children and decrement Degree[parent]\n    node.left.right = node.right;\n    node.right.left = node.left;\n    parent.degree--;\n    // reset y.child if necessary\n    if (parent.child == node)\n      parent.child = node.right;\n    // remove child if degree is 0\n    if (parent.degree === 0)\n      parent.child = null;\n    // add node to root list of heap\n    node.left = minimum;\n    node.right = minimum.right;\n    minimum.right = node;\n    node.right.left = node;\n    // set parent[node] to null\n    node.parent = null;\n    // set mark[node] to false\n    node.mark = false;\n  };\n  \n  /**\n   * Performs a cascading cut operation. This cuts node from its parent and then\n   * does the same for its parent, and so on up the tree.\n   * Running time: O(log n); O(1) excluding the recursion.\n   * @memberof FibonacciHeap\n   */\n  var _cascadingCut= function (minimum, node) {\n    // store parent node\n    var parent = node.parent;\n    // if there's a parent...\n    if (!parent)\n      return;\n    // if node is unmarked, set it marked\n    if (!node.mark) {\n      node.mark = true;\n    }\n    else {\n      // it's marked, cut it from parent\n      _cut(minimum, node, parent);\n      // cut its parent as well\n      _cascadingCut(parent);\n    }\n  };\n  \n  /**\n   * Make the first node a child of the second one. Running time: O(1) actual.\n   * @memberof FibonacciHeap\n   */\n  var _linkNodes = function (node, parent) {\n    // remove node from root list of heap\n    node.left.right = node.right;\n    node.right.left = node.left;\n    // make node a Child of parent\n    node.parent = parent;\n    if (!parent.child) {\n      parent.child = node;\n      node.right = node;\n      node.left = node;\n    }\n    else {\n      node.left = parent.child;\n      node.right = parent.child.right;\n      parent.child.right = node;\n      node.right.left = node;\n    }\n    // increase degree[parent]\n    parent.degree++;\n    // set mark[node] false\n    node.mark = false;\n  };\n  \n  var _findMinimumNode = function (minimum, size) {\n    // to find trees of the same degree efficiently we use an array of length O(log n) in which we keep a pointer to one root of each degree\n    var arraySize = Math.floor(Math.log(size) * oneOverLogPhi) + 1;\n    // create list with initial capacity\n    var array = new Array(arraySize);\n    // find the number of root nodes.\n    var numRoots = 0;\n    var x = minimum;\n    if (x) {\n      numRoots++;\n      x = x.right;\n      while (x !== minimum) {\n        numRoots++;\n        x = x.right;\n      }\n    }\n    // vars\n    var y;\n    // For each node in root list do...\n    while (numRoots > 0) {\n      // access this node's degree..\n      var d = x.degree;\n      // get next node\n      var next = x.right;\n      // check if there is a node already in array with the same degree\n      while (true) {\n        // get node with the same degree is any\n        y = array[d];\n        if (!y)\n          break;\n        // make one node with the same degree a child of the other, do this based on the key value.\n        if (larger(x.key, y.key)) {\n          var temp = y;\n          y = x;\n          x = temp;\n        }\n        // make y a child of x\n        _linkNodes(y, x);\n        // we have handled this degree, go to next one.\n        array[d] = null;\n        d++;\n      }\n      // save this node for later when we might encounter another of the same degree.\n      array[d] = x;\n      // move forward through list.\n      x = next;\n      numRoots--;\n    }\n    // Set min to null (effectively losing the root list) and reconstruct the root list from the array entries in array[].\n    minimum = null;\n    // loop nodes in array\n    for (var i = 0; i < arraySize; i++) {\n      // get current node\n      y = array[i];\n      if (!y)\n        continue;\n      // check if we have a linked list\n      if (minimum) {\n        // First remove node from root list.\n        y.left.right = y.right;\n        y.right.left = y.left;\n        // now add to root list, again.\n        y.left = minimum;\n        y.right = minimum.right;\n        minimum.right = y;\n        y.right.left = y;\n        // check if this is a new min.\n        if (smaller(y.key, minimum.key))\n          minimum = y;\n      }\n      else\n        minimum = y;\n    }\n    return minimum;\n  };\n  \n  return FibonacciHeap;\n}\n\nexports.name = 'FibonacciHeap';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/FibonacciHeap.js","'use strict';\n\nvar nearlyEqual = require('../../utils/number').nearlyEqual;\nvar bigNearlyEqual = require('../../utils/bignumber/nearlyEqual');\n\nfunction factory (type, config, load, typed) {\n\n  var matrix = load(require('../../type/matrix/function/matrix'));\n\n  var algorithm03 = load(require('../../type/matrix/utils/algorithm03'));\n  var algorithm07 = load(require('../../type/matrix/utils/algorithm07'));\n  var algorithm12 = load(require('../../type/matrix/utils/algorithm12'));\n  var algorithm13 = load(require('../../type/matrix/utils/algorithm13'));\n  var algorithm14 = load(require('../../type/matrix/utils/algorithm14'));\n\n  var latex = require('../../utils/latex');\n\n  /**\n   * Test whether value x is smaller than y.\n   *\n   * The function returns true when x is smaller than y and the relative\n   * difference between x and y is smaller than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.smaller(x, y)\n   *\n   * Examples:\n   *\n   *    math.smaller(2, 3);            // returns true\n   *    math.smaller(5, 2 * 2);        // returns false\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('2 inch');\n   *    math.smaller(a, b);            // returns true\n   *\n   * See also:\n   *\n   *    equal, unequal, smallerEq, smaller, smallerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is smaller than y, else returns false\n   */\n  var smaller = typed('smaller', {\n\n    'boolean, boolean': function (x, y) {\n      return x < y;\n    },\n\n    'number, number': function (x, y) {\n      return x < y && !nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.lt(y) && !bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) === -1;\n    },\n\n    'Complex, Complex': function (x, y) {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return smaller(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x < y;\n    },\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n\n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm07(x, y, smaller);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm03(y, x, smaller, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm03(x, y, smaller, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, smaller);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return smaller(matrix(x), matrix(y)).valueOf();\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return smaller(matrix(x), y);\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return smaller(x, matrix(y));\n    },\n\n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm12(x, y, smaller, false);\n          break;\n        default:\n          c = algorithm14(x, y, smaller, false);\n          break;\n      }\n      return c;\n    },\n\n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm12(y, x, smaller, true);\n          break;\n        default:\n          c = algorithm14(y, x, smaller, true);\n          break;\n      }\n      return c;\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, smaller, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, smaller, true).valueOf();\n    }\n  });\n\n  smaller.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['smaller'] + '${args[1]}\\\\right)'\n  };\n\n  return smaller;\n}\n\nexports.name = 'smaller';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/relational/smaller.js","'use strict';\n\nvar DimensionError = require('../../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix items and invokes the callback function f(Dij, Sij).\n   * Callback function invoked M*N times.\n   *\n   *\n   *          ┌  f(Dij, Sij)  ; S(i,j) !== 0\n   * C(i,j) = ┤\n   *          └  f(Dij, 0)    ; otherwise\n   *\n   *\n   * @param {Matrix}   denseMatrix       The DenseMatrix instance (D)\n   * @param {Matrix}   sparseMatrix      The SparseMatrix instance (C)\n   * @param {Function} callback          The f(Dij,Sij) operation to invoke, where Dij = DenseMatrix(i,j) and Sij = SparseMatrix(i,j)\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(Sij,Dij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97477571\n   */\n  var algorithm03 = function (denseMatrix, sparseMatrix, callback, inverse) {\n    // dense matrix arrays\n    var adata = denseMatrix._data;\n    var asize = denseMatrix._size;\n    var adt = denseMatrix._datatype;\n    // sparse matrix arrays\n    var bvalues = sparseMatrix._values;\n    var bindex = sparseMatrix._index;\n    var bptr = sparseMatrix._ptr;\n    var bsize = sparseMatrix._size;\n    var bdt = sparseMatrix._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!bvalues)\n      throw new Error('Cannot perform operation on Dense Matrix and Pattern Sparse Matrix');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result (DenseMatrix)\n    var cdata = [];\n\n    // initialize dense matrix\n    for (var z = 0; z < rows; z++) {\n      // initialize row\n      cdata[z] = [];\n    }\n\n    // workspace\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns in b\n    for (var j = 0; j < columns; j++) {\n      // column mark\n      var mark = j + 1;\n      // values in column j\n      for (var k0 = bptr[j], k1 = bptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = bindex[k];\n        // update workspace\n        x[i] = inverse ? cf(bvalues[k], adata[i][j]) : cf(adata[i][j], bvalues[k]);\n        w[i] = mark;\n      }\n      // process workspace\n      for (var y = 0; y < rows; y++) {\n        // check we have a calculated value for current row\n        if (w[y] === mark) {\n          // use calculated value\n          cdata[y][j] = x[y];\n        }\n        else {\n          // calculate value\n          cdata[y][j] = inverse ? cf(zero, adata[y][j]) : cf(adata[y][j], zero);\n        }\n      }\n    }\n\n    // return dense matrix\n    return new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n  };\n  \n  return algorithm03;\n}\n\nexports.name = 'algorithm03';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm03.js","'use strict';\n\nvar DimensionError = require('../../../error/DimensionError');\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix A and SparseMatrix B items (zero and nonzero) and invokes the callback function f(Aij, Bij). \n   * Callback function invoked MxN times.\n   *\n   * C(i,j) = f(Aij, Bij)\n   *\n   * @param {Matrix}   a                 The SparseMatrix instance (A)\n   * @param {Matrix}   b                 The SparseMatrix instance (B)\n   * @param {Function} callback          The f(Aij,Bij) operation to invoke\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * see https://github.com/josdejong/mathjs/pull/346#issuecomment-97620294\n   */\n  var algorithm07 = function (a, b, callback) {\n    // sparse matrix arrays\n    var asize = a._size;\n    var adt = a._datatype;\n    // sparse matrix arrays\n    var bsize = b._size;\n    var bdt = b._datatype;\n\n    // validate dimensions\n    if (asize.length !== bsize.length)\n      throw new DimensionError(asize.length, bsize.length);\n\n    // check rows & columns\n    if (asize[0] !== bsize[0] || asize[1] !== bsize[1])\n      throw new RangeError('Dimension mismatch. Matrix A (' + asize + ') must match Matrix B (' + bsize + ')');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string' && adt === bdt) {\n      // datatype\n      dt = adt;\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // vars\n    var i, j;\n    \n    // result arrays\n    var cdata = [];\n    // initialize c\n    for (i = 0; i < rows; i++)\n      cdata[i] = [];\n\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var xa = [];\n    var xb = [];\n    // marks indicating we have a value in x for a given column\n    var wa = [];\n    var wb = [];\n\n    // loop columns\n    for (j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // scatter the values of A(:,j) into workspace\n      _scatter(a, j, wa, xa, mark);\n      // scatter the values of B(:,j) into workspace\n      _scatter(b, j, wb, xb, mark);\n      // loop rows\n      for (i = 0; i < rows; i++) {\n        // matrix values @ i,j\n        var va = wa[i] === mark ? xa[i] : zero;\n        var vb = wb[i] === mark ? xb[i] : zero;\n        // invoke callback\n        cdata[i][j] = cf(va, vb);\n      }          \n    }\n\n    // return sparse matrix\n    return c;\n  };\n  \n  var _scatter = function (m, j, w, x, mark) {\n    // a arrays\n    var values = m._values;\n    var index = m._index;\n    var ptr = m._ptr;\n    // loop values in column j\n    for (var k = ptr[j], k1 = ptr[j + 1]; k < k1; k++) {\n      // row\n      var i = index[k];\n      // update workspace\n      w[i] = mark;\n      x[i] = values[k];\n    }\n  };\n  \n  return algorithm07;\n}\n\nexports.name = 'algorithm07';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm07.js","'use strict';\n\nfunction factory (type, config, load, typed) {\n\n  var DenseMatrix = type.DenseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b). \n   * Callback function invoked MxN times.\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤  \n   *          └  f(0, b)    ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    DenseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  var algorithm12 = function (s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues)\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n    \n    // result arrays\n    var cdata = [];\n    // matrix\n    var c = new DenseMatrix({\n      data: cdata,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // workspaces\n    var x = [];\n    // marks indicating we have a value in x for a given column\n    var w = [];\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // columns mark\n      var mark = j + 1;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var r = aindex[k];\n        // update workspace\n        x[r] = avalues[k];\n        w[r] = mark;\n      }\n      // loop rows\n      for (var i = 0; i < rows; i++) {\n        // initialize C on first column\n        if (j === 0) {\n          // create row array\n          cdata[i] = [];\n        }\n        // check sparse matrix has a value @ i,j\n        if (w[i] === mark) {\n          // invoke callback, update C\n          cdata[i][j] = inverse ? cf(b, x[i]) : cf(x[i], b);\n        }\n        else {\n          // dense matrix value @ i, j\n          cdata[i][j] = inverse ? cf(b, 0) : cf(0, b);\n        }\n      }\n    }\n\n    // return sparse matrix\n    return c;\n  };\n  \n  return algorithm12;\n}\n\nexports.name = 'algorithm12';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm12.js","'use strict';\n\nvar nearlyEqual = require('../../utils/number').nearlyEqual;\nvar bigNearlyEqual = require('../../utils/bignumber/nearlyEqual');\n\nfunction factory (type, config, load, typed) {\n  \n  var matrix = load(require('../../type/matrix/function/matrix'));\n\n  var algorithm03 = load(require('../../type/matrix/utils/algorithm03'));\n  var algorithm07 = load(require('../../type/matrix/utils/algorithm07'));\n  var algorithm12 = load(require('../../type/matrix/utils/algorithm12'));\n  var algorithm13 = load(require('../../type/matrix/utils/algorithm13'));\n  var algorithm14 = load(require('../../type/matrix/utils/algorithm14'));\n\n  var latex = require('../../utils/latex');\n\n  /**\n   * Test whether value x is larger than y.\n   *\n   * The function returns true when x is larger than y and the relative\n   * difference between x and y is larger than the configured epsilon. The\n   * function cannot be used to compare values smaller than approximately 2.22e-16.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.larger(x, y)\n   *\n   * Examples:\n   *\n   *    math.larger(2, 3);             // returns false\n   *    math.larger(5, 2 + 2);         // returns true\n   *\n   *    var a = math.unit('5 cm');\n   *    var b = math.unit('2 inch');\n   *    math.larger(a, b);             // returns false\n   *\n   * See also:\n   *\n   *    equal, unequal, smaller, smallerEq, largerEq, compare\n   *\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} x First value to compare\n   * @param  {number | BigNumber | Fraction | boolean | Unit | string | Array | Matrix} y Second value to compare\n   * @return {boolean | Array | Matrix} Returns true when the x is larger than y, else returns false\n   */\n  var larger = typed('larger', {\n\n    'boolean, boolean': function (x, y) {\n      return x > y;\n    },\n\n    'number, number': function (x, y) {\n      return x > y && !nearlyEqual(x, y, config.epsilon);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.gt(y) && !bigNearlyEqual(x, y, config.epsilon);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.compare(y) === 1;\n    },\n\n    'Complex, Complex': function () {\n      throw new TypeError('No ordering relation is defined for complex numbers');\n    },\n\n    'Unit, Unit': function (x, y) {\n      if (!x.equalBase(y)) {\n        throw new Error('Cannot compare units with different base');\n      }\n      return larger(x.value, y.value);\n    },\n\n    'string, string': function (x, y) {\n      return x > y;\n    },\n\n    'Matrix, Matrix': function (x, y) {\n      // result\n      var c;\n\n      // process matrix storage\n      switch (x.storage()) {\n        case 'sparse':\n          switch (y.storage()) {\n            case 'sparse':\n              // sparse + sparse\n              c = algorithm07(x, y, larger);\n              break;\n            default:\n              // sparse + dense\n              c = algorithm03(y, x, larger, true);\n              break;\n          }\n          break;\n        default:\n          switch (y.storage()) {\n            case 'sparse':\n              // dense + sparse\n              c = algorithm03(x, y, larger, false);\n              break;\n            default:\n              // dense + dense\n              c = algorithm13(x, y, larger);\n              break;\n          }\n          break;\n      }\n      return c;\n    },\n\n    'Array, Array': function (x, y) {\n      // use matrix implementation\n      return larger(matrix(x), matrix(y)).valueOf();\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use matrix implementation\n      return larger(matrix(x), y);\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use matrix implementation\n      return larger(x, matrix(y));\n    },\n\n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm12(x, y, larger, false);\n          break;\n        default:\n          c = algorithm14(x, y, larger, false);\n          break;\n      }\n      return c;\n    },\n\n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm12(y, x, larger, true);\n          break;\n        default:\n          c = algorithm14(y, x, larger, true);\n          break;\n      }\n      return c;\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, larger, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, larger, true).valueOf();\n    }\n  });\n\n  larger.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['larger'] + '${args[1]}\\\\right)'\n  };\n\n  return larger;\n}\n\nexports.name = 'larger';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/relational/larger.js","'use strict';\n\nvar util = require('../../utils/index');\n\nvar string = util.string;\nvar object = util.object;\n\nvar isArray = Array.isArray;\nvar isString = string.isString;\n\nfunction factory (type, config, load) {\n\n  var DenseMatrix = load(require('./DenseMatrix'));\n\n  var smaller = load(require('../../function/relational/smaller'));\n\n  function ImmutableDenseMatrix(data, datatype) {\n    if (!(this instanceof ImmutableDenseMatrix))\n      throw new SyntaxError('Constructor must be called with the new operator');\n    if (datatype && !isString(datatype))\n      throw new Error('Invalid datatype: ' + datatype);\n\n    if (type.isMatrix(data) || isArray(data)) {\n      // use DenseMatrix implementation\n      var matrix = new DenseMatrix(data, datatype);\n      // internal structures\n      this._data = matrix._data;\n      this._size = matrix._size;\n      this._datatype = matrix._datatype;\n      this._min = null;\n      this._max = null;\n    }\n    else if (data && isArray(data.data) && isArray(data.size)) {\n      // initialize fields from JSON representation\n      this._data = data.data;\n      this._size = data.size;\n      this._datatype = data.datatype;\n      this._min = typeof data.min !== 'undefined' ? data.min : null;\n      this._max = typeof data.max !== 'undefined' ? data.max : null;\n    }\n    else if (data) {\n      // unsupported type\n      throw new TypeError('Unsupported type of data (' + util.types.type(data) + ')');\n    }\n    else {\n      // nothing provided\n      this._data = [];\n      this._size = [0];\n      this._datatype = datatype;\n      this._min = null;\n      this._max = null;\n    }\n  }\n\n  ImmutableDenseMatrix.prototype = new DenseMatrix();\n\n  /**\n   * Attach type information\n   */\n  ImmutableDenseMatrix.prototype.type = 'ImmutableDenseMatrix';\n  ImmutableDenseMatrix.prototype.isImmutableDenseMatrix = true;\n\n  /**\n   * Get a subset of the matrix, or replace a subset of the matrix.\n   *\n   * Usage:\n   *     var subset = matrix.subset(index)               // retrieve subset\n   *     var value = matrix.subset(index, replacement)   // replace subset\n   *\n   * @param {Index} index\n   * @param {Array | ImmutableDenseMatrix | *} [replacement]\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be filled with zeros.\n   */\n  ImmutableDenseMatrix.prototype.subset = function (index) {\n    switch (arguments.length) {\n      case 1:\n        // use base implementation\n        var m = DenseMatrix.prototype.subset.call(this, index);\n        // check result is a matrix\n        if (type.isMatrix(m)) {\n          // return immutable matrix\n          return new ImmutableDenseMatrix({\n            data: m._data,\n            size: m._size,\n            datatype: m._datatype\n          });\n        }\n        return m;\n        \n        // intentional fall through\n      case 2:\n      case 3:\n        throw new Error('Cannot invoke set subset on an Immutable Matrix instance');\n\n      default:\n        throw new SyntaxError('Wrong number of arguments');\n    }\n  };\n\n  /**\n   * Replace a single element in the matrix.\n   * @param {Number[]} index   Zero-based index\n   * @param {*} value\n   * @param {*} [defaultValue]        Default value, filled in on new entries when\n   *                                  the matrix is resized. If not provided,\n   *                                  new matrix elements will be left undefined.\n   * @return {ImmutableDenseMatrix} self\n   */\n  ImmutableDenseMatrix.prototype.set = function () {\n    throw new Error('Cannot invoke set on an Immutable Matrix instance');\n  };\n\n  /**\n   * Resize the matrix to the given size. Returns a copy of the matrix when\n   * `copy=true`, otherwise return the matrix itself (resize in place).\n   *\n   * @param {Number[]} size           The new size the matrix should have.\n   * @param {*} [defaultValue=0]      Default value, filled in on new entries.\n   *                                  If not provided, the matrix elements will\n   *                                  be filled with zeros.\n   * @param {boolean} [copy]          Return a resized copy of the matrix\n   *\n   * @return {Matrix}                 The resized matrix\n   */\n  ImmutableDenseMatrix.prototype.resize = function () {\n    throw new Error('Cannot invoke resize on an Immutable Matrix instance');\n  };\n\n  /**\n   * Disallows reshaping in favor of immutability.\n   *\n   * @throws {Error} Operation not allowed\n   */\n  ImmutableDenseMatrix.prototype.reshape = function () {\n    throw new Error('Cannot invoke reshape on an Immutable Matrix instance');\n  };\n\n  /**\n   * Create a clone of the matrix\n   * @return {ImmutableDenseMatrix} clone\n   */\n  ImmutableDenseMatrix.prototype.clone = function () {\n    var m = new ImmutableDenseMatrix({\n      data: object.clone(this._data),\n      size: object.clone(this._size),\n      datatype: this._datatype\n    });\n    return m;\n  };\n\n  /**\n   * Get a JSON representation of the matrix\n   * @returns {Object}\n   */\n  ImmutableDenseMatrix.prototype.toJSON = function () {\n    return {\n      mathjs: 'ImmutableDenseMatrix',\n      data: this._data,\n      size: this._size,\n      datatype: this._datatype\n    };\n  };\n\n  /**\n   * Generate a matrix from a JSON object\n   * @param {Object} json  An object structured like\n   *                       `{\"mathjs\": \"ImmutableDenseMatrix\", data: [], size: []}`,\n   *                       where mathjs is optional\n   * @returns {ImmutableDenseMatrix}\n   */\n  ImmutableDenseMatrix.fromJSON = function (json) {\n    return new ImmutableDenseMatrix(json);\n  };\n\n  /**\n   * Swap rows i and j in Matrix.\n   *\n   * @param {Number} i       Matrix row index 1\n   * @param {Number} j       Matrix row index 2\n   *\n   * @return {Matrix}        The matrix reference\n   */\n  ImmutableDenseMatrix.prototype.swapRows = function () {\n    throw new Error('Cannot invoke swapRows on an Immutable Matrix instance');\n  };\n\n  /**\n   * Calculate the minimum value in the set\n   * @return {Number | undefined} min\n   */\n  ImmutableDenseMatrix.prototype.min = function () {\n    // check min has been calculated before\n    if (this._min === null) {\n      // minimum\n      var m = null;\n      // compute min\n      this.forEach(function (v) {\n        if (m === null || smaller(v, m))\n          m = v;\n      });\n      this._min = m !== null ? m : undefined;\n    }\n    return this._min;\n  };\n\n  /**\n   * Calculate the maximum value in the set\n   * @return {Number | undefined} max\n   */\n  ImmutableDenseMatrix.prototype.max = function () {\n    // check max has been calculated before\n    if (this._max === null) {\n      // maximum\n      var m = null;\n      // compute max\n      this.forEach(function (v) {\n        if (m === null || smaller(m, v))\n          m = v;\n      });\n      this._max = m !== null ? m : undefined;\n    }\n    return this._max;\n  };\n\n  // exports\n  return ImmutableDenseMatrix;\n}\n\nexports.name = 'ImmutableDenseMatrix';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/ImmutableDenseMatrix.js","'use strict';\n\nvar clone = require('../../utils/object').clone;\nvar isInteger = require('../../utils/number').isInteger;\n\nfunction factory (type) {\n  \n  /**\n   * Create an index. An Index can store ranges and sets for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Usage:\n   *     var index = new Index(range1, range2, matrix1, array1, ...);\n   *\n   * Where each parameter can be any of:\n   *     A number\n   *     A string (containing a name of an object property)\n   *     An instance of Range\n   *     An Array with the Set values\n   *     A Matrix with the Set values\n   *\n   * The parameters start, end, and step must be integer numbers.\n   *\n   * @class Index\n   * @Constructor Index\n   * @param {...*} ranges\n   */\n  function Index(ranges) {\n    if (!(this instanceof Index)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    this._dimensions = [];\n    this._isScalar = true;\n\n    for (var i = 0, ii = arguments.length; i < ii; i++) {\n      var arg = arguments[i];\n\n      if (type.isRange(arg)) {\n        this._dimensions.push(arg);\n        this._isScalar = false;\n      }\n      else if (Array.isArray(arg) || type.isMatrix(arg)) {\n        // create matrix\n        var m = _createImmutableMatrix(arg.valueOf());\n        this._dimensions.push(m);\n        // size\n        var size = m.size();\n        // scalar\n        if (size.length !== 1 || size[0] !== 1) {\n          this._isScalar = false;\n        }\n      }\n      else if (typeof arg === 'number') {\n        this._dimensions.push(_createImmutableMatrix([arg]));\n      }\n      else if (typeof arg === 'string') {\n        // object property (arguments.count should be 1)\n        this._dimensions.push(arg);\n      }\n      // TODO: implement support for wildcard '*'\n      else {\n        throw new TypeError('Dimension must be an Array, Matrix, number, string, or Range');\n      }\n    }\n  }\n\n  /**\n   * Attach type information\n   */\n  Index.prototype.type = 'Index';\n  Index.prototype.isIndex = true;\n\n  function _createImmutableMatrix(arg) {\n    // loop array elements\n    for (var i = 0, l = arg.length; i < l; i++) {\n      if (typeof arg[i] !== 'number' || !isInteger(arg[i])) {\n        throw new TypeError('Index parameters must be positive integer numbers');\n      }\n    }\n    // create matrix\n    return new type.ImmutableDenseMatrix(arg);\n  }\n\n  /**\n   * Create a clone of the index\n   * @memberof Index\n   * @return {Index} clone\n   */\n  Index.prototype.clone = function () {\n    var index = new Index();\n    index._dimensions = clone(this._dimensions);\n    index._isScalar = this._isScalar;\n    return index;\n  };\n\n  /**\n   * Create an index from an array with ranges/numbers\n   * @memberof Index\n   * @param {Array.<Array | number>} ranges\n   * @return {Index} index\n   * @private\n   */\n  Index.create = function (ranges) {\n    var index = new Index();\n    Index.apply(index, ranges);\n    return index;\n  };\n\n  /**\n   * Retrieve the size of the index, the number of elements for each dimension.\n   * @memberof Index\n   * @returns {number[]} size\n   */\n  Index.prototype.size = function () {\n    var size = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var d = this._dimensions[i];\n      size[i] = (typeof d === 'string') ? 1 : d.size()[0];\n    }\n\n    return size;\n  };\n\n  /**\n   * Get the maximum value for each of the indexes ranges.\n   * @memberof Index\n   * @returns {number[]} max\n   */\n  Index.prototype.max = function () {\n    var values = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var range = this._dimensions[i];\n      values[i] = (typeof range === 'string') ? range : range.max();\n    }\n\n    return values;\n  };\n\n  /**\n   * Get the minimum value for each of the indexes ranges.\n   * @memberof Index\n   * @returns {number[]} min\n   */\n  Index.prototype.min = function () {\n    var values = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var range = this._dimensions[i];\n      values[i] = (typeof range === 'string') ? range : range.min();\n    }\n\n    return values;\n  };\n\n  /**\n   * Loop over each of the ranges of the index\n   * @memberof Index\n   * @param {Function} callback   Called for each range with a Range as first\n   *                              argument, the dimension as second, and the\n   *                              index object as third.\n   */\n  Index.prototype.forEach = function (callback) {\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      callback(this._dimensions[i], i, this);\n    }\n  };\n\n  /**\n   * Retrieve the dimension for the given index\n   * @memberof Index\n   * @param {Number} dim                  Number of the dimension\n   * @returns {Range | null} range\n   */\n  Index.prototype.dimension = function (dim) {\n    return this._dimensions[dim] || null;\n  };\n\n  /**\n   * Test whether this index contains an object property\n   * @returns {boolean} Returns true if the index is an object property\n   */\n  Index.prototype.isObjectProperty = function () {\n    return this._dimensions.length === 1 && typeof this._dimensions[0] === 'string';\n  };\n\n  /**\n   * Returns the object property name when the Index holds a single object property,\n   * else returns null\n   * @returns {string | null}\n   */\n  Index.prototype.getObjectProperty = function () {\n    return this.isObjectProperty() ? this._dimensions[0] : null;\n  };\n\n  /**\n   * Test whether this index contains only a single value.\n   *\n   * This is the case when the index is created with only scalar values as ranges,\n   * not for ranges resolving into a single value.\n   * @memberof Index\n   * @return {boolean} isScalar\n   */\n  Index.prototype.isScalar = function () {\n    return this._isScalar;\n  };\n\n  /**\n   * Expand the Index into an array.\n   * For example new Index([0,3], [2,7]) returns [[0,1,2], [2,3,4,5,6]]\n   * @memberof Index\n   * @returns {Array} array\n   */\n  Index.prototype.toArray = function () {\n    var array = [];\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var dimension = this._dimensions[i];\n      array.push((typeof dimension === 'string') ? dimension : dimension.toArray());\n    }\n    return array;\n  };\n\n  /**\n   * Get the primitive value of the Index, a two dimensional array.\n   * Equivalent to Index.toArray().\n   * @memberof Index\n   * @returns {Array} array\n   */\n  Index.prototype.valueOf = Index.prototype.toArray;\n\n  /**\n   * Get the string representation of the index, for example '[2:6]' or '[0:2:10, 4:7, [1,2,3]]'\n   * @memberof Index\n   * @returns {String} str\n   */\n  Index.prototype.toString = function () {\n    var strings = [];\n\n    for (var i = 0, ii = this._dimensions.length; i < ii; i++) {\n      var dimension = this._dimensions[i];\n      if (typeof dimension === 'string') {\n        strings.push(JSON.stringify(dimension));\n      }\n      else {\n        strings.push(dimension.toString());\n      }\n    }\n\n    return '[' + strings.join(', ') + ']';\n  };\n\n  /**\n   * Get a JSON representation of the Index\n   * @memberof Index\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Index\", \"ranges\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n   */\n  Index.prototype.toJSON = function () {\n    return {\n      mathjs: 'Index',\n      dimensions: this._dimensions\n    };\n  };\n\n  /**\n   * Instantiate an Index from a JSON object\n   * @memberof Index\n   * @param {Object} json A JSON object structured as:\n   *                     `{\"mathjs\": \"Index\", \"dimensions\": [{\"mathjs\": \"Range\", start: 0, end: 10, step:1}, ...]}`\n   * @return {Index}\n   */\n  Index.fromJSON = function (json) {\n    return Index.create(json.dimensions);\n  };\n\n  return Index;\n}\n\nexports.name = 'Index';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/MatrixIndex.js","'use strict';\n\nvar number = require('../../utils/number');\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create a range. A range has a start, step, and end, and contains functions\n   * to iterate over the range.\n   *\n   * A range can be constructed as:\n   *     var range = new Range(start, end);\n   *     var range = new Range(start, end, step);\n   *\n   * To get the result of the range:\n   *     range.forEach(function (x) {\n   *         console.log(x);\n   *     });\n   *     range.map(function (x) {\n   *         return math.sin(x);\n   *     });\n   *     range.toArray();\n   *\n   * Example usage:\n   *     var c = new Range(2, 6);         // 2:1:5\n   *     c.toArray();                     // [2, 3, 4, 5]\n   *     var d = new Range(2, -3, -1);    // 2:-1:-2\n   *     d.toArray();                     // [2, 1, 0, -1, -2]\n   *\n   * @class Range\n   * @constructor Range\n   * @param {number} start  included lower bound\n   * @param {number} end    excluded upper bound\n   * @param {number} [step] step size, default value is 1\n   */\n  function Range(start, end, step) {\n    if (!(this instanceof Range)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    if (start != null) {\n      if (type.isBigNumber(start))\n        start = start.toNumber();\n      else if (typeof start !== 'number')\n        throw new TypeError('Parameter start must be a number');\n    }\n    if (end != null) {\n      if (type.isBigNumber(end))\n        end = end.toNumber();\n      else if (typeof end !== 'number')\n        throw new TypeError('Parameter end must be a number');\n    }\n    if (step != null) {\n      if (type.isBigNumber(step))\n        step = step.toNumber();\n      else if (typeof step !== 'number')\n        throw new TypeError('Parameter step must be a number');\n    }\n\n    this.start = (start != null) ? parseFloat(start) : 0;\n    this.end   = (end != null)   ? parseFloat(end)   : 0;\n    this.step  = (step != null)  ? parseFloat(step)  : 1;\n  }\n\n  /**\n   * Attach type information\n   */\n  Range.prototype.type = 'Range';\n  Range.prototype.isRange = true;\n\n  /**\n   * Parse a string into a range,\n   * The string contains the start, optional step, and end, separated by a colon.\n   * If the string does not contain a valid range, null is returned.\n   * For example str='0:2:11'.\n   * @memberof Range\n   * @param {string} str\n   * @return {Range | null} range\n   */\n  Range.parse = function (str) {\n    if (typeof str !== 'string') {\n      return null;\n    }\n\n    var args = str.split(':');\n    var nums = args.map(function (arg) {\n      return parseFloat(arg);\n    });\n\n    var invalid = nums.some(function (num) {\n      return isNaN(num);\n    });\n    if (invalid) {\n      return null;\n    }\n\n    switch (nums.length) {\n      case 2:\n        return new Range(nums[0], nums[1]);\n      case 3:\n        return new Range(nums[0], nums[2], nums[1]);\n      default:\n        return null;\n    }\n  };\n\n  /**\n   * Create a clone of the range\n   * @return {Range} clone\n   */\n  Range.prototype.clone = function () {\n    return new Range(this.start, this.end, this.step);\n  };\n\n  /**\n   * Retrieve the size of the range.\n   * Returns an array containing one number, the number of elements in the range.\n   * @memberof Range\n   * @returns {number[]} size\n   */\n  Range.prototype.size = function () {\n    var len = 0,\n        start = this.start,\n        step = this.step,\n        end = this.end,\n        diff = end - start;\n\n    if (number.sign(step) == number.sign(diff)) {\n      len = Math.ceil((diff) / step);\n    }\n    else if (diff == 0) {\n      len = 0;\n    }\n\n    if (isNaN(len)) {\n      len = 0;\n    }\n    return [len];\n  };\n\n  /**\n   * Calculate the minimum value in the range\n   * @memberof Range\n   * @return {number | undefined} min\n   */\n  Range.prototype.min = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start;\n      }\n      else {\n        // negative step\n        return this.start + (size - 1) * this.step;\n      }\n    }\n    else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Calculate the maximum value in the range\n   * @memberof Range\n   * @return {number | undefined} max\n   */\n  Range.prototype.max = function () {\n    var size = this.size()[0];\n\n    if (size > 0) {\n      if (this.step > 0) {\n        // positive step\n        return this.start + (size - 1) * this.step;\n      }\n      else {\n        // negative step\n        return this.start;\n      }\n    }\n    else {\n      return undefined;\n    }\n  };\n\n\n  /**\n   * Execute a callback function for each value in the range.\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Range being traversed.\n   */\n  Range.prototype.forEach = function (callback) {\n    var x = this.start;\n    var step = this.step;\n    var end = this.end;\n    var i = 0;\n\n    if (step > 0) {\n      while (x < end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    }\n    else if (step < 0) {\n      while (x > end) {\n        callback(x, [i], this);\n        x += step;\n        i++;\n      }\n    }\n  };\n\n  /**\n   * Execute a callback function for each value in the Range, and return the\n   * results as an array\n   * @memberof Range\n   * @param {function} callback   The callback method is invoked with three\n   *                              parameters: the value of the element, the index\n   *                              of the element, and the Matrix being traversed.\n   * @returns {Array} array\n   */\n  Range.prototype.map = function (callback) {\n    var array = [];\n    this.forEach(function (value, index, obj) {\n      array[index[0]] = callback(value, index, obj);\n    });\n    return array;\n  };\n\n  /**\n   * Create an Array with a copy of the Ranges data\n   * @memberof Range\n   * @returns {Array} array\n   */\n  Range.prototype.toArray = function () {\n    var array = [];\n    this.forEach(function (value, index) {\n      array[index[0]] = value;\n    });\n    return array;\n  };\n\n  /**\n   * Get the primitive value of the Range, a one dimensional array\n   * @memberof Range\n   * @returns {Array} array\n   */\n  Range.prototype.valueOf = function () {\n    // TODO: implement a caching mechanism for range.valueOf()\n    return this.toArray();\n  };\n\n  /**\n   * Get a string representation of the range, with optional formatting options.\n   * Output is formatted as 'start:step:end', for example '2:6' or '0:0.2:11'\n   * @memberof Range\n   * @param {Object | number | function} [options]  Formatting options. See\n   *                                                lib/utils/number:format for a\n   *                                                description of the available\n   *                                                options.\n   * @returns {string} str\n   */\n  Range.prototype.format = function (options) {\n    var str = number.format(this.start, options);\n\n    if (this.step != 1) {\n      str += ':' + number.format(this.step, options);\n    }\n    str += ':' + number.format(this.end, options);\n    return str;\n  };\n\n  /**\n   * Get a string representation of the range.\n   * @memberof Range\n   * @returns {string}\n   */\n  Range.prototype.toString = function () {\n    return this.format();\n  };\n\n  /**\n   * Get a JSON representation of the range\n   * @memberof Range\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   */\n  Range.prototype.toJSON = function () {\n    return {\n      mathjs: 'Range',\n      start: this.start,\n      end: this.end,\n      step: this.step\n    };\n  };\n\n  /**\n   * Instantiate a Range from a JSON object\n   * @memberof Range\n   * @param {Object} json A JSON object structured as:\n   *                      `{\"mathjs\": \"Range\", \"start\": 2, \"end\": 4, \"step\": 1}`\n   * @return {Range}\n   */\n  Range.fromJSON = function (json) {\n    return new Range(json.start, json.end, json.step);\n  };\n\n  return Range;\n}\n\nexports.name = 'Range';\nexports.path = 'type';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/Range.js","'use strict';\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create an index. An Index can store ranges having start, step, and end\n   * for multiple dimensions.\n   * Matrix.get, Matrix.set, and math.subset accept an Index as input.\n   *\n   * Syntax:\n   *\n   *     math.index(range1, range2, ...)\n   *\n   * Where each range can be any of:\n   *\n   * - A number\n   * - A string for getting/setting an object property\n   * - An instance of `Range`\n   * - A one-dimensional Array or a Matrix with numbers\n   *\n   * Indexes must be zero-based, integer numbers.\n   *\n   * Examples:\n   *\n   *    var math = math.js\n   *\n   *    var b = [1, 2, 3, 4, 5];\n   *    math.subset(b, math.index([1, 2, 3]));     // returns [2, 3, 4]\n   *\n   *    var a = math.matrix([[1, 2], [3, 4]]);\n   *    a.subset(math.index(0, 1));             // returns 2\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, matrix, number, string, unit\n   *\n   * @param {...*} ranges   Zero or more ranges or numbers.\n   * @return {Index}        Returns the created index\n   */\n  return typed('index', {\n    '...number | string | BigNumber | Range | Array | Matrix': function (args) {\n      var ranges = args.map(function (arg) {\n        if (type.isBigNumber(arg)) {\n          return arg.toNumber(); // convert BigNumber to Number\n        }\n        else if (Array.isArray(arg) || type.isMatrix(arg)) {\n          return arg.map(function (elem) {\n            // convert BigNumber to Number\n            return type.isBigNumber(elem) ? elem.toNumber() : elem;\n          });\n        }\n        else {\n          return arg;\n        }\n      });\n\n      var res = new type.Index();\n      type.Index.apply(res, ranges);\n      return res;\n    }\n  });\n}\n\nexports.name = 'index';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/function/index.js","'use strict';\n\nfunction factory (type, config, load, typed) {\n\n  var SparseMatrix = type.SparseMatrix;\n\n  /**\n   * Create a Sparse Matrix. The function creates a new `math.type.Matrix` object from\n   * an `Array`. A Matrix has utility functions to manipulate the data in the\n   * matrix, like getting the size and getting or setting values in the matrix.\n   *\n   * Syntax:\n   *\n   *    math.sparse()               // creates an empty sparse matrix.\n   *    math.sparse(data)           // creates a sparse matrix with initial data.\n   *    math.sparse(data, 'number') // creates a sparse matrix with initial data, number datatype.\n   *\n   * Examples:\n   *\n   *    var m = math.sparse([[1, 2], [3, 4]]);\n   *    m.size();                        // Array [2, 2]\n   *    m.resize([3, 2], 5);\n   *    m.valueOf();                     // Array [[1, 2], [3, 4], [5, 5]]\n   *    m.get([1, 0])                    // number 3\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, number, string, unit, matrix\n   *\n   * @param {Array | Matrix} [data]    A two dimensional array\n   *\n   * @return {Matrix} The created matrix\n   */\n  var sparse = typed('sparse', {\n    '': function () {\n      return new SparseMatrix([]);\n    },\n    \n    'string': function (datatype) {\n      return new SparseMatrix([], datatype);\n    },\n\n    'Array | Matrix': function (data) {\n      return new SparseMatrix(data);\n    },\n    \n    'Array | Matrix, string': function (data, datatype) {\n      return new SparseMatrix(data, datatype);\n    }\n  });\n\n  sparse.toTex = {\n    0: '\\\\begin{bsparse}\\\\end{bsparse}',\n    1: '\\\\left(${args[0]}\\\\right)'\n  };\n\n  return sparse;\n}\n\nexports.name = 'sparse';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/function/sparse.js","'use strict';\n\nvar isInteger = require('../../utils/number').isInteger;\nvar resize = require('../../utils/array').resize;\n\nfunction factory (type, config, load, typed) {\n  var matrix = load(require('../../type/matrix/function/matrix'));\n\n  /**\n   * Create a matrix filled with zeros. The created matrix can have one or\n   * multiple dimensions.\n   *\n   * Syntax:\n   *\n   *    math.zeros(m)\n   *    math.zeros(m, format)\n   *    math.zeros(m, n)\n   *    math.zeros(m, n, format)\n   *    math.zeros([m, n])\n   *    math.zeros([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.zeros(3);                  // returns [0, 0, 0]\n   *    math.zeros(3, 2);               // returns [[0, 0], [0, 0], [0, 0]]\n   *    math.zeros(3, 'dense');         // returns [0, 0, 0]\n   *\n   *    var A = [[1, 2, 3], [4, 5, 6]];\n   *    math.zeros(math.size(A));       // returns [[0, 0, 0], [0, 0, 0]]\n   *\n   * See also:\n   *\n   *    ones, eye, size, range\n   *\n   * @param {...number | Array} size    The size of each dimension of the matrix\n   * @param {string} [format]           The Matrix storage format\n   *\n   * @return {Array | Matrix}           A matrix filled with zeros\n   */\n  var zeros = typed('zeros', {\n    '': function () {\n      return (config.matrix === 'Array')\n          ? _zeros([])\n          : _zeros([], 'default');\n    },\n\n    // math.zeros(m, n, p, ..., format)\n    // TODO: more accurate signature '...number | BigNumber, string' as soon as typed-function supports this\n    '...number | BigNumber | string': function (size) {\n      var last = size[size.length - 1];\n      if (typeof last === 'string') {\n        var format = size.pop();\n        return _zeros(size, format);\n      }\n      else if (config.matrix === 'Array') {\n        return _zeros(size);\n      }\n      else {\n        return _zeros(size, 'default');\n      }\n    },\n\n    'Array': _zeros,\n\n    'Matrix': function (size) {\n      var format = size.storage();\n      return _zeros(size.valueOf(), format);\n    },\n\n    'Array | Matrix, string': function (size, format) {\n      return _zeros (size.valueOf(), format);\n    }\n  });\n\n  zeros.toTex = undefined; // use default template\n\n  return zeros;\n\n  /**\n   * Create an Array or Matrix with zeros\n   * @param {Array} size\n   * @param {string} [format='default']\n   * @return {Array | Matrix}\n   * @private\n   */\n  function _zeros(size, format) {\n    var hasBigNumbers = _normalize(size);\n    var defaultValue = hasBigNumbers ? new type.BigNumber(0) : 0;\n    _validate(size);\n\n    if (format) {\n      // return a matrix\n      var m = matrix(format);\n      if (size.length > 0) {\n        return m.resize(size, defaultValue);\n      }\n      return m;\n    }\n    else {\n      // return an Array\n      var arr = [];\n      if (size.length > 0) {\n        return resize(arr, size, defaultValue);\n      }\n      return arr;\n    }\n  }\n\n  // replace BigNumbers with numbers, returns true if size contained BigNumbers\n  function _normalize(size) {\n    var hasBigNumbers = false;\n    size.forEach(function (value, index, arr) {\n      if (type.isBigNumber(value)) {\n        hasBigNumbers = true;\n        arr[index] = value.toNumber();\n      }\n    });\n    return hasBigNumbers;\n  }\n\n  // validate arguments\n  function _validate (size) {\n    size.forEach(function (value) {\n      if (typeof value !== 'number' || !isInteger(value) || value < 0) {\n        throw new Error('Parameters in function zeros must be positive integers');\n      }\n    });\n  }\n}\n\n// TODO: zeros contains almost the same code as ones. Reuse this?\n\nexports.name = 'zeros';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/matrix/zeros.js","var utils = require('../Utils_clust');\nvar get_filter_default_state = require('./get_filter_default_state');\nvar filter = require('underscore/cjs/filter');\nvar each = require('underscore/cjs/each');\n\nmodule.exports = function get_subset_views(params, views, requested_view) {\n  var inst_value;\n  var found_filter;\n\n  var request_filters = Object.keys(requested_view || {});\n\n  // find a view that matches all of the requested view/filter-attributes\n  request_filters.forEach(function (inst_filter) {\n    inst_value = requested_view[inst_filter];\n\n    // if the value is a number, then convert it to an integer\n    if (/[^a-z_]/i.test(inst_value)) {\n      inst_value = parseInt(inst_value, 10);\n    }\n\n    // only run filtering if any of the views has the filter\n    found_filter = false;\n    each(views, function (tmp_view) {\n      if (utils.has(tmp_view, inst_filter)) {\n        found_filter = true;\n      }\n    });\n\n    if (found_filter) {\n      views = filter(views, function (d) {\n        return d[inst_filter] == inst_value;\n      });\n    }\n  });\n\n  // remove duplicate complete default states\n  var export_views = [];\n  var found_default = false;\n  var check_default;\n  var inst_default_state;\n\n  // check if each view is a default state: all filters are at default\n  // there can only be one of these\n  each(views, function (inst_view) {\n    check_default = true;\n\n    // check each filter in a view to see if it is in the default state\n    Object.keys(params.viz.possible_filters || {}).forEach(function (\n      inst_filter\n    ) {\n      inst_default_state = get_filter_default_state(\n        params.viz.filter_data,\n        inst_filter\n      );\n\n      if (inst_view[inst_filter] != inst_default_state) {\n        check_default = false;\n      }\n    });\n\n    // found defaule view, only append if you have not already found a default\n    if (check_default) {\n      if (found_default === false) {\n        found_default = true;\n        export_views.push(inst_view);\n      }\n    } else {\n      export_views.push(inst_view);\n    }\n  });\n\n  return export_views;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/filters/get_subset_views.js","var _cb = require('./_cb.js');\nvar each = require('./each.js');\n\n// Return all the elements that pass a truth test.\nfunction filter(obj, predicate, context) {\n  var results = [];\n  predicate = _cb(predicate, context);\n  each(obj, function(value, index, list) {\n    if (predicate(value, index, list)) results.push(value);\n  });\n  return results;\n}\n\nmodule.exports = filter;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/filter.js","var underscore = require('./underscore.js');\nvar _baseIteratee = require('./_baseIteratee.js');\nvar iteratee = require('./iteratee.js');\n\n// The function we call internally to generate a callback. It invokes\n// `_.iteratee` if overridden, otherwise `baseIteratee`.\nfunction cb(value, context, argCount) {\n  if (underscore.iteratee !== iteratee) return underscore.iteratee(value, context);\n  return _baseIteratee(value, context, argCount);\n}\n\nmodule.exports = cb;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_cb.js","var _setup = require('./_setup.js');\n\n// If Underscore is called as a function, it returns a wrapped object that can\n// be used OO-style. This wrapper holds altered versions of all functions added\n// through `_.mixin`. Wrapped objects may be chained.\nfunction _(obj) {\n  if (obj instanceof _) return obj;\n  if (!(this instanceof _)) return new _(obj);\n  this._wrapped = obj;\n}\n\n_.VERSION = _setup.VERSION;\n\n// Extracts the result from a wrapped and chained object.\n_.prototype.value = function() {\n  return this._wrapped;\n};\n\n// Provide unwrapping proxies for some methods used in engine operations\n// such as arithmetic and JSON stringification.\n_.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n_.prototype.toString = function() {\n  return String(this._wrapped);\n};\n\nmodule.exports = _;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/underscore.js","var identity = require('./identity.js');\nvar isFunction = require('./isFunction.js');\nvar isObject = require('./isObject.js');\nvar isArray = require('./isArray.js');\nvar matcher = require('./matcher.js');\nvar property = require('./property.js');\nvar _optimizeCb = require('./_optimizeCb.js');\n\n// An internal function to generate callbacks that can be applied to each\n// element in a collection, returning the desired result — either `_.identity`,\n// an arbitrary callback, a property matcher, or a property accessor.\nfunction baseIteratee(value, context, argCount) {\n  if (value == null) return identity;\n  if (isFunction(value)) return _optimizeCb(value, context, argCount);\n  if (isObject(value) && !isArray(value)) return matcher(value);\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_baseIteratee.js","// Keep the identity function around for default iteratees.\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/identity.js","var _setup = require('./_setup.js');\nvar _tagTester = require('./_tagTester.js');\n\n// Is a given value an array?\n// Delegates to ECMA5's native `Array.isArray`.\nvar isArray = _setup.nativeIsArray || _tagTester('Array');\n\nmodule.exports = isArray;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/isArray.js","var extendOwn = require('./extendOwn.js');\nvar isMatch = require('./isMatch.js');\n\n// Returns a predicate for checking whether an object has a given set of\n// `key:value` pairs.\nfunction matcher(attrs) {\n  attrs = extendOwn({}, attrs);\n  return function(obj) {\n    return isMatch(obj, attrs);\n  };\n}\n\nmodule.exports = matcher;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/matcher.js","var _createAssigner = require('./_createAssigner.js');\nvar keys = require('./keys.js');\n\n// Assigns a given object with all the own properties in the passed-in\n// object(s).\n// (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\nvar extendOwn = _createAssigner(keys);\n\nmodule.exports = extendOwn;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/extendOwn.js","// An internal function for creating assigner functions.\nfunction createAssigner(keysFunc, defaults) {\n  return function(obj) {\n    var length = arguments.length;\n    if (defaults) obj = Object(obj);\n    if (length < 2 || obj == null) return obj;\n    for (var index = 1; index < length; index++) {\n      var source = arguments[index],\n          keys = keysFunc(source),\n          l = keys.length;\n      for (var i = 0; i < l; i++) {\n        var key = keys[i];\n        if (!defaults || obj[key] === void 0) obj[key] = source[key];\n      }\n    }\n    return obj;\n  };\n}\n\nmodule.exports = createAssigner;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_createAssigner.js","var keys = require('./keys.js');\n\n// Returns whether an object has a given set of `key:value` pairs.\nfunction isMatch(object, attrs) {\n  var _keys = keys(attrs), length = _keys.length;\n  if (object == null) return !length;\n  var obj = Object(object);\n  for (var i = 0; i < length; i++) {\n    var key = _keys[i];\n    if (attrs[key] !== obj[key] || !(key in obj)) return false;\n  }\n  return true;\n}\n\nmodule.exports = isMatch;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/isMatch.js","var _deepGet = require('./_deepGet.js');\nvar _toPath = require('./_toPath.js');\n\n// Creates a function that, when passed an object, will traverse that object’s\n// properties down the given `path`, specified as an array of keys or indices.\nfunction property(path) {\n  path = _toPath(path);\n  return function(obj) {\n    return _deepGet(obj, path);\n  };\n}\n\nmodule.exports = property;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/property.js","// Internal function to obtain a nested property in `obj` along `path`.\nfunction deepGet(obj, path) {\n  var length = path.length;\n  for (var i = 0; i < length; i++) {\n    if (obj == null) return void 0;\n    obj = obj[path[i]];\n  }\n  return length ? obj : void 0;\n}\n\nmodule.exports = deepGet;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_deepGet.js","var underscore = require('./underscore.js');\nrequire('./toPath.js');\n\n// Internal wrapper for `_.toPath` to enable minification.\n// Similar to `cb` for `_.iteratee`.\nfunction toPath(path) {\n  return underscore.toPath(path);\n}\n\nmodule.exports = toPath;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_toPath.js","var underscore = require('./underscore.js');\nvar isArray = require('./isArray.js');\n\n// Normalize a (deep) property `path` to array.\n// Like `_.iteratee`, this function can be customized.\nfunction toPath(path) {\n  return isArray(path) ? path : [path];\n}\nunderscore.toPath = toPath;\n\nmodule.exports = toPath;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/toPath.js","var underscore = require('./underscore.js');\nvar _baseIteratee = require('./_baseIteratee.js');\n\n// External wrapper for our callback generator. Users may customize\n// `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n// This abstraction hides the internal-only `argCount` argument.\nfunction iteratee(value, context) {\n  return _baseIteratee(value, context, Infinity);\n}\nunderscore.iteratee = iteratee;\n\nmodule.exports = iteratee;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/iteratee.js","module.exports = function make_view_request(params, requested_view) {\n  // this will add all necessary information to a view request\n  // it will grab necessary view information from the sliders\n\n  // only one component will be changed at a time\n  var changed_component = Object.keys(requested_view || {})[0];\n\n  // add additional filter information from othe possible filters\n  Object.keys(params.viz.possible_filters || {}).forEach(function (\n    inst_filter\n  ) {\n    if (inst_filter != changed_component) {\n      if (!d3.select(params.root + ' .slider_' + inst_filter).empty()) {\n        var inst_state = d3\n          .select(params.root + ' .slider_' + inst_filter)\n          .attr('current_state');\n\n        requested_view[inst_filter] = inst_state;\n      }\n    }\n  });\n\n  return requested_view;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/filters/make_requested_view.js","var ini_label_params = require('./ini_label_params');\nvar set_viz_wrapper_size = require('../set_viz_wrapper_size');\nvar get_svg_dim = require('./get_svg_dim');\nvar calc_label_params = require('./calc_label_params');\nvar calc_clust_width = require('./calc_clust_width');\nvar calc_clust_height = require('./calc_clust_height');\nvar calc_val_max = require('./calc_val_max');\nvar calc_matrix_params = require('./calc_matrix_params');\nvar set_zoom_params = require('./set_zoom_params');\nvar calc_default_fs = require('./calc_default_fs');\nvar utils = require('../Utils_clust');\nvar get_available_filters = require('./get_available_filters');\nvar make_cat_params = require('./make_cat_params');\n\nmodule.exports = function calc_viz_params(\n  params,\n  predefined_cat_colors = true\n) {\n  params.labels = ini_label_params(params);\n  params.viz = ini_viz_params(params, predefined_cat_colors);\n\n  set_viz_wrapper_size(params);\n\n  params = get_svg_dim(params);\n  params.viz = calc_label_params(params.viz);\n  params.viz = calc_clust_width(params.viz);\n  params.viz = calc_clust_height(params.viz);\n\n  if (params.sim_mat) {\n    if (params.viz.clust.dim.width <= params.viz.clust.dim.height) {\n      params.viz.clust.dim.height = params.viz.clust.dim.width;\n    } else {\n      params.viz.clust.dim.width = params.viz.clust.dim.height;\n    }\n  }\n\n  params = calc_val_max(params);\n  params = calc_matrix_params(params);\n  params = set_zoom_params(params);\n  params = calc_default_fs(params);\n\n  function ini_viz_params(params, predefined_cat_colors = true) {\n    var viz = {};\n\n    viz.root = params.root;\n\n    viz.root_tips = params.root.replace('#', '.') + '_' + 'd3-tip';\n\n    viz.viz_wrapper = params.root + ' .viz_wrapper';\n    viz.do_zoom = params.do_zoom;\n    viz.background_color = params.background_color;\n    viz.super_border_color = params.super_border_color;\n    viz.outer_margins = params.outer_margins;\n    viz.is_expand = params.ini_expand;\n    viz.grey_border_width = params.grey_border_width;\n    viz.show_dendrogram = params.show_dendrogram;\n    viz.tile_click_hlight = params.tile_click_hlight;\n    viz.inst_order = params.inst_order;\n    viz.expand_button = params.expand_button;\n    viz.sim_mat = params.sim_mat;\n    viz.dendro_filter = params.dendro_filter;\n    viz.cat_filter = params.cat_filter;\n    viz.cat_value_colors = params.cat_value_colors;\n\n    viz.cat_bar_width = 180;\n    viz.cat_bar_height = 20;\n\n    viz.tree_menu_width = 400;\n    viz.tree_menu_height = 237;\n    viz.tree_menu_x_offset = 20;\n\n    viz.filter_menu_width = 500;\n    viz.filter_menu_height = 237;\n    viz.filter_menu_x_offset = 20;\n\n    viz.update_button_width = 100;\n\n    viz.viz_svg = viz.viz_wrapper + ' .viz_svg';\n\n    viz.zoom_element = viz.viz_wrapper + ' .viz_svg';\n\n    viz.uni_duration = 1000;\n    // extra space below the clustergram (was 5)\n    // will increase this to accomidate dendro slider\n    viz.bottom_space = 10;\n    viz.run_trans = false;\n    viz.duration = 1000;\n\n    viz.resize = params.resize;\n    if (utils.has(params, 'size')) {\n      viz.fixed_size = params.size;\n    } else {\n      viz.fixed_size = false;\n    }\n\n    // width is 1 over this value\n    viz.border_fraction = 65;\n    viz.uni_margin = 5;\n\n    viz.super_labels = {};\n    viz.super_labels.margin = {};\n    viz.super_labels.dim = {};\n    viz.super_labels.margin.left = viz.grey_border_width;\n    viz.super_labels.margin.top = viz.grey_border_width;\n    viz.super_labels.dim.width = 0;\n    if (params.labels.super_labels) {\n      viz.super_labels.dim.width = 15 * params.labels.super_label_scale;\n    }\n\n    viz.triangle_opacity = 0.6;\n\n    viz.norm_labels = {};\n    viz.norm_labels.width = {};\n\n    viz.dendro_room = {};\n    if (viz.show_dendrogram) {\n      viz.dendro_room.symbol_width = 10;\n    } else {\n      viz.dendro_room.symbol_width = 0;\n    }\n\n    viz.cat_colors = params.cat_colors;\n\n    // console.log('ini_viz_params -> make_cat_params')\n    // console.log('predefined_cat_colors outside function ' + String(predefined_cat_colors))\n\n    viz = make_cat_params(params, viz, predefined_cat_colors);\n\n    // // always make group level dict\n    // params.group_level = {};\n\n    if (!utils.has(params, 'group_level')) {\n      if (viz.show_dendrogram) {\n        params.group_level = {};\n      }\n\n      // preventing error when un-clustered, above statement\n      // preserves dendro state while updating\n      if (!utils.has(params, 'group_level')) {\n        params.group_level = {};\n      }\n\n      params.group_level.row = 5;\n      params.group_level.col = 5;\n    }\n\n    viz.dendro_opacity = 0.35;\n\n    viz.spillover_col_slant = viz.norm_labels.width.col;\n\n    var filters = get_available_filters(params.network_data.views);\n\n    viz.possible_filters = filters.possible_filters;\n    viz.filter_data = filters.filter_data;\n\n    viz.viz_nodes = {};\n\n    // nodes that should be visible based on visible area\n    viz.viz_nodes.row = params.network_data.row_nodes_names;\n    viz.viz_nodes.col = params.network_data.col_nodes_names;\n\n    // nodes that are currently visible\n    viz.viz_nodes.curr_row = params.network_data.row_nodes_names;\n    viz.viz_nodes.curr_col = params.network_data.col_nodes_names;\n\n    // correct panning in x direction\n    viz.x_offset = 0;\n\n    return viz;\n  }\n\n  return params;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_viz_params.js","var max = require('underscore/cjs/max');\n\nmodule.exports = function ini_label_params(params) {\n  var labels = {};\n  labels.super_label_scale = params.super_label_scale;\n  labels.super_labels = params.super_labels;\n  labels.super_label_fs = 13.8;\n\n  if (labels.super_labels) {\n    labels.super = {};\n    labels.super.row = params.super.row;\n    labels.super.col = params.super.col;\n  }\n\n  labels.show_label_tooltips = params.show_label_tooltips;\n\n  labels.row_max_char = max(params.network_data.row_nodes, function (inst) {\n    return inst.name.length;\n  }).name.length;\n\n  labels.col_max_char = max(params.network_data.col_nodes, function (inst) {\n    return inst.name.length;\n  }).name.length;\n\n  labels.max_allow_fs = params.max_allow_fs;\n\n  return labels;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/ini_label_params.js","var _isArrayLike = require('./_isArrayLike.js');\nvar values = require('./values.js');\nvar _cb = require('./_cb.js');\nvar each = require('./each.js');\n\n// Return the maximum element (or element-based computation).\nfunction max(obj, iteratee, context) {\n  var result = -Infinity, lastComputed = -Infinity,\n      value, computed;\n  if (iteratee == null || (typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null)) {\n    obj = _isArrayLike(obj) ? obj : values(obj);\n    for (var i = 0, length = obj.length; i < length; i++) {\n      value = obj[i];\n      if (value != null && value > result) {\n        result = value;\n      }\n    }\n  } else {\n    iteratee = _cb(iteratee, context);\n    each(obj, function(v, index, list) {\n      computed = iteratee(v, index, list);\n      if (computed > lastComputed || (computed === -Infinity && result === -Infinity)) {\n        result = v;\n        lastComputed = computed;\n      }\n    });\n  }\n  return result;\n}\n\nmodule.exports = max;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/max.js","var keys = require('./keys.js');\n\n// Retrieve the values of an object's properties.\nfunction values(obj) {\n  var _keys = keys(obj);\n  var length = _keys.length;\n  var values = Array(length);\n  for (var i = 0; i < length; i++) {\n    values[i] = obj[_keys[i]];\n  }\n  return values;\n}\n\nmodule.exports = values;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/values.js","var calc_viz_dimensions = require('./params/calc_viz_dimensions');\n\nmodule.exports = function set_viz_wrapper_size(params) {\n  // Create wrapper around SVG visualization\n  if (d3.select(params.root + ' .viz_wrapper').empty()) {\n    // customization\n    // d3.select(params.root)\n    //   .append('div')\n    //   .classed('sidebar_wrapper', true);\n\n    d3.select(params.root).append('div').classed('viz_wrapper', true);\n  }\n\n  // customization\n  var cont_dim = calc_viz_dimensions(\n    Object.assign(params, { sidebar_width: 0 })\n  );\n\n  // customization\n  // d3.select(params.root + \" .sidebar_wrapper\")\n  //   .style(\"float\", \"left\")\n  //   .style(\"width\", params.sidebar_width + \"px\")\n  //   .style(\"height\", cont_dim.height + \"px\")\n  //   .style(\"overflow\", \"hidden\");\n\n  d3.select(params.viz.viz_wrapper)\n    .style('float', 'left')\n    .style('width', cont_dim.width + 'px')\n    .style('height', cont_dim.height + 'px');\n};\n\n\n\n// WEBPACK FOOTER //\n// src/set_viz_wrapper_size.js","module.exports = function calc_viz_dimensions(params) {\n  var cont_dim = {};\n  var extra_space = params.buffer_width;\n\n  // var screen_width = window.innerWidth;\n  // var screen_height = window.innerHeight;\n\n  // // resize container, then resize visualization within container\n  // d3.select(params.root)\n  //   .style('width', screen_width+'px')\n  //   .style('height', screen_height+'px');\n\n  var container_width = d3.select(params.root).style('width').replace('px', '');\n  var container_height = d3\n    .select(params.root)\n    .style('height')\n    .replace('px', '');\n\n  // get outer_margins\n  var outer_margins;\n  if (params.viz.is_expand === false) {\n    outer_margins = params.viz.outer_margins;\n    cont_dim.width = container_width - params.sidebar_width - extra_space;\n  } else {\n    outer_margins = params.viz.outer_margins;\n    cont_dim.width = container_width - extra_space;\n  }\n\n  cont_dim.top = outer_margins.top;\n  cont_dim.left = outer_margins.left;\n\n  if (params.viz.resize) {\n    cont_dim.height = container_height;\n  } else {\n    if (params.viz.is_expand) {\n      cont_dim.width = params.viz.fixed_size.width;\n    } else {\n      cont_dim.width = params.viz.fixed_size.width - params.sidebar_width;\n    }\n\n    cont_dim.height = params.viz.fixed_size.height;\n  }\n\n  return cont_dim;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_viz_dimensions.js","module.exports = function get_svg_dim(params) {\n  params.viz.svg_dim = {};\n  params.viz.svg_dim.width = Number(\n    d3.select(params.viz.viz_wrapper).style('width').replace('px', '')\n  );\n\n  params.viz.svg_dim.height = Number(\n    d3.select(params.viz.viz_wrapper).style('height').replace('px', '')\n  );\n\n  return params;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/get_svg_dim.js","module.exports = function calc_label_params(viz) {\n  viz.norm_labels.margin = {};\n\n  viz.norm_labels.margin.left =\n    viz.super_labels.margin.left + viz.super_labels.dim.width;\n\n  viz.norm_labels.margin.top =\n    viz.super_labels.margin.top + viz.super_labels.dim.width;\n\n  viz.label_background = {};\n\n  viz.label_background.row =\n    viz.norm_labels.width.row + viz.cat_room.row + viz.uni_margin;\n\n  viz.label_background.col =\n    viz.norm_labels.width.col + viz.cat_room.col + viz.uni_margin;\n\n  return viz;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_label_params.js","var range = require('underscore/cjs/range');\n\nmodule.exports = function calc_clust_width(viz) {\n  viz.clust = {};\n  viz.clust.margin = {};\n\n  // margin on left/top of the clustergram/matrix\n  // 1) norm_label margin and width\n  // 2) cat_room and uni_margin\n  viz.clust.margin.left =\n    viz.norm_labels.margin.left +\n    viz.norm_labels.width.row +\n    viz.cat_room.row +\n    viz.uni_margin;\n\n  viz.clust.margin.top =\n    viz.norm_labels.margin.top +\n    viz.norm_labels.width.col +\n    viz.cat_room.col +\n    viz.uni_margin;\n\n  // the clustergram/matrix width is the svg width minus:\n  // the margin of the clustergram on the left\n  // the room for the spillover on the right\n  // ** the dendro will fit in the spillover room on the right\n  var ini_clust_width =\n    viz.svg_dim.width - viz.clust.margin.left - viz.spillover_col_slant;\n\n  // make tmp scale to calc height of triangle col labels\n  var tmp_x_scale = d3.scale\n    .ordinal()\n    .rangeBands([0, ini_clust_width])\n    .domain(range(viz.num_col_nodes));\n\n  var triangle_height = tmp_x_scale.rangeBand() / 2;\n\n  // prevent the visualization from being unnecessarily wide\n  if (triangle_height > viz.norm_labels.width.col) {\n    var reduce_width = viz.norm_labels.width.col / triangle_height;\n    ini_clust_width = ini_clust_width * reduce_width;\n  }\n\n  viz.clust.dim = {};\n  viz.clust.dim.width = ini_clust_width;\n\n  return viz;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_clust_width.js","// Generate an integer Array containing an arithmetic progression. A port of\n// the native Python `range()` function. See\n// [the Python documentation](https://docs.python.org/library/functions.html#range).\nfunction range(start, stop, step) {\n  if (stop == null) {\n    stop = start || 0;\n    start = 0;\n  }\n  if (!step) {\n    step = stop < start ? -1 : 1;\n  }\n\n  var length = Math.max(Math.ceil((stop - start) / step), 0);\n  var range = Array(length);\n\n  for (var idx = 0; idx < length; idx++, start += step) {\n    range[idx] = start;\n  }\n\n  return range;\n}\n\nmodule.exports = range;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/range.js","module.exports = function calc_clust_height(viz) {\n  // the clustergram/matrix height is the svg width minus:\n  // the margin of the clustergram on the top\n  // the dendrogram\n  // the bottom_space\n  var ini_clust_height =\n    viz.svg_dim.height -\n    viz.clust.margin.top -\n    viz.dendro_room.col -\n    viz.bottom_space;\n\n  viz.clust.dim.height = ini_clust_height;\n\n  return viz;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_clust_height.js","var max = require('underscore/cjs/max');\n\nmodule.exports = function calc_val_max(params) {\n  var val_max = Math.abs(\n    max(params.network_data.col_nodes, function (d) {\n      return Math.abs(d.value);\n    }).value\n  );\n\n  params.labels.bar_scale_col = d3.scale\n    .linear()\n    .domain([0, val_max])\n    .range([0, 0.75 * params.viz.norm_labels.width.col]);\n\n  val_max = Math.abs(\n    max(params.network_data.row_nodes, function (d) {\n      return Math.abs(d.value);\n    }).value\n  );\n\n  params.labels.bar_scale_row = d3.scale\n    .linear()\n    .domain([0, val_max])\n    .range([0, params.viz.norm_labels.width.row]);\n\n  return params;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_val_max.js","var ini_matrix_params = require('./ini_matrix_params');\nvar calc_downsampled_levels = require('../matrix/calc_downsampled_levels');\n\nmodule.exports = function calc_matrix_params(params) {\n  params.matrix = ini_matrix_params(params);\n\n  // X and Y scales: set domains and ranges\n  //////////////////////////////////////////////\n  params.viz.x_scale = d3.scale\n    .ordinal()\n    .rangeBands([0, params.viz.clust.dim.width]);\n\n  params.viz.y_scale = d3.scale\n    .ordinal()\n    .rangeBands([0, params.viz.clust.dim.height]);\n\n  var inst_order;\n\n  ['row', 'col'].forEach(function (inst_rc) {\n    inst_order = params.viz.inst_order[inst_rc];\n\n    if (inst_order === 'custom') {\n      inst_order = 'clust';\n    }\n\n    if (inst_rc === 'row') {\n      params.viz.x_scale.domain(\n        params.matrix.orders[inst_order + '_' + inst_rc]\n      );\n    } else {\n      params.viz.y_scale.domain(\n        params.matrix.orders[inst_order + '_' + inst_rc]\n      );\n    }\n  });\n\n  // border width\n  params.viz.border_width = {};\n  params.viz.border_width.x =\n    params.viz.x_scale.rangeBand() / params.viz.border_fraction;\n  params.viz.border_width.y =\n    params.viz.y_scale.rangeBand() / params.viz.border_fraction;\n\n  // rect width needs matrix and zoom parameters\n  params.viz.rect_width =\n    params.viz.x_scale.rangeBand() - params.viz.border_width.x;\n\n  // moved calculateion to calc_matrix_params\n  params.viz.rect_height =\n    params.viz.y_scale.rangeBand() - params.viz.border_width.y;\n\n  calc_downsampled_levels(params);\n\n  return params;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_matrix_params.js","var utils = require('../Utils_clust');\nvar initialize_matrix = require('../initialize_matrix');\nvar max = require('underscore/cjs/max');\n\nmodule.exports = function ini_matrix_params(params) {\n  var matrix = {};\n\n  var network_data = params.network_data;\n\n  matrix.tile_colors = params.tile_colors;\n  matrix.bar_colors = params.bar_colors;\n  matrix.outline_colors = params.outline_colors;\n  matrix.hlight_color = params.highlight_color;\n  matrix.tile_title = params.tile_title;\n  matrix.show_tile_tooltips = params.show_tile_tooltips;\n  matrix.make_tile_tooltip = params.make_tile_tooltip;\n\n  matrix.distance_metric = 'cosine';\n  matrix.linkage_type = 'average';\n  matrix.filter_state = 'no-filter';\n  matrix.normalization_state = 'no-normalization';\n\n  // initialized clicked tile and rows\n  matrix.click_hlight_x = -666;\n  matrix.click_hlight_y = -666;\n  matrix.click_hlight_row = -666;\n  matrix.click_hlight_col = -666;\n\n  // definition of a large matrix (num links) determines if transition is run\n  matrix.def_large_matrix = 2e4;\n  matrix.opacity_function = params.opacity_scale;\n\n  matrix.orders = {};\n\n  ['row', 'col'].forEach(function (inst_rc) {\n    // row ordering is based on col info and vice versa\n    var other_rc;\n    if (inst_rc === 'row') {\n      other_rc = 'col';\n    } else {\n      other_rc = 'row';\n    }\n\n    // the nodes are defined using other_rc\n    var inst_nodes = network_data[other_rc + '_nodes'] || [];\n    var num_nodes = inst_nodes.length;\n\n    var nodes_names = utils.pluck(inst_nodes, 'name');\n    var tmp = nodes_names.sort();\n\n    var alpha_index = tmp.map(function (d) {\n      return network_data[other_rc + '_nodes_names'].indexOf(d);\n    });\n\n    matrix.orders['alpha_' + inst_rc] = alpha_index;\n\n    var possible_orders = ['clust', 'rank'];\n\n    if (utils.has(inst_nodes[0], 'rankvar')) {\n      possible_orders.push('rankvar');\n    }\n\n    if (params.viz.all_cats[other_rc].length > 0) {\n      params.viz.all_cats[other_rc].forEach(function (inst_cat) {\n        // the index of the category has replaced - with _\n        inst_cat = inst_cat.replace('-', '_');\n        possible_orders.push(inst_cat + '_index');\n      });\n    }\n\n    possible_orders.forEach(function (inst_order) {\n      var tmp_order_index = d3.range(num_nodes).sort(function (a, b) {\n        return inst_nodes[b][inst_order] - inst_nodes[a][inst_order];\n      });\n\n      matrix.orders[inst_order + '_' + inst_rc] = tmp_order_index;\n    });\n  });\n\n  if (utils.has(network_data, 'all_links')) {\n    matrix.max_link = max(network_data.all_links, function (d) {\n      return Math.abs(d.value);\n    }).value;\n  } else {\n    matrix.max_link = max(network_data.links, function (d) {\n      return Math.abs(d.value);\n    }).value;\n  }\n\n  matrix.abs_max_val = Math.abs(matrix.max_link) * params.clamp_opacity;\n\n  if (params.input_domain === 0) {\n    if (matrix.opacity_function === 'linear') {\n      matrix.opacity_scale = d3.scale\n        .linear()\n        .domain([0, matrix.abs_max_val])\n        .clamp(true)\n        .range([0.0, 1.0]);\n    } else if (matrix.opacity_function === 'log') {\n      matrix.opacity_scale = d3.scale\n        .log()\n        .domain([0.001, matrix.abs_max_val])\n        .clamp(true)\n        .range([0.0, 1.0]);\n    }\n  } else {\n    if (matrix.opacity_function === 'linear') {\n      matrix.opacity_scale = d3.scale\n        .linear()\n        .domain([0, params.input_domain])\n        .clamp(true)\n        .range([0.0, 1.0]);\n    } else if (matrix.opacity_function === 'log') {\n      matrix.opacity_scale = d3.scale\n        .log()\n        .domain([0.001, params.input_domain])\n        .clamp(true)\n        .range([0.0, 1.0]);\n    }\n  }\n\n  var has_val_up = utils.has(network_data.links[0], 'value_up');\n  var has_val_dn = utils.has(network_data.links[0], 'value_dn');\n\n  if (has_val_up || has_val_dn) {\n    matrix.tile_type = 'updn';\n  } else {\n    matrix.tile_type = 'simple';\n  }\n\n  if (utils.has(network_data.links[0], 'highlight')) {\n    matrix.highlight = 1;\n  } else {\n    matrix.highlight = 0;\n  }\n\n  matrix.matrix = initialize_matrix(network_data);\n\n  matrix.wait_tooltip = 0;\n\n  return matrix;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/ini_matrix_params.js","var utils = require('./Utils_clust');\n\nmodule.exports = function (network_data) {\n  var matrix = [];\n  var ini_object;\n\n  var keep_orig;\n  if (utils.has(network_data.links[0], 'value_orig')) {\n    keep_orig = true;\n  } else {\n    keep_orig = false;\n  }\n\n  network_data.row_nodes.forEach(function (tmp, row_index) {\n    matrix[row_index] = {};\n    matrix[row_index].name = network_data.row_nodes[row_index].name;\n    matrix[row_index].row_index = row_index;\n\n    matrix[row_index].row_data = d3\n      .range(network_data.col_nodes.length)\n      .map(function (col_index) {\n        if (\n          utils.has(network_data.links[0], 'value_up') ||\n          utils.has(network_data.links[0], 'value_dn')\n        ) {\n          ini_object = {\n            pos_x: col_index,\n            pos_y: row_index,\n            value: 0,\n            value_up: 0,\n            value_dn: 0,\n            highlight: 0\n          };\n        } else {\n          ini_object = {\n            pos_x: col_index,\n            pos_y: row_index,\n            value: 0,\n            highlight: 0\n          };\n        }\n\n        if (keep_orig) {\n          ini_object.value_orig = 0;\n        }\n\n        return ini_object;\n      });\n  });\n\n  network_data.links.forEach(function (link) {\n    // transfer additional link information is necessary\n    matrix[link.source].row_data[link.target].value = link.value;\n    matrix[link.source].row_data[link.target].row_name = link.row_name;\n    matrix[link.source].row_data[link.target].col_name = link.col_name;\n\n    if (utils.has(link, 'value_up') || utils.has(link, 'value_dn')) {\n      matrix[link.source].row_data[link.target].value_up = link.value_up;\n      matrix[link.source].row_data[link.target].value_dn = link.value_dn;\n    }\n\n    if (keep_orig) {\n      matrix[link.source].row_data[link.target].value_orig = link.value_orig;\n    }\n\n    if (link.highlight) {\n      matrix[link.source].row_data[link.target].highlight = link.highlight;\n    }\n    if (link.info) {\n      matrix[link.source].row_data[link.target].info = link.info;\n    }\n  });\n\n  return matrix;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/initialize_matrix.js","var calc_downsampled_matrix = require('../matrix/calc_downsampled_matrix');\nvar $ = require('jquery');\n\nmodule.exports = function calc_downsampled_levels(params) {\n  // console.log('---- before ---------')\n  // console.log(params.matrix.matrix[0].row_data[0].value)\n\n  // height of downsampled rectangles\n  var ds_height = 3;\n\n  var min_rect_height = 2;\n\n  var total_zoom = ds_height / params.viz.rect_height;\n\n  // amount of zooming that is tolerated for the downsampled rows\n  var inst_zt = 2;\n  params.viz.ds_zt = inst_zt;\n\n  var num_levels = Math.floor(Math.log(total_zoom) / Math.log(inst_zt));\n\n  if (params.viz.rect_height < min_rect_height && num_levels > 0) {\n    // increase ds opacity, as more rows are compressed into a single downsampled\n    // row, increase the opacity of the downsampled row. Max increase will be 2x\n    // when 100 or more rows are compressed\n    var max_opacity_scale = 2;\n    params.viz.ds_opacity_scale = d3.scale\n      .linear()\n      .domain([1, 100])\n      .range([1, max_opacity_scale])\n      .clamp(true);\n\n    var ds;\n\n    params.viz.ds_num_levels = num_levels;\n\n    // array of downsampled parameters\n    params.viz.ds = [];\n\n    // array of downsampled matrices at varying levels\n    params.matrix.ds_matrix = [];\n\n    var inst_order = params.viz.inst_order.row;\n\n    // cloning\n    var mat = $.extend(true, {}, params.matrix.matrix);\n\n    // calculate parameters for different levels\n    for (var i = 0; i < num_levels; i++) {\n      // instantaneous ds_level (-1 means no downsampling)\n      params.viz.ds_level = 0;\n\n      ds = {};\n\n      ds.height = ds_height;\n      ds.num_levels = num_levels;\n\n      var inst_zoom_tolerance = Math.pow(inst_zt, i);\n\n      ds.zt = inst_zoom_tolerance;\n\n      // the number of downsampled rows is given by the height of the clustergram\n      // divided by the adjusted height of the downsampled rect.\n      // the adjusted height is the height divided by the zooming tolerance of\n      // the downsampled layer\n\n      // number of downsampled rows\n      ds.num_rows = Math.round(\n        params.viz.clust.dim.height / (ds.height / inst_zoom_tolerance)\n      );\n\n      // x_scale\n      /////////////////////////\n      ds.x_scale = d3.scale\n        .ordinal()\n        .rangeBands([0, params.viz.clust.dim.width]);\n\n      ds.x_scale.domain(params.matrix.orders[inst_order + '_row']);\n\n      // y_scale\n      /////////////////////////\n      ds.y_scale = d3.scale\n        .ordinal()\n        .rangeBands([0, params.viz.clust.dim.height]);\n      ds.y_scale.domain(d3.range(ds.num_rows + 1));\n\n      ds.rect_height = ds.y_scale.rangeBand() - params.viz.border_width.y;\n\n      params.viz.ds.push(ds);\n\n      var matrix = calc_downsampled_matrix(params, mat, i);\n      params.matrix.ds_matrix.push(matrix);\n    }\n\n    // reset row viz_nodes since downsampling\n    params.viz.viz_nodes.row = d3\n      .range(params.matrix.ds_matrix[0].length)\n      .map(String);\n  } else {\n    // set ds to null if no downsampling is done\n    params.viz.ds = null;\n    // instantaneous ds_level (-1 means no downsampling)\n    params.viz.ds_level = -1;\n    params.viz.ds_num_levels = 0;\n  }\n\n  // console.log('---- after ---------')\n  // console.log(params.matrix.matrix[0].row_data[0].value)\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/calc_downsampled_levels.js","var each = require('underscore/cjs/each');\nvar utils = require('../Utils_clust');\n\nmodule.exports = function calc_downsampled_matrix(params, mat, ds_level) {\n  var inst_num_rows = params.viz.ds[ds_level].num_rows;\n\n  var num_compressed_rows =\n    params.network_data.row_nodes.length / inst_num_rows;\n\n  // increase ds opacity, as more rows are compressed into a single downsampled\n  // row, increase the opacity of the downsampled row.\n  var opacity_factor = params.viz.ds_opacity_scale(num_compressed_rows);\n\n  var mod_val = params.viz.clust.dim.height / inst_num_rows;\n\n  var ds_mat = [];\n  var inst_obj;\n\n  var len_ds_array = inst_num_rows + 1;\n\n  var i;\n  var x;\n\n  // initialize array of objects\n  for (i = 0; i < len_ds_array; i++) {\n    inst_obj = {};\n    inst_obj.row_index = i;\n    inst_obj.name = String(i);\n    inst_obj.all_names = [];\n\n    ds_mat.push(inst_obj);\n  }\n\n  each(mat, function (inst_row) {\n    // row ordering information is contained in y_scale\n    var inst_y = params.viz.y_scale(inst_row.row_index);\n\n    var ds_index = Math.round(inst_y / mod_val);\n\n    var inst_row_data = inst_row.row_data;\n\n    // gather names\n    ds_mat[ds_index].all_names.push(inst_row.name);\n\n    // gather row_data\n    if (utils.has(ds_mat[ds_index], 'row_data')) {\n      for (x = 0; x < inst_row_data.length; x++) {\n        ds_mat[ds_index].row_data[x].value =\n          ds_mat[ds_index].row_data[x].value + inst_row_data[x].value;\n      }\n    } else {\n      var new_data = [];\n      for (x = 0; x < inst_row_data.length; x++) {\n        new_data[x] = inst_row_data[x];\n      }\n\n      ds_mat[ds_index].row_data = new_data;\n    }\n  });\n\n  // average the values\n  ds_mat.forEach(function (tmp_ds) {\n    var tmp_row_data = tmp_ds.row_data;\n\n    var num_names = tmp_ds.all_names.length;\n\n    each(tmp_row_data, function (tmp_obj) {\n      tmp_obj.value = (tmp_obj.value / num_names) * opacity_factor;\n    });\n  });\n\n  // all names were found\n  var all_names = [];\n\n  ds_mat.forEach(function (inst_row) {\n    all_names = all_names.concat(inst_row.all_names);\n  });\n\n  return ds_mat;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/calc_downsampled_matrix.js","module.exports = jquery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 110\n// module chunks = 0","var calc_zoom_switching = require('../zoom/calc_zoom_switching');\n\nmodule.exports = function set_zoom_params(params) {\n  params.viz.zoom_scale_font = {};\n  params.viz.zoom_scale_font.row = 1;\n  params.viz.zoom_scale_font.col = 1;\n\n  var max_zoom_limit = 0.75;\n  var half_col_height = params.viz.x_scale.rangeBand() / 2;\n  params.viz.square_zoom =\n    (params.viz.norm_labels.width.col / half_col_height) * max_zoom_limit;\n\n  params.viz = calc_zoom_switching(params.viz);\n\n  return params;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/set_zoom_params.js","module.exports = function calc_zoom_switching(viz) {\n  var width_by_col = viz.clust.dim.width / viz.num_col_nodes;\n  var height_by_row = viz.clust.dim.height / viz.num_row_nodes;\n\n  viz.zoom_ratio = {};\n  viz.zoom_ratio.x = width_by_col / height_by_row;\n  viz.zoom_ratio.y = 1;\n\n  if (viz.zoom_ratio.x < 1) {\n    viz.zoom_ratio.y = 1 / viz.zoom_ratio.x;\n    viz.zoom_ratio.x = 1;\n  }\n\n  return viz;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/calc_zoom_switching.js","module.exports = function calc_default_fs(params) {\n  params.labels.default_fs_row = params.viz.y_scale.rangeBand() * 1.01;\n  params.labels.default_fs_col = params.viz.x_scale.rangeBand() * 0.87;\n\n  if (params.labels.default_fs_row > params.labels.max_allow_fs) {\n    params.labels.default_fs_row = params.labels.max_allow_fs;\n  }\n\n  if (params.labels.default_fs_col > params.labels.max_allow_fs) {\n    params.labels.default_fs_col = params.labels.max_allow_fs;\n  }\n\n  return params;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_default_fs.js","var calc_cat_params = require('./calc_cat_params');\nvar utils = require('../Utils_clust');\nvar colors = require('../Colors');\nvar check_if_value_cats = require('./check_if_value_cats');\nvar each = require('underscore/cjs/each');\nvar countBy = require('underscore/cjs/countBy');\n\nmodule.exports = function make_cat_params(\n  params,\n  viz,\n  predefined_cat_colors = true\n) {\n  var super_string = ': ';\n  var tmp_super;\n  var inst_info;\n  var inst_color;\n\n  viz.show_categories = {};\n  viz.all_cats = {};\n  viz.cat_names = {};\n  viz.cat_info = {};\n\n  // this will hold the information for calculating the opacity of the value\n  // function\n  var ini_val_opacity = {};\n  ini_val_opacity.row = null;\n  ini_val_opacity.col = null;\n\n  viz.cat_colors = {};\n  viz.cat_colors.value_opacity = ini_val_opacity;\n\n  var num_colors = 0;\n  ['row', 'col'].forEach(function (inst_rc) {\n    viz.show_categories[inst_rc] = false;\n\n    viz.all_cats[inst_rc] = [];\n    var tmp_keys = Object.keys(\n      params.network_data[inst_rc + '_nodes'][0] || {}\n    );\n\n    tmp_keys = tmp_keys.sort();\n\n    tmp_keys.forEach(function (d) {\n      if (d.indexOf('cat-') >= 0) {\n        viz.show_categories[inst_rc] = true;\n        viz.all_cats[inst_rc].push(d);\n      }\n    });\n\n    viz.cat_info[inst_rc] = null;\n\n    if (viz.show_categories[inst_rc]) {\n      viz.cat_colors[inst_rc] = {};\n      viz.cat_info[inst_rc] = {};\n      viz.cat_names[inst_rc] = {};\n\n      each(viz.all_cats[inst_rc], function (cat_title) {\n        var inst_node = params.network_data[inst_rc + '_nodes'][0];\n\n        // look for title of category in category name\n        if (typeof inst_node[cat_title] === 'string') {\n          if (inst_node[cat_title].indexOf(super_string) > 0) {\n            tmp_super = inst_node[cat_title].split(super_string)[0];\n            viz.cat_names[inst_rc][cat_title] = tmp_super;\n          } else {\n            viz.cat_names[inst_rc][cat_title] = cat_title;\n          }\n        } else {\n          viz.cat_names[inst_rc][cat_title] = cat_title;\n        }\n\n        var cat_instances_titles =\n          utils.pluck(params.network_data[inst_rc + '_nodes'], cat_title) || [];\n        var cat_instances = [];\n\n        cat_instances_titles.forEach(function (inst_cat) {\n          var new_cat;\n          if (inst_cat.indexOf(': ') > 0) {\n            new_cat = inst_cat.split(': ')[1];\n          } else {\n            new_cat = inst_cat;\n          }\n\n          cat_instances.push(new_cat);\n        });\n\n        var cat_states = Array.from(new Set(cat_instances_titles)).sort();\n\n        // check whether all the categories are of value type\n        inst_info = check_if_value_cats(cat_states);\n\n        // add histogram to inst_info\n        if (inst_info.type === 'cat_strings') {\n          // remove titles from categories in hist\n          var cat_hist = countBy(cat_instances);\n          inst_info.cat_hist = cat_hist;\n        } else {\n          inst_info.cat_hist = null;\n        }\n\n        // pass info_info object\n        viz.cat_info[inst_rc][cat_title] = inst_info;\n\n        viz.cat_colors[inst_rc][cat_title] = {};\n\n        cat_states.forEach(function (cat_tmp, inst_index) {\n          inst_color = colors.get_random_color(inst_index + num_colors);\n\n          viz.cat_colors[inst_rc][cat_title][cat_tmp] = inst_color;\n\n          // hack to get 'Not' categories to not be dark colored\n          // also doing this for false\n          if (typeof cat_tmp === 'string') {\n            if (\n              cat_tmp.indexOf('Not ') >= 0 ||\n              cat_tmp.indexOf(': false') > 0\n            ) {\n              viz.cat_colors[inst_rc][cat_title][cat_tmp] = '#eee';\n            }\n          }\n\n          num_colors = num_colors + 1;\n        });\n      });\n    }\n\n    if (\n      utils.has(params.network_data, 'cat_colors') &&\n      predefined_cat_colors === true\n    ) {\n      viz.cat_colors[inst_rc] = params.network_data.cat_colors[inst_rc];\n    }\n\n    if (params.sim_mat) {\n      // sending row color info to columns since row color info can be updated\n      viz.cat_colors.col = viz.cat_colors.row;\n    }\n  });\n\n  viz.cat_colors = viz.cat_colors;\n\n  viz.cat_colors.opacity = 0.6;\n  viz.cat_colors.active_opacity = 0.9;\n\n  viz = calc_cat_params(params, viz);\n\n  return viz;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/make_cat_params.js","module.exports = function calc_cat_params(params, viz) {\n  var separtion_room;\n\n  // increase the width of the label container based on the label length\n  var label_scale = d3.scale\n    .linear()\n    .domain([5, 15])\n    .range([85, 120])\n    .clamp('true');\n\n  viz.cat_room = {};\n  viz.cat_room.symbol_width = 12;\n  viz.cat_room.separation = 3;\n\n  ['row', 'col'].forEach(function (inst_rc) {\n    viz.norm_labels.width[inst_rc] =\n      label_scale(params.labels[inst_rc + '_max_char']) *\n      params[inst_rc + '_label_scale'];\n\n    viz['num_' + inst_rc + '_nodes'] =\n      params.network_data[inst_rc + '_nodes'].length;\n\n    if (inst_rc === 'row') {\n      viz.dendro_room[inst_rc] = viz.dendro_room.symbol_width;\n    } else {\n      viz.dendro_room[inst_rc] =\n        viz.dendro_room.symbol_width + 3 * viz.uni_margin;\n    }\n\n    var num_cats = viz.all_cats[inst_rc].length;\n\n    if (viz.show_categories[inst_rc]) {\n      separtion_room = (num_cats - 1) * viz.cat_room.separation;\n\n      var adjusted_cats;\n      if (inst_rc === 'row') {\n        adjusted_cats = num_cats + 1;\n      } else {\n        adjusted_cats = num_cats;\n      }\n\n      viz.cat_room[inst_rc] =\n        adjusted_cats * viz.cat_room.symbol_width + separtion_room;\n    } else {\n      // no categories\n      if (inst_rc == 'row') {\n        viz.cat_room[inst_rc] = viz.cat_room.symbol_width;\n      } else {\n        viz.cat_room[inst_rc] = 0;\n      }\n    }\n  });\n\n  return viz;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/calc_cat_params.js","// colors from http://graphicdesign.stackexchange.com/revisions/3815/8\nvar all_colors;\n\nall_colors = [\n  '#393b79',\n  '#aec7e8',\n  '#ff7f0e',\n  '#ffbb78',\n  '#98df8a',\n  '#bcbd22',\n  '#404040',\n  '#ff9896',\n  '#c5b0d5',\n  '#8c564b',\n  '#1f77b4',\n  '#5254a3',\n  '#FFDB58',\n  '#c49c94',\n  '#e377c2',\n  '#7f7f7f',\n  '#2ca02c',\n  '#9467bd',\n  '#dbdb8d',\n  '#17becf',\n  '#637939',\n  '#6b6ecf',\n  '#9c9ede',\n  '#d62728',\n  '#8ca252',\n  '#8c6d31',\n  '#bd9e39',\n  '#e7cb94',\n  '#843c39',\n  '#ad494a',\n  '#d6616b',\n  '#7b4173',\n  '#a55194',\n  '#ce6dbd',\n  '#de9ed6'\n];\n\n// too light colors\n// \"#e7969c\",\n// \"#c7c7c7\",\n// \"#f7b6d2\",\n// \"#cedb9c\",\n// \"#9edae5\",\n\nfunction get_default_color() {\n  return '#EEE';\n}\n\nfunction get_random_color(i) {\n  return all_colors[i % get_num_colors()];\n}\n\nfunction get_num_colors() {\n  return all_colors.length;\n}\n\nmodule.exports = {\n  get_default_color: get_default_color,\n  get_random_color: get_random_color,\n  get_num_colors: get_num_colors\n};\n\n\n\n// WEBPACK FOOTER //\n// src/Colors.js","var max = require('underscore/cjs/max');\n\nmodule.exports = function check_if_value_cats(cat_states) {\n  var tmp_cat = cat_states[0];\n\n  var has_title = false;\n  var might_have_values = false;\n  var cat_types = 'cat_strings';\n  var max_abs_val = NaN;\n  var all_values = [];\n  var cat_scale = null;\n\n  var super_string = ': ';\n\n  if (typeof tmp_cat === 'string') {\n    if (tmp_cat.indexOf(super_string) > -1) {\n      has_title = true;\n      tmp_cat = tmp_cat.split(super_string)[1];\n    }\n  }\n\n  if (isNaN(tmp_cat) == false) {\n    might_have_values = true;\n  }\n\n  // check each value for number\n  if (might_have_values) {\n    // the default state is that all are now values, check each one\n    cat_types = 'cat_values';\n\n    cat_states.forEach(function (inst_cat) {\n      if (has_title) {\n        inst_cat = inst_cat.split(super_string)[1];\n      }\n\n      // checking whether inst_cat is 'not a number'\n      if (isNaN(inst_cat) === true) {\n        cat_types = 'cat_strings';\n      } else {\n        inst_cat = parseFloat(inst_cat);\n        all_values.push(inst_cat);\n      }\n    });\n  }\n\n  if (cat_types === 'cat_values') {\n    // get absolute value\n    var max_value = max(all_values, function (d) {\n      return Math.abs(d);\n    });\n\n    max_abs_val = Math.abs(max_value);\n\n    cat_scale = d3.scale.linear().domain([0, max_abs_val]).range([0, 1]);\n  }\n\n  var inst_info = {};\n  inst_info.type = cat_types;\n  inst_info.max_abs_val = max_abs_val;\n  inst_info.cat_scale = cat_scale;\n\n  return inst_info;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/params/check_if_value_cats.js","var _group = require('./_group.js');\nvar _has = require('./_has.js');\n\n// Counts instances of an object that group by a certain criterion. Pass\n// either a string attribute to count by, or a function that returns the\n// criterion.\nvar countBy = _group(function(result, value, key) {\n  if (_has(result, key)) result[key]++; else result[key] = 1;\n});\n\nmodule.exports = countBy;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/countBy.js","var _cb = require('./_cb.js');\nvar each = require('./each.js');\n\n// An internal function used for aggregate \"group by\" operations.\nfunction group(behavior, partition) {\n  return function(obj, iteratee, context) {\n    var result = partition ? [[], []] : {};\n    iteratee = _cb(iteratee, context);\n    each(obj, function(value, index) {\n      var key = iteratee(value, index, obj);\n      behavior(result, value, key);\n    });\n    return result;\n  };\n}\n\nmodule.exports = group;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_group.js","module.exports = function ini_zoom_info() {\n  var zoom_info = {};\n  zoom_info.zoom_x = 1;\n  zoom_info.zoom_y = 1;\n  zoom_info.trans_x = 0;\n  zoom_info.trans_y = 0;\n\n  return zoom_info;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/ini_zoom_info.js","var generate_matrix = require('./matrix');\nvar make_row_label_container = require('./labels/make_row_label_container');\nvar make_col_label_container = require('./labels/make_col_label_container');\nvar generate_super_labels = require('./labels/super_labels');\nvar spillover = require('./spillover/main_spillover');\nvar initialize_resizing = require('./initialize_resizing');\nvar ini_doubleclick = require('./zoom/ini_doubleclick');\nvar make_col_cat = require('./categories/make_col_cat');\nvar make_row_cat = require('./categories/make_row_cat');\nvar trim_text = require('./zoom/trim_text');\nvar make_row_dendro = require('./dendrogram/make_row_dendro');\nvar make_col_dendro = require('./dendrogram/make_col_dendro');\nvar build_dendro_sliders = require('./dendrogram/build_dendro_sliders');\n// var build_tree_icon = require('./menus/build_tree_icon');\n// var build_filter_icon = require('./menus/build_filter_icon');\nvar make_row_dendro_spillover = require('./spillover/make_row_dendro_spillover');\n\nmodule.exports = function make_viz(cgm) {\n  var params = cgm.params;\n\n  d3.select(params.viz.viz_wrapper + ' svg').remove();\n\n  var svg_group = d3\n    .select(params.viz.viz_wrapper)\n    .append('svg')\n    .attr('class', 'viz_svg')\n    .attr('id', 'svg_' + params.root.replace('#', ''))\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', params.viz.svg_dim.height)\n    .attr('is_zoom', 0)\n    .attr('stopped_zoom', 1);\n\n  svg_group\n    .append('rect')\n    .attr('class', 'super_background')\n    .style('width', params.viz.svg_dim.width)\n    .style('height', params.viz.svg_dim.height)\n    .style('fill', 'white');\n\n  generate_matrix(params, svg_group);\n\n  make_row_label_container(cgm);\n\n  make_row_dendro(cgm);\n  make_col_dendro(cgm);\n  make_row_dendro_spillover(cgm);\n\n  make_col_label_container(cgm);\n\n  // initial trim text\n  if (params.viz.ds_level === -1) {\n    ['row', 'col'].forEach(function (inst_rc) {\n      var inst_fs = Number(\n        d3\n          .select('.' + inst_rc + '_label_group')\n          .select('text')\n          .style('font-size')\n          .replace('px', '')\n      );\n\n      var min_trim_fs = 8;\n      if (inst_fs > min_trim_fs) {\n        d3.selectAll(params.root + ' .' + inst_rc + '_label_group').each(\n          function () {\n            trim_text(params, this, inst_rc);\n          }\n        );\n      }\n    });\n  }\n\n  // make category colorbars\n  make_row_cat(cgm);\n  if (params.viz.show_categories.col) {\n    make_col_cat(cgm);\n  }\n\n  spillover(cgm);\n\n  if (params.labels.super_labels) {\n    generate_super_labels(params);\n  }\n\n  // // disable recluster and filter icons\n  // //////////////////\n\n  // // sliders should go above super labels\n  // build_tree_icon(cgm);\n\n  // build_filter_icon(cgm);\n\n  // customization: hide if no dendrogram data\n  if (cgm.config.show_dendrogram) {\n    build_dendro_sliders(cgm);\n  }\n\n  function border_colors() {\n    var inst_color = params.viz.super_border_color;\n    if (params.viz.is_expand || params.show_viz_border == false) {\n      inst_color = 'white';\n    }\n    return inst_color;\n  }\n\n  // left border\n  d3.select(params.viz.viz_svg)\n    .append('rect')\n    .classed('left_border', true)\n    .classed('borders', true)\n    .attr('fill', border_colors)\n    .attr('width', params.viz.grey_border_width)\n    .attr('height', params.viz.svg_dim.height)\n    .attr('transform', 'translate(0,0)');\n\n  // right border\n  d3.select(params.viz.viz_svg)\n    .append('rect')\n    .classed('right_border', true)\n    .classed('borders', true)\n    .attr('fill', border_colors)\n    .attr('width', params.viz.grey_border_width)\n    .attr('height', params.viz.svg_dim.height)\n    .attr('transform', function () {\n      var inst_offset = params.viz.svg_dim.width - params.viz.grey_border_width;\n      return 'translate(' + inst_offset + ',0)';\n    });\n\n  // top border\n  d3.select(params.viz.viz_svg)\n    .append('rect')\n    .classed('top_border', true)\n    .classed('borders', true)\n    .attr('fill', border_colors)\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', params.viz.grey_border_width)\n    .attr('transform', function () {\n      var inst_offset = 0;\n      return 'translate(' + inst_offset + ',0)';\n    });\n\n  // bottom border\n  d3.select(params.viz.viz_svg)\n    .append('rect')\n    .classed('bottom_border', true)\n    .classed('borders', true)\n    .attr('fill', border_colors)\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', params.viz.grey_border_width)\n    .attr('transform', function () {\n      var inst_offset =\n        params.viz.svg_dim.height - params.viz.grey_border_width;\n      return 'translate(0,' + inst_offset + ')';\n    });\n\n  initialize_resizing(cgm);\n\n  ini_doubleclick(cgm);\n\n  if (params.viz.do_zoom) {\n    d3.select(params.viz.zoom_element).call(params.zoom_behavior);\n  }\n\n  d3.select(params.viz.zoom_element).on('dblclick.zoom', null);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/make_viz.js","var utils = require('../Utils_clust');\nvar draw_gridlines = require('../matrix/draw_gridlines');\nvar add_click_hlight = require('./add_click_hlight');\nvar make_matrix_rows = require('./make_matrix_rows');\n\nmodule.exports = function (params, svg_elem) {\n  var network_data = params.network_data;\n\n  var matrix = [];\n  var clust_group;\n\n  // append a group that will hold clust_group and position it once\n  clust_group = svg_elem\n    .append('g')\n    .attr('class', 'clust_container')\n    .attr(\n      'transform',\n      'translate(' +\n        params.viz.clust.margin.left +\n        ',' +\n        params.viz.clust.margin.top +\n        ')'\n    )\n    .append('g')\n    .attr('class', 'clust_group')\n    .classed('clust_group', true);\n\n  // clustergram background rect\n  clust_group\n    .append('rect')\n    .classed('background', true)\n    .classed('grey_background', true)\n    .style('fill', params.clust_group_background_color)\n    .attr('width', params.viz.clust.dim.width)\n    .attr('height', params.viz.clust.dim.height);\n\n  // pass in params and the rows (row_nodes) that need to be made\n  // in this case all row nodes\n  // make_matrix_rows(params, params.matrix.matrix, params.network_data.row_nodes_names);\n\n  // initialize at ds_level 0\n  if (params.viz.ds === null) {\n    // do not use downsampled matrix\n    make_matrix_rows(params, params.matrix.matrix, 'all', params.viz.ds_level);\n  } else {\n    // use downsampled matrix\n    make_matrix_rows(\n      params,\n      params.matrix.ds_matrix[0],\n      'all',\n      params.viz.ds_level\n    );\n  }\n\n  // add callback function to tile group - if one is supplied by the user\n  if (typeof params.click_tile === 'function') {\n    d3.selectAll(params.root + ' .tile').on('click', function (d) {\n      // export row/col name and value from tile\n      var tile_info = {};\n      tile_info.row = params.network_data.row_nodes[d.pos_y].name;\n      tile_info.col = params.network_data.col_nodes[d.pos_x].name;\n      tile_info.value = d.value;\n\n      if (utils.has(d, 'value_up')) {\n        tile_info.value_up = d.value_up;\n      }\n      if (utils.has(d, 'value_dn')) {\n        tile_info.value_dn = d.value_dn;\n      }\n      if (utils.has(d, 'info')) {\n        tile_info.info = d.info;\n      }\n      // run the user supplied callback function\n      params.click_tile(tile_info);\n      add_click_hlight(params, this);\n    });\n  } else {\n    // highlight clicked tile\n    if (params.tile_click_hlight) {\n      d3.selectAll(params.root + ' .tile').on('click', function () {\n        add_click_hlight(params, this);\n      });\n    }\n  }\n\n  // draw grid lines after drawing tiles\n  var delays = {};\n  var duration = 0;\n  delays.enter = 0;\n  draw_gridlines(params, delays, duration);\n\n  // Matrix API\n  return {\n    get_clust_group: function () {\n      return clust_group;\n    },\n    get_matrix: function () {\n      return matrix;\n    },\n    get_nodes: function (type) {\n      if (type === 'row') {\n        return network_data.row_nodes;\n      }\n      return network_data.col_nodes;\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/index.js","// var grid_lines_viz = require('./grid_lines_viz');\n// var toggle_grid_lines = require('./toggle_grid_lines');\n\n/* eslint-disable */\nmodule.exports = function draw_gridlines(params, delays, duration) {\n  // var row_nodes = params.network_data.row_nodes;\n  // var col_nodes = params.network_data.col_nodes;\n  // // Fade in new gridlines\n  // ///////////////////////////\n  // // append horizontal line groups\n  // var horz_lines = d3.select(params.root+' .clust_group')\n  //   .selectAll('.horz_lines')\n  //   .data(row_nodes, function(d){return d.name;})\n  //   .enter()\n  //   .append('g')\n  //   .attr('class','horz_lines');\n  // // append vertical line groups\n  // var vert_lines = d3.select(params.root+' .clust_group')\n  //   .selectAll('.vert_lines')\n  //   .data(col_nodes)\n  //   .enter()\n  //   .append('g')\n  //   .attr('class', 'vert_lines');\n  // grid_lines_viz(params, duration);\n  // horz_lines\n  //   .select('line')\n  //   .attr('opacity',0)\n  //   .attr('stroke','white')\n  //   .attr('opacity', 1);\n  // vert_lines\n  //   .select('line')\n  //   .style('stroke', 'white')\n  //   .attr('opacity',0)\n  //   .transition().delay(delays.enter).duration(2*duration)\n  //   .attr('opacity', 1);\n  // toggle_grid_lines(params);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/draw_gridlines.js","module.exports = function (params, clicked_rect) {\n  // get x position of rectangle\n  d3.select(clicked_rect).each(function (d) {\n    var pos_x = d.pos_x;\n    var pos_y = d.pos_y;\n\n    d3.selectAll(params.root + ' .click_hlight').remove();\n\n    if (\n      pos_x != params.matrix.click_hlight_x ||\n      pos_y != params.matrix.click_hlight_y\n    ) {\n      // save pos_x to params.viz.click_hlight_x\n      params.matrix.click_hlight_x = pos_x;\n      params.matrix.click_hlight_y = pos_y;\n\n      // draw the highlighting rectangle as four rectangles\n      // so that the width and height can be controlled\n      // separately\n\n      var rel_width_hlight = 6;\n      var opacity_hlight = 0.85;\n\n      var hlight_width = rel_width_hlight * params.viz.border_width.x;\n      var hlight_height = rel_width_hlight * params.viz.border_width.y;\n\n      // top highlight\n      d3.select(clicked_rect.parentNode)\n        .append('rect')\n        .classed('click_hlight', true)\n        .classed('top_hlight', true)\n        .attr('width', params.viz.x_scale.rangeBand())\n        .attr('height', hlight_height)\n        .attr('fill', params.matrix.hlight_color)\n        .attr('transform', function () {\n          return 'translate(' + params.viz.x_scale(pos_x) + ',0)';\n        })\n        .attr('opacity', opacity_hlight);\n\n      // left highlight\n      d3.select(clicked_rect.parentNode)\n        .append('rect')\n        .classed('click_hlight', true)\n        .classed('left_hlight', true)\n        .attr('width', hlight_width)\n        .attr('height', params.viz.y_scale.rangeBand() - hlight_height * 0.99)\n        .attr('fill', params.matrix.hlight_color)\n        .attr('transform', function () {\n          return (\n            'translate(' +\n            params.viz.x_scale(pos_x) +\n            ',' +\n            hlight_height * 0.99 +\n            ')'\n          );\n        })\n        .attr('opacity', opacity_hlight);\n\n      // right highlight\n      d3.select(clicked_rect.parentNode)\n        .append('rect')\n        .classed('click_hlight', true)\n        .classed('right_hlight', true)\n        .attr('width', hlight_width)\n        .attr('height', params.viz.y_scale.rangeBand() - hlight_height * 0.99)\n        .attr('fill', params.matrix.hlight_color)\n        .attr('transform', function () {\n          var tmp_translate =\n            params.viz.x_scale(pos_x) +\n            params.viz.x_scale.rangeBand() -\n            hlight_width;\n          return (\n            'translate(' + tmp_translate + ',' + hlight_height * 0.99 + ')'\n          );\n        })\n        .attr('opacity', opacity_hlight);\n\n      // bottom highlight\n      d3.select(clicked_rect.parentNode)\n        .append('rect')\n        .classed('click_hlight', true)\n        .classed('bottom_hlight', true)\n        .attr('width', function () {\n          return params.viz.x_scale.rangeBand() - 1.98 * hlight_width;\n        })\n        .attr('height', hlight_height)\n        .attr('fill', params.matrix.hlight_color)\n        .attr('transform', function () {\n          var tmp_translate_x = params.viz.x_scale(pos_x) + hlight_width * 0.99;\n          var tmp_translate_y = params.viz.y_scale.rangeBand() - hlight_height;\n          return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n        })\n        .attr('opacity', opacity_hlight);\n    } else {\n      params.matrix.click_hlight_x = -666;\n      params.matrix.click_hlight_y = -666;\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/add_click_hlight.js","var make_simple_rows = require('./make_simple_rows');\nvar d3_tip_custom = require('../tooltip/d3_tip_custom');\nvar each = require('underscore/cjs/each');\nvar contains = require('underscore/cjs/contains');\n\n// current matrix can change with downsampling\nmodule.exports = function make_matrix_rows(\n  params,\n  current_matrix,\n  row_names = 'all',\n  ds_level = -1\n) {\n  // defaults\n  var y_scale = params.viz.y_scale;\n  var make_tip = true;\n  var row_class = 'row';\n\n  if (ds_level >= 0) {\n    y_scale = params.viz.ds[ds_level].y_scale;\n\n    // do not show tip when rows are downsampled\n    make_tip = false;\n    row_class = 'ds' + String(ds_level) + '_row';\n  }\n\n  if (make_tip) {\n    // do not remove tile_tip here\n    /////////////////////////////////\n\n    // make rows in the matrix - add key names to rows in matrix\n    /////////////////////////////////////////////////////////////\n    // d3-tooltip - for tiles\n    var tip = d3_tip_custom()\n      .attr('class', function () {\n        var root_tip_selector = params.viz.root_tips.replace('.', '');\n        var class_string =\n          root_tip_selector + ' d3-tip ' + root_tip_selector + '_tile_tip';\n        return class_string;\n      })\n      .style('display', 'none')\n      .direction('nw')\n      .offset([0, 0])\n      .html(function (d) {\n        var inst_value = String(d.value.toFixed(3));\n        var tooltip_string;\n\n        if (params.keep_orig) {\n          var orig_value = String(d.value_orig.toFixed(3));\n          tooltip_string =\n            '<p>' +\n            d.row_name +\n            ' and ' +\n            d.col_name +\n            '</p>' +\n            '<p> normalized value: ' +\n            inst_value +\n            '</p>' +\n            '<div> original value: ' +\n            orig_value +\n            '</div>';\n        } else {\n          tooltip_string =\n            '<p>' +\n            d.row_name +\n            ' and ' +\n            d.col_name +\n            '</p>' +\n            '<div> value: ' +\n            inst_value +\n            '</div>';\n        }\n\n        return tooltip_string;\n      });\n  } else {\n    tip = null;\n  }\n\n  // gather a subset of row data from the matrix or use all rows\n  var matrix_subset = [];\n  if (row_names === 'all') {\n    matrix_subset = current_matrix;\n  } else {\n    each(current_matrix, function (inst_row) {\n      if (contains(row_names, inst_row.name)) {\n        matrix_subset.push(inst_row);\n      }\n    });\n  }\n\n  d3.select(params.root + ' .clust_group')\n    .selectAll('.row')\n    .data(matrix_subset, function (d) {\n      return d.name;\n    })\n    .enter()\n    .append('g')\n    .classed(row_class, true)\n    .attr('transform', function (d) {\n      return 'translate(0,' + y_scale(d.row_index) + ')';\n    })\n    .each(function (d) {\n      make_simple_rows(params, d, tip, this, ds_level);\n    });\n\n  if (params.viz.ds_level === -1 && tip != null) {\n    d3.selectAll(params.root + ' .row').call(tip);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/make_matrix_rows.js","/* eslint-disable */\n\nvar draw_up_tile = require('../enter/draw_up_tile');\nvar draw_dn_tile = require('../enter/draw_dn_tile');\nvar mouseover_tile = require('./mouseover_tile');\nvar mouseout_tile = require('./mouseout_tile');\nvar fine_position_tile = require('./fine_position_tile');\nvar filter = require('underscore/cjs/filter');\nvar utils = require('../Utils_clust');\n\nmodule.exports = function make_simple_rows(\n  params,\n  inst_data,\n  tip,\n  row_selection,\n  ds_level = -1\n) {\n  var inp_row_data = inst_data.row_data;\n\n  var make_tip = true;\n  var rect_height = params.viz.rect_height;\n  if (ds_level >= 0) {\n    // make_tip = false;\n    rect_height = params.viz.ds[ds_level].rect_height;\n  }\n\n  var keep_orig;\n  if (utils.has(params.network_data.links[0], 'value_orig')) {\n    keep_orig = true;\n  } else {\n    keep_orig = false;\n  }\n\n  var row_values;\n  if (keep_orig === false) {\n    // value: remove zero values to make visualization faster\n    row_values = filter(inp_row_data, function (num) {\n      return num.value !== 0;\n    });\n  } else {\n    row_values = inp_row_data;\n  }\n\n  // generate tiles in the current row\n  var tile = d3\n    .select(row_selection)\n    .selectAll('rect')\n    .data(row_values, function (d) {\n      return d.col_name;\n    })\n    .enter()\n    .append('rect')\n    .attr('class', 'tile row_tile')\n    .attr('width', params.viz.rect_width)\n    .attr('height', rect_height)\n    .style('fill', function (d) {\n      // switch the color based on up/dn value\n      var inst_fill;\n      if (d.value_orig === 'NaN') {\n        inst_fill = '#000000';\n      } else {\n        inst_fill =\n          d.value > 0\n            ? params.matrix.tile_colors[0]\n            : params.matrix.tile_colors[1];\n      }\n      return inst_fill;\n    })\n    .style('fill-opacity', function (d) {\n      // calculate output opacity using the opacity scale\n      var inst_opacity;\n      if (d.value_orig === 'NaN') {\n        // console.log('found NaN while making tiles');\n        inst_opacity = 0.175;\n      } else {\n        inst_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n      }\n      return inst_opacity;\n    })\n    .attr('transform', function (d) {\n      return fine_position_tile(params, d);\n    });\n\n  if (make_tip) {\n    tile\n      .on('mouseover', function () {\n        for (\n          var inst_len = arguments.length, args = Array(inst_len), inst_key = 0;\n          inst_key < inst_len;\n          inst_key++\n        ) {\n          args[inst_key] = arguments[inst_key];\n        }\n        mouseover_tile(params, this, tip, args);\n      })\n      .on('mouseout', function () {\n        mouseout_tile(params, this, tip);\n      })\n      .on('click', function () {\n        console.log('click');\n      });\n  }\n\n  // // tile circles\n  // /////////////////////////////\n  // var tile = d3.select(row_selection)\n  //   .selectAll('circle')\n  //   .data(row_values, function(d){ return d.col_name; })\n  //   .enter()\n  //   .append('circle')\n  //   .attr('cx', params.viz.rect_height/2)\n  //   .attr('cy', params.viz.rect_height/2)\n  //   .attr('r', params.viz.rect_height/3)\n  //   .attr('class', 'tile_circle')\n  //   // .attr('width', params.viz.rect_width/2)\n  //   // .attr('height', params.viz.rect_height/2)\n  //   // // switch the color based on up/dn value\n  //   // .style('fill', function(d) {\n  //   //   // return d.value > 0 ? params.matrix.tile_colors[0] : params.matrix.tile_colors[1];\n  //   //   return 'black';\n  //   // })\n  //   .on('mouseover', function(...args) {\n  //       mouseover_tile(params, this, tip, args);\n  //   })\n  //   .on('mouseout', function() {\n  //     mouseout_tile(params, this, tip);\n  //   })\n  //   .style('fill-opacity', function(d) {\n  //     // calculate output opacity using the opacity scale\n  //     var output_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n  //     if (output_opacity < 0.3){\n  //       output_opacity = 0;\n  //     } else if (output_opacity < 0.6){\n  //       output_opacity = 0.35;\n  //     } else {\n  //       output_opacity = 1;\n  //     }\n  //     return output_opacity;\n  //     // return 0.1;\n  //   })\n  //   .attr('transform', function(d) {\n  //     return fine_position_tile(params, d);\n  //   });\n\n  if (params.matrix.tile_type == 'updn') {\n    // value split\n    var row_split_data = filter(inp_row_data, function (num) {\n      return num.value_up != 0 || num.value_dn != 0;\n    });\n\n    // tile_up\n    d3.select(row_selection)\n      .selectAll('.tile_up')\n      .data(row_split_data, function (d) {\n        return d.col_name;\n      })\n      .enter()\n      .append('path')\n      .attr('class', 'tile_up')\n      .attr('d', function () {\n        return draw_up_tile(params);\n      })\n      .attr('transform', function (d) {\n        fine_position_tile(params, d);\n      })\n      .style('fill', function () {\n        return params.matrix.tile_colors[0];\n      })\n      .style('fill-opacity', function (d) {\n        var inst_opacity = 0;\n        if (Math.abs(d.value_dn) > 0) {\n          inst_opacity = params.matrix.opacity_scale(Math.abs(d.value_up));\n        }\n        return inst_opacity;\n      })\n      .on('mouseover', function (...args) {\n        mouseover_tile(params, this, tip, args);\n      })\n      .on('mouseout', function () {\n        mouseout_tile(params, this, tip);\n      })\n      .on('click', function () {\n        console.log('click');\n      });\n\n    // tile_dn\n    d3.select(row_selection)\n      .selectAll('.tile_dn')\n      .data(row_split_data, function (d) {\n        return d.col_name;\n      })\n      .enter()\n      .append('path')\n      .attr('class', 'tile_dn')\n      .attr('d', function () {\n        return draw_dn_tile(params);\n      })\n      .attr('transform', function (d) {\n        fine_position_tile(params, d);\n      })\n      .style('fill', function () {\n        return params.matrix.tile_colors[1];\n      })\n      .style('fill-opacity', function (d) {\n        var inst_opacity = 0;\n        if (Math.abs(d.value_up) > 0) {\n          inst_opacity = params.matrix.opacity_scale(Math.abs(d.value_dn));\n        }\n        return inst_opacity;\n      })\n      .on('mouseover', function (...args) {\n        mouseover_tile(params, this, tip, args);\n      })\n      .on('mouseout', function () {\n        mouseout_tile(params, this, tip);\n      })\n      .on('click', function () {\n        console.log('click');\n      });\n\n    // remove rect when tile is split\n    tile.each(function (d) {\n      if (Math.abs(d.value_up) > 0 && Math.abs(d.value_dn) > 0) {\n        d3.select(this).remove();\n      }\n    });\n  }\n\n  // append title to group\n  if (params.matrix.tile_title) {\n    tile.append('title').text(function (d) {\n      var inst_string = 'value: ' + d.value;\n      return inst_string;\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/make_simple_rows.js","module.exports = function draw_up_tile(params) {\n  var start_x = 0;\n  var final_x = params.viz.x_scale.rangeBand() - params.viz.border_width.x;\n  var start_y = 0;\n  var final_y = params.viz.y_scale.rangeBand() - params.viz.border_width.y;\n\n  var output_string =\n    'M' +\n    start_x +\n    ',' +\n    start_y +\n    ' L' +\n    start_x +\n    ', ' +\n    final_y +\n    ' L' +\n    final_x +\n    ',0 Z';\n\n  return output_string;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/draw_up_tile.js","module.exports = function draw_dn_tile(params) {\n  var start_x = 0;\n  var final_x = params.viz.x_scale.rangeBand() - params.viz.border_width.x;\n  var start_y = params.viz.y_scale.rangeBand() - params.viz.border_width.y;\n  var final_y = params.viz.y_scale.rangeBand() - params.viz.border_width.y;\n\n  var output_string =\n    'M' +\n    start_x +\n    ', ' +\n    start_y +\n    '   L' +\n    final_x +\n    ', ' +\n    final_y +\n    ' L' +\n    final_x +\n    ',0 Z';\n\n  return output_string;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/draw_dn_tile.js","module.exports = function mouseover_tile(\n  params,\n  inst_selection,\n  tip,\n  inst_arguments\n) {\n  var inst_data = inst_arguments[0];\n  d3.select(inst_selection).classed('hovering', true);\n  ['row', 'col'].forEach(function (inst_rc) {\n    d3.selectAll(params.root + ' .' + inst_rc + '_label_group text').style(\n      'font-weight',\n      function (d) {\n        var font_weight;\n        var inst_found =\n          (inst_data[inst_rc + '_name'] || '').replace(/_/g, ' ') === d.name;\n        if (inst_found) {\n          font_weight = 'bold';\n        } else {\n          font_weight = 'normal';\n        }\n        return font_weight;\n      }\n    );\n  });\n  dispatchEvent(\n    new CustomEvent('TILE_MOUSEOVER', {\n      detail: {\n        tile: inst_data,\n        rect: inst_selection.getBoundingClientRect()\n      }\n    })\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/mouseover_tile.js","module.exports = function mouseout_tile(params, inst_selection, tip) {\n  d3.select(inst_selection).classed('hovering', false);\n  d3.selectAll(params.viz.root_tips + '_tile_tip').style('display', 'none');\n  ['row', 'col'].forEach(function (inst_rc) {\n    d3.selectAll(params.root + ' .' + inst_rc + '_label_group text').style(\n      'font-weight',\n      'normal'\n    );\n  });\n  dispatchEvent(\n    new CustomEvent('TILE_MOUSEOUT', {\n      detail: inst_selection.__data__\n    })\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/mouseout_tile.js","module.exports = function fine_position_tile(params, d) {\n  var offset_x;\n\n  // prevent rows not in x_scale domain from causing errors\n  if (d.pos_x in params.viz.x_scale.domain()) {\n    offset_x = params.viz.x_scale(d.pos_x);\n  } else {\n    offset_x = 0;\n  }\n\n  var x_pos = offset_x + 0.5 * params.viz.border_width.x;\n  var y_pos = 0.5 * params.viz.border_width.y;\n  return 'translate(' + x_pos + ',' + y_pos + ')';\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/fine_position_tile.js","module.exports = function d3_tip_custom() {\n  /* eslint-disable */\n  // Copyright (c) 2013 Justin Palmer\n  //\n  // Tooltips for d3.js SVG visualizations\n\n  // Public - contructs a new tooltip\n  //\n  // Returns a tip\n  // ******************\n  // Nick Fernandez modified version 4-19-2016\n  // improved multiple svg, scrolling+zooming support\n  // made syntax fixes\n  //////////////////////////////////////////////\n  var direction = d3_tip_direction,\n    offset = d3_tip_offset,\n    html = d3_tip_html,\n    node = initNode(),\n    svg = null,\n    point = null,\n    target = null;\n\n  function tip(vis) {\n    svg = getSVGNode(vis);\n    point = svg.createSVGPoint();\n    document.body.appendChild(node);\n  }\n\n  // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n  tip.show = function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (args[args.length - 1] instanceof SVGElement) {\n      target = args.pop();\n    }\n\n    var content = html.apply(this, args);\n    var poffset = offset.apply(this, args);\n    var dir = direction.apply(this, args);\n    var nodel = d3.select(node);\n    var i = 0;\n    var coords;\n\n    // add z-index to make sure tooltips appear on top\n    nodel\n      .html(content)\n      .style({ opacity: 1, 'pointer-events': 'all' })\n      .style('z-index', 99);\n\n    while (i--) {\n      nodel.classed(directions[i], false);\n    }\n    coords = direction_callbacks.get(dir).apply(this);\n    nodel.classed(dir, true).style({\n      top: coords.top + poffset[0] + 'px',\n      left: coords.left + poffset[1] + 'px'\n    });\n\n    // quick fix for fading tile tooltips\n    if (isFunction(this) === false) {\n      var inst_class = d3.select(this).attr('class');\n\n      if (inst_class.indexOf('tile') >= 0) {\n        setTimeout(fade_tips, 5000, this);\n      }\n    }\n\n    return tip;\n  };\n\n  // Public - hide the tooltip\n  //\n  // Returns a tip\n  tip.hide = function () {\n    // // hide all d3-tip tooltips\n    // d3.selectAll('.d3-tip')\n    //   .style('display', 'none');\n\n    var nodel = d3.select(node);\n    nodel.style({ opacity: 0, 'pointer-events': 'none' });\n    return tip;\n  };\n\n  // Public: Proxy attr calls to the d3 tip container.  Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  tip.attr = function (n) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return d3.select(node).attr(n);\n    } else {\n      var args = Array.prototype.slice.call(arguments);\n      d3.selection.prototype.attr.apply(d3.select(node), args);\n    }\n\n    return tip;\n  };\n\n  // Public: Proxy style calls to the d3 tip container.  Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  tip.style = function (n) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return d3.select(node).style(n);\n    } else {\n      var args = Array.prototype.slice.call(arguments);\n      d3.selection.prototype.style.apply(d3.select(node), args);\n    }\n\n    return tip;\n  };\n\n  // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n  tip.direction = function (v) {\n    if (!arguments.length) {\n      return direction;\n    }\n    direction = v == null ? v : d3.functor(v);\n\n    return tip;\n  };\n\n  // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n  tip.offset = function (v) {\n    if (!arguments.length) {\n      return offset;\n    }\n    offset = v == null ? v : d3.functor(v);\n\n    return tip;\n  };\n\n  // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n  tip.html = function (v) {\n    if (!arguments.length) {\n      return html;\n    }\n    html = v == null ? v : d3.functor(v);\n\n    return tip;\n  };\n\n  function d3_tip_direction() {\n    return 'n';\n  }\n  function d3_tip_offset() {\n    return [0, 0];\n  }\n  function d3_tip_html() {\n    return ' ';\n  }\n\n  var direction_callbacks = d3.map({\n      n: direction_n,\n      s: direction_s,\n      e: direction_e,\n      w: direction_w,\n      nw: direction_nw,\n      ne: direction_ne,\n      sw: direction_sw,\n      se: direction_se,\n      south_custom: direction_south_custom\n    }),\n    directions = direction_callbacks.keys();\n\n  function direction_south_custom() {\n    var bbox = getScreenBBox();\n\n    return {\n      top: bbox.s.y,\n      left: bbox.s.x\n    };\n  }\n\n  function direction_n() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    };\n  }\n\n  function direction_s() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    };\n  }\n\n  function direction_e() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    };\n  }\n\n  function direction_w() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    };\n  }\n\n  function direction_nw() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    };\n  }\n\n  function direction_ne() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    };\n  }\n\n  function direction_sw() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    };\n  }\n\n  function direction_se() {\n    var bbox = getScreenBBox();\n    return {\n      top: bbox.se.y,\n      left: bbox.e.x\n    };\n  }\n\n  function initNode() {\n    var node = d3.select(document.createElement('div'));\n    node.style({\n      position: 'absolute',\n      opacity: 0,\n      pointerEvents: 'none',\n      boxSizing: 'border-box'\n    });\n\n    return node.node();\n  }\n\n  function getSVGNode(el) {\n    el = el.node();\n    if (el.tagName.toLowerCase() == 'svg') {\n      return el;\n    }\n\n    return el.ownerSVGElement;\n  }\n\n  // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast), nw(northwest),\n  // sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n  function getScreenBBox() {\n    var targetel = target || d3.event.target;\n    var bbox = {};\n    var matrix = targetel.getScreenCTM();\n    var tbbox = targetel.getBBox();\n    var width = tbbox.width;\n    var height = tbbox.height;\n    var x = tbbox.x;\n    var y = tbbox.y;\n    var scrollTop =\n      document.documentElement.scrollTop || document.body.scrollTop;\n    var scrollLeft =\n      document.documentElement.scrollLeft || document.body.scrollLeft;\n\n    // Nick - prevents bugs with scrolling and zooming on the same object\n    matrix.a = 1;\n    matrix.d = 1;\n    // changing order of adding scrolling,\n    // original ordering was causing problems with pre-translated or rotated\n    // elements.\n    matrix.e = matrix.e + scrollLeft;\n    matrix.f = matrix.f + scrollTop;\n    point.x = x; //+ scrollLeft\n    point.y = y; //+ scrollTop\n\n    bbox.nw = point.matrixTransform(matrix);\n    point.x = point.x + width;\n    bbox.ne = point.matrixTransform(matrix);\n    point.y = point.y + height;\n    bbox.se = point.matrixTransform(matrix);\n    point.x = point.x - width;\n    bbox.sw = point.matrixTransform(matrix);\n    point.y = point.y - height / 2;\n    bbox.w = point.matrixTransform(matrix);\n    point.x = point.x + width;\n    bbox.e = point.matrixTransform(matrix);\n    point.x = point.x - width / 2;\n    point.y = point.y - height / 2;\n    bbox.n = point.matrixTransform(matrix);\n    point.y = point.y + height;\n    bbox.s = point.matrixTransform(matrix);\n\n    return bbox;\n  }\n\n  // only fade tips if you are still hovering on the current tip\n  function fade_tips(inst_selection) {\n    var is_hovering = d3.select(inst_selection).classed('hovering');\n\n    if (is_hovering) {\n      d3.selectAll('.d3-tip')\n        .transition()\n        .duration(250)\n        .style('opacity', 0)\n        .style('display', 'none');\n    }\n  }\n\n  function isFunction(functionToCheck) {\n    var getType = {};\n    return (\n      functionToCheck &&\n      getType.toString.call(functionToCheck) === '[object Function]'\n    );\n  }\n\n  return tip;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/tooltip/d3_tip_custom.js","var _isArrayLike = require('./_isArrayLike.js');\nvar values = require('./values.js');\nvar indexOf = require('./indexOf.js');\n\n// Determine if the array or object contains a given item (using `===`).\nfunction contains(obj, item, fromIndex, guard) {\n  if (!_isArrayLike(obj)) obj = values(obj);\n  if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n  return indexOf(obj, item, fromIndex) >= 0;\n}\n\nmodule.exports = contains;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/contains.js","var sortedIndex = require('./sortedIndex.js');\nvar findIndex = require('./findIndex.js');\nvar _createIndexFinder = require('./_createIndexFinder.js');\n\n// Return the position of the first occurrence of an item in an array,\n// or -1 if the item is not included in the array.\n// If the array is large and already in sort order, pass `true`\n// for **isSorted** to use binary search.\nvar indexOf = _createIndexFinder(1, findIndex, sortedIndex);\n\nmodule.exports = indexOf;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/indexOf.js","var _cb = require('./_cb.js');\nvar _getLength = require('./_getLength.js');\n\n// Use a comparator function to figure out the smallest index at which\n// an object should be inserted so as to maintain order. Uses binary search.\nfunction sortedIndex(array, obj, iteratee, context) {\n  iteratee = _cb(iteratee, context, 1);\n  var value = iteratee(obj);\n  var low = 0, high = _getLength(array);\n  while (low < high) {\n    var mid = Math.floor((low + high) / 2);\n    if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n  }\n  return low;\n}\n\nmodule.exports = sortedIndex;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/sortedIndex.js","var _createPredicateIndexFinder = require('./_createPredicateIndexFinder.js');\n\n// Returns the first index on an array-like that passes a truth test.\nvar findIndex = _createPredicateIndexFinder(1);\n\nmodule.exports = findIndex;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/findIndex.js","var _cb = require('./_cb.js');\nvar _getLength = require('./_getLength.js');\n\n// Internal function to generate `_.findIndex` and `_.findLastIndex`.\nfunction createPredicateIndexFinder(dir) {\n  return function(array, predicate, context) {\n    predicate = _cb(predicate, context);\n    var length = _getLength(array);\n    var index = dir > 0 ? 0 : length - 1;\n    for (; index >= 0 && index < length; index += dir) {\n      if (predicate(array[index], index, array)) return index;\n    }\n    return -1;\n  };\n}\n\nmodule.exports = createPredicateIndexFinder;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_createPredicateIndexFinder.js","var _getLength = require('./_getLength.js');\nvar _setup = require('./_setup.js');\nvar _isNaN = require('./isNaN.js');\n\n// Internal function to generate the `_.indexOf` and `_.lastIndexOf` functions.\nfunction createIndexFinder(dir, predicateFind, sortedIndex) {\n  return function(array, item, idx) {\n    var i = 0, length = _getLength(array);\n    if (typeof idx == 'number') {\n      if (dir > 0) {\n        i = idx >= 0 ? idx : Math.max(idx + length, i);\n      } else {\n        length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n      }\n    } else if (sortedIndex && idx && length) {\n      idx = sortedIndex(array, item);\n      return array[idx] === item ? idx : -1;\n    }\n    if (item !== item) {\n      idx = predicateFind(_setup.slice.call(array, i, length), _isNaN);\n      return idx >= 0 ? idx + i : -1;\n    }\n    for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n      if (array[idx] === item) return idx;\n    }\n    return -1;\n  };\n}\n\nmodule.exports = createIndexFinder;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_createIndexFinder.js","var _setup = require('./_setup.js');\nvar isNumber = require('./isNumber.js');\n\n// Is the given value `NaN`?\nfunction isNaN(obj) {\n  return isNumber(obj) && _setup._isNaN(obj);\n}\n\nmodule.exports = isNaN;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/isNaN.js","var _tagTester = require('./_tagTester.js');\n\nvar isNumber = _tagTester('Number');\n\nmodule.exports = isNumber;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/isNumber.js","var make_row_labels = require('./make_row_labels');\n\nmodule.exports = function make_row_label_container(cgm, text_delay) {\n  var params = cgm.params;\n\n  var row_container;\n\n  // row container holds all row text and row visualizations (triangles rects)\n  ////////////////////////////////////////////////////////////////////////////\n  if (d3.select(params.viz.viz_svg + ' .row_container').empty()) {\n    row_container = d3\n      .select(params.viz.viz_svg)\n      .append('g')\n      .classed('row_container', true)\n      .attr(\n        'transform',\n        'translate(' +\n          params.viz.norm_labels.margin.left +\n          ',' +\n          params.viz.clust.margin.top +\n          ')'\n      );\n  } else {\n    row_container = d3\n      .select(params.viz.viz_svg)\n      .select('.row_container')\n      .attr(\n        'transform',\n        'translate(' +\n          params.viz.norm_labels.margin.left +\n          ',' +\n          params.viz.clust.margin.top +\n          ')'\n      );\n  }\n\n  if (d3.select(params.root + ' .row_white_background').empty()) {\n    row_container\n      .append('rect')\n      .classed('row_white_background', true)\n      .classed('white_bars', true)\n      .attr('fill', params.viz.background_color)\n      .attr('width', params.viz.label_background.row)\n      .attr('height', 30 * params.viz.clust.dim.height + 'px');\n  }\n\n  // add container to hold text row labels if not already there\n  if (d3.select(params.root + ' .row_label_container').empty()) {\n    row_container\n      .append('g')\n      .classed('row_label_container', true)\n      .attr(\n        'transform',\n        'translate(' + params.viz.norm_labels.width.row + ',0)'\n      )\n      .append('g')\n      .classed('row_label_zoom_container', true);\n  } else {\n    row_container\n      .select(params.root + ' .row_label_container')\n      .attr(\n        'transform',\n        'translate(' + params.viz.norm_labels.width.row + ',0)'\n      );\n  }\n\n  // make row labels in the container\n  ///////////////////////////////////////\n  if (params.viz.ds_level === -1) {\n    make_row_labels(cgm, 'all', text_delay);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/make_row_label_container.js","var utils = require('../Utils_clust');\nvar add_row_click_hlight = require('./add_row_click_hlight');\nvar row_reorder = require('../reorder/row_reorder');\nvar make_row_tooltips = require('./make_row_tooltips');\nvar each = require('underscore/cjs/each');\nvar contains = require('underscore/cjs/contains');\n\nmodule.exports = function make_row_labels(\n  cgm,\n  row_names = 'all',\n  text_delay = 0\n) {\n  // console.log('make_row_labels')\n  // console.log(row_names)\n\n  var params = cgm.params;\n  var row_nodes = [];\n\n  if (row_names === 'all') {\n    row_nodes = params.network_data.row_nodes;\n  } else {\n    each(params.network_data.row_nodes, function (inst_row) {\n      if (contains(row_names, inst_row.name)) {\n        row_nodes.push(inst_row);\n      }\n    });\n  }\n\n  // make row labels in row_label_zoom_container, bind row_nodes data\n  var row_labels = d3\n    .select(params.root + ' .row_label_zoom_container')\n    .selectAll('g')\n    .data(row_nodes, function (d) {\n      return d.name;\n    })\n    .enter()\n    .append('g')\n    .classed('row_label_group', true);\n\n  var row_nodes_names = params.network_data.row_nodes_names || [];\n  row_labels.attr('transform', function (d) {\n    // var inst_index = d.row_index;\n    var inst_index = row_nodes_names.indexOf(d.name);\n    return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n  });\n\n  row_labels.on('dblclick', function (d) {\n    var data_attr = '__data__';\n    var row_name = this[data_attr].name;\n\n    // if (params.sim_mat){\n    //   row_reorder(cgm, this, row_name);\n\n    //   d3.selectAll(params.root+' .col_label_text')\n    //     .filter(function(d){\n    //       return d.name == row_name;}\n    //       )[0][0];\n\n    //   // this is causing buggyness may reenable\n    //   // col_reorder -> two_translate_zoom -> show_visible_area -> make_row_labels -> col_reorder\n    //   // col_reorder(cgm, col_selection, row_name);\n\n    // } else {\n    //   row_reorder(cgm, this, row_name);\n    // }\n\n    row_reorder(cgm, this, row_name);\n\n    if (params.tile_click_hlight) {\n      add_row_click_hlight(this, d.ini);\n    }\n  });\n\n  make_row_tooltips(params);\n\n  // append rectangle behind text\n  row_labels.insert('rect').style('opacity', 0);\n\n  // append row label text\n  row_labels\n    .append('text')\n    .attr(\n      'y',\n      params.viz.rect_height * 0.5 + params.labels.default_fs_row * 0.35\n    )\n    .attr('text-anchor', 'end')\n    .style('font-size', params.labels.default_fs_row + 'px')\n    .text(function (d) {\n      return utils.normal_name(d);\n    })\n    .attr('pointer-events', 'none')\n    .style('opacity', 0)\n    .style('cursor', 'default')\n    .transition()\n    .delay(text_delay)\n    .duration(text_delay)\n    .style('opacity', 1);\n\n  // change the size of the highlighting rects\n  row_labels.each(function () {\n    var bbox = d3.select(this).select('text')[0][0].getBBox();\n    d3.select(this)\n      .select('rect')\n      .attr('x', bbox.x)\n      .attr('y', 0)\n      .attr('width', bbox.width)\n      .attr('height', params.viz.y_scale.rangeBand())\n      .style('fill', function () {\n        var inst_hl = 'yellow';\n        return inst_hl;\n      })\n      .style('opacity', function (d) {\n        var inst_opacity = 0;\n        // highlight target genes\n        if (d.target === 1) {\n          inst_opacity = 1;\n        }\n        return inst_opacity;\n      });\n  });\n\n  // almost-deprecated row value bars\n  ///////////////////////////////\n  if (utils.has(params.network_data.row_nodes[0], 'value')) {\n    row_labels\n      .append('rect')\n      .classed('row_bars', true)\n      .attr('width', function (d) {\n        var inst_value = 0;\n        inst_value = params.labels.bar_scale_row(Math.abs(d.value));\n        return inst_value;\n      })\n      .attr('x', function (d) {\n        var inst_value = 0;\n        inst_value = -params.labels.bar_scale_row(Math.abs(d.value));\n        return inst_value;\n      })\n      .attr('height', params.viz.y_scale.rangeBand())\n      .attr('fill', function (d) {\n        return d.value > 0\n          ? params.matrix.bar_colors[0]\n          : params.matrix.bar_colors[1];\n      })\n      .attr('opacity', 0.4);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/make_row_labels.js","module.exports = function (params, clicked_row, id_clicked_row) {\n  if (id_clicked_row != params.click_hlight_row) {\n    var rel_width_hlight = 6;\n    var opacity_hlight = 0.85;\n    var hlight_height = rel_width_hlight * params.viz.border_width.x;\n\n    d3.selectAll(params.root + ' .click_hlight').remove();\n\n    // // highlight selected row\n    // d3.selectAll(params.root+' .row_label_group')\n    //   .select('rect')\n    // d3.select(this)\n    //   .select('rect')\n    //   .style('opacity', 1);\n\n    d3.select(clicked_row)\n      .append('rect')\n      .classed('click_hlight', true)\n      .classed('row_top_hlight', true)\n      .attr('width', params.viz.svg_dim.width)\n      .attr('height', hlight_height)\n      .attr('fill', params.matrix.hlight_color)\n      .attr('opacity', opacity_hlight);\n\n    d3.select(clicked_row)\n      .append('rect')\n      .classed('click_hlight', true)\n      .classed('row_bottom_hlight', true)\n      .attr('width', params.viz.svg_dim.width)\n      .attr('height', hlight_height)\n      .attr('fill', params.matrix.hlight_color)\n      .attr('opacity', opacity_hlight)\n      .attr('transform', function () {\n        var tmp_translate_y = params.viz.y_scale.rangeBand() - hlight_height;\n        return 'translate(0,' + tmp_translate_y + ')';\n      });\n  } else {\n    d3.selectAll(params.root + ' .click_hlight').remove();\n    params.click_hlight_row = -666;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/add_row_click_hlight.js","var reposition_tile_highlight = require('./reposition_tile_highlight');\nvar toggle_dendro_view = require('../dendrogram/toggle_dendro_view');\nvar ini_zoom_info = require('../zoom/ini_zoom_info');\nvar get_previous_zoom = require('../zoom/get_previous_zoom');\nvar calc_downsampled_levels = require('../matrix/calc_downsampled_levels');\nvar $ = require('jquery');\n\nmodule.exports = function row_reorder(cgm, row_selection, inst_row) {\n  var params = cgm.params;\n  var prev_zoom = get_previous_zoom(params);\n\n  if (prev_zoom.zoom_y === 1 && prev_zoom.zoom_x === 1) {\n    params.viz.inst_order.row = 'custom';\n    toggle_dendro_view(cgm, 'col');\n\n    d3.selectAll(params.root + ' .toggle_col_order .btn').classed(\n      'active',\n      false\n    );\n\n    params.viz.run_trans = true;\n\n    var mat = $.extend(true, {}, params.matrix.matrix);\n    var row_nodes = params.network_data.row_nodes;\n    var col_nodes = params.network_data.col_nodes;\n\n    // find the index of the row\n    var tmp_arr = [];\n    row_nodes.forEach(function (node) {\n      tmp_arr.push(node.name);\n    });\n\n    // find index\n    inst_row = tmp_arr.indexOf(inst_row);\n\n    // gather the values of the input genes\n    tmp_arr = [];\n    col_nodes.forEach(function (node, index) {\n      tmp_arr.push(mat[inst_row].row_data[index].value);\n    });\n\n    // sort the rows\n    var tmp_sort = d3.range(tmp_arr.length).sort(function (a, b) {\n      return tmp_arr[b] - tmp_arr[a];\n    });\n\n    // resort cols (cols are reorderd by double clicking a row)\n    params.viz.x_scale.domain(tmp_sort);\n\n    // save to custom col order\n    params.matrix.orders.custom_row = tmp_sort;\n\n    // reorder matrix\n    ////////////////////\n    var t;\n    if (params.network_data.links.length > params.matrix.def_large_matrix) {\n      t = d3.select(params.root + ' .viz_svg');\n    } else {\n      t = d3\n        .select(params.root + ' .viz_svg')\n        .transition()\n        .duration(2500);\n    }\n\n    var col_nodes_names = params.network_data.col_nodes_names || [];\n\n    // Move Col Labels\n    t.select('.col_zoom_container')\n      .selectAll('.col_label_text')\n      .attr('transform', function (d) {\n        var inst_index = col_nodes_names.indexOf(d.name);\n        return 'translate(' + params.viz.x_scale(inst_index) + ')rotate(-90)';\n      });\n\n    // reorder col_class groups\n    t.selectAll('.col_cat_group').attr('transform', function (d) {\n      var inst_index = col_nodes_names.indexOf(d.name);\n      return 'translate(' + params.viz.x_scale(inst_index) + ',0)';\n    });\n\n    // reorder tiles in matrix (do not change row order)\n    if (params.viz.ds_level === -1) {\n      t.selectAll('.tile').attr('transform', function (d) {\n        return 'translate(' + params.viz.x_scale(d.pos_x) + ',0)';\n      });\n\n      t.selectAll('.tile_up').attr('transform', function (d) {\n        return 'translate(' + params.viz.x_scale(d.pos_x) + ',0)';\n      });\n\n      t.selectAll('.tile_dn').attr('transform', function (d) {\n        return 'translate(' + params.viz.x_scale(d.pos_x) + ',0)';\n      });\n    }\n\n    // highlight selected row\n    ///////////////////////////////\n    // unhilight and unbold all columns (already unbolded earlier)\n    d3.selectAll(params.root + ' .row_label_group')\n      .select('rect')\n      .style('opacity', 0);\n    // highlight column name\n    d3.select(row_selection).select('rect').style('opacity', 1);\n\n    reposition_tile_highlight(params);\n\n    // redefine x and y positions\n    params.network_data.links.forEach(function (d) {\n      d.x = params.viz.x_scale(d.target);\n      d.y = params.viz.y_scale(d.source);\n    });\n\n    params.zoom_info = ini_zoom_info();\n\n    setTimeout(function () {\n      params.viz.run_trans = false;\n    }, 2500);\n\n    // calculate downsmapling if necessary\n    if (params.viz.ds_num_levels > 0 && params.viz.ds_level >= 0) {\n      calc_downsampled_levels(params);\n\n      // var zooming_stopped = true;\n      // var zooming_out = true;\n      // var make_all_rows = true;\n      // // show_visible_area is also run with two_translate_zoom, but at that point\n      // // the parameters were not updated and two_translate_zoom if only run\n      // // if needed to reset zoom\n      // show_visible_area(cgm, zooming_stopped, zooming_out, make_all_rows);\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reorder/row_reorder.js","module.exports = function (params) {\n  // resize click hlight\n  var rel_width_hlight = 6;\n  // var opacity_hlight = 0.85;\n\n  var hlight_width = rel_width_hlight * params.viz.border_width.x;\n  var hlight_height = rel_width_hlight * params.viz.border_width.y;\n\n  // reposition tile highlight\n  ////////////////////////////////\n  // top highlight\n  d3.select(params.root + ' .top_hlight')\n    .attr('width', params.viz.x_scale.rangeBand())\n    .attr('height', hlight_height)\n    .transition()\n    .duration(2500)\n    .attr('transform', function () {\n      return (\n        'translate(' + params.viz.x_scale(params.matrix.click_hlight_x) + ',0)'\n      );\n    });\n\n  // left highlight\n  d3.select(params.root + ' .left_hlight')\n    .attr('width', hlight_width)\n    .attr('height', params.viz.y_scale.rangeBand() - hlight_height * 0.99)\n    .transition()\n    .duration(2500)\n    .attr('transform', function () {\n      return (\n        'translate(' +\n        params.viz.x_scale(params.matrix.click_hlight_x) +\n        ',' +\n        hlight_height * 0.99 +\n        ')'\n      );\n    });\n\n  // right highlight\n  d3.select(params.root + ' .right_hlight')\n    .attr('width', hlight_width)\n    .attr('height', params.viz.y_scale.rangeBand() - hlight_height * 0.99)\n    .transition()\n    .duration(2500)\n    .attr('transform', function () {\n      var tmp_translate =\n        params.viz.x_scale(params.matrix.click_hlight_x) +\n        params.viz.x_scale.rangeBand() -\n        hlight_width;\n      return 'translate(' + tmp_translate + ',' + hlight_height * 0.99 + ')';\n    });\n\n  // bottom highlight\n  d3.select(params.root + ' .bottom_hlight')\n    .attr('width', function () {\n      return params.viz.x_scale.rangeBand() - 1.98 * hlight_width;\n    })\n    .attr('height', hlight_height)\n    .transition()\n    .duration(2500)\n    .attr('transform', function () {\n      var tmp_translate_x =\n        params.viz.x_scale(params.matrix.click_hlight_x) + hlight_width * 0.99;\n      var tmp_translate_y = params.viz.y_scale.rangeBand() - hlight_height;\n      return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reorder/reposition_tile_highlight.js","var make_dendro_triangles = require('../dendrogram/make_dendro_triangles');\n\nmodule.exports = function toggle_dendro_view(cgm, inst_rc, wait_time = 1500) {\n  var params = cgm.params;\n\n  // row and col are reversed\n  if (inst_rc === 'row') {\n    if (params.viz.inst_order.col === 'clust') {\n      // the last true tells the viz that I'm chaning group size and not to\n      // delay the change in dendro\n      setTimeout(make_dendro_triangles, wait_time, cgm, 'row', true);\n    }\n  }\n\n  if (inst_rc === 'col') {\n    if (params.viz.inst_order.row === 'clust') {\n      setTimeout(make_dendro_triangles, wait_time, cgm, 'col', true);\n    }\n  }\n\n  if (\n    params.viz.inst_order.row != 'clust' &&\n    params.viz.dendro_filter.col === false\n  ) {\n    d3.selectAll(params.root + ' .col_dendro_group')\n      .style('opacity', 0)\n      .on('mouseover', null)\n      .on('mouseout', null);\n\n    d3.select(params.root + ' .col_slider_group').style('opacity', 0);\n\n    // toggle crop buttons\n    d3.selectAll(params.root + ' .col_dendro_crop_buttons')\n      .style('opacity', 0)\n      .on('mouseover', null)\n      .on('mouseout', null);\n  }\n\n  if (\n    params.viz.inst_order.col != 'clust' &&\n    params.viz.dendro_filter.row === false\n  ) {\n    d3.selectAll(params.root + ' .row_dendro_group')\n      .style('opacity', 0)\n      .on('mouseover', null)\n      .on('mouseout', null)\n      .on('click', null);\n\n    d3.select(params.root + ' .row_slider_group').style('opacity', 0);\n\n    // toggle crop buttons\n    d3.selectAll(params.root + ' .row_dendro_crop_buttons')\n      .style('opacity', 0)\n      .on('mouseover', null)\n      .on('mouseout', null);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/toggle_dendro_view.js","var calc_row_dendro_triangles = require('./calc_row_dendro_triangles');\nvar calc_col_dendro_triangles = require('./calc_col_dendro_triangles');\nvar dendro_group_highlight = require('./dendro_group_highlight');\nvar d3_tip_custom = require('../tooltip/d3_tip_custom');\nvar make_dendro_crop_buttons = require('./make_dendro_crop_buttons');\nvar make_cat_breakdown_graph = require('../categories/make_cat_breakdown_graph');\nvar $ = require('jquery');\n\nmodule.exports = function make_dendro_triangles(\n  cgm,\n  inst_rc,\n  is_change_group = false\n) {\n  var params = cgm.params;\n\n  // in case sim_mat\n  if (inst_rc === 'both') {\n    inst_rc = 'row';\n  }\n\n  var other_rc;\n  if (inst_rc === 'row') {\n    other_rc = 'col';\n  } else {\n    other_rc = 'row';\n  }\n\n  // orders are switched!\n  if (params.viz.inst_order[other_rc] === 'clust') {\n    d3.select(params.root + ' .' + inst_rc + '_slider_group').style(\n      'opacity',\n      1\n    );\n  }\n\n  var dendro_info;\n\n  if (params.viz.show_dendrogram) {\n    if (inst_rc === 'row') {\n      dendro_info = calc_row_dendro_triangles(params);\n    } else {\n      dendro_info = calc_col_dendro_triangles(params);\n    }\n\n    if (\n      d3\n        .select(cgm.params.root + ' .' + inst_rc + '_dendro_crop_buttons')\n        .empty() === false\n    ) {\n      make_dendro_crop_buttons(cgm, inst_rc);\n    }\n  }\n\n  // constant dendrogram opacity\n  var inst_dendro_opacity = params.viz.dendro_opacity;\n\n  function still_hovering(inst_selection, inst_data, i) {\n    if (d3.select(inst_selection).classed('hovering')) {\n      // define where graph should be built\n      var inst_selector = params.viz.root_tips + '_' + inst_rc + '_dendro_tip';\n\n      // prevent mouseover from making multiple graphs\n      if (d3.select(inst_selector + ' .cat_graph').empty()) {\n        if (params.viz.cat_info[inst_rc] !== null) {\n          make_cat_breakdown_graph(\n            params,\n            inst_rc,\n            inst_data,\n            dendro_info[i],\n            inst_selector,\n            true\n          );\n        }\n      }\n\n      d3.selectAll(params.viz.root_tips + '_' + inst_rc + '_dendro_tip').style(\n        'opacity',\n        1\n      );\n    }\n  }\n\n  var wait_before_tooltip = 500;\n\n  // remove any old dendro tooltips from this visualization\n  d3.selectAll(\n    cgm.params.viz.root_tips + '_' + inst_rc + '_dendro_tip'\n  ).remove();\n\n  // run transition rules\n  var run_transition;\n  if (d3.selectAll(params.root + ' .' + inst_rc + '_dendro_group').empty()) {\n    run_transition = false;\n  } else {\n    run_transition = true;\n    d3.selectAll(params.root + ' .' + inst_rc + '_dendro_group').remove();\n    // d3.selectAll(params.root+' .dendro_tip').remove();\n  }\n\n  // d3-tooltip\n  var tmp_y_offset = 0;\n  var tmp_x_offset = -5;\n  var dendro_tip = d3_tip_custom()\n    .attr('class', function () {\n      // add root element to class\n      var root_tip_selector = params.viz.root_tips.replace('.', '');\n      var class_string =\n        root_tip_selector +\n        ' d3-tip ' +\n        root_tip_selector +\n        '_' +\n        inst_rc +\n        '_dendro_tip';\n\n      return class_string;\n    })\n    .direction('nw')\n    .offset([tmp_y_offset, tmp_x_offset])\n    .style('display', 'none')\n    .style('opacity', 0);\n\n  dendro_tip.html(function () {\n    var full_string =\n      '<div class=\"cluster_info_container\"></div>Click for cluster information <br>' +\n      'and additional options.';\n    return full_string;\n  });\n\n  if (is_change_group) {\n    run_transition = false;\n  }\n\n  var dendro_traps = d3\n    .select(params.root + ' .' + inst_rc + '_dendro_container')\n    .selectAll('path')\n    .data(dendro_info, function (d) {\n      return d.name;\n    })\n    .enter()\n    .append('path')\n    .style('opacity', 0)\n    .attr('class', inst_rc + '_dendro_group')\n\n    .style('fill', 'black');\n\n  // draw triangles (shown as trapezoids)\n  //////////////////////////////////////////\n  var start_x;\n  var start_y;\n  var mid_x;\n  var mid_y;\n  var final_x;\n  var final_y;\n\n  // row triangles\n  dendro_traps.attr('d', function (d) {\n    if (inst_rc === 'row') {\n      // row triangles\n      start_x = 0;\n      start_y = d.pos_top;\n      mid_x = 30;\n      mid_y = d.pos_mid;\n      final_x = 0;\n      final_y = d.pos_bot;\n    } else {\n      // column triangles\n      start_x = d.pos_top;\n      start_y = 0;\n      mid_x = d.pos_mid;\n      mid_y = 30;\n      final_x = d.pos_bot;\n      final_y = 0;\n    }\n\n    var output_string =\n      'M' +\n      start_x +\n      ',' +\n      start_y +\n      ' L' +\n      mid_x +\n      ', ' +\n      mid_y +\n      ' L' +\n      final_x +\n      ',' +\n      final_y +\n      ' Z';\n    return output_string;\n  });\n\n  dendro_traps\n    .on('mouseover', function (d, i) {\n      // if (params.sim_mat){\n      //   inst_rc = 'both';\n      // }\n\n      // run instantly on mouseover\n      d3.select(this).classed('hovering', true);\n\n      if (cgm.params.dendro_callback != null) {\n        cgm.params.dendro_callback(this);\n      }\n\n      // display tip\n      // this is needed for it to show in the right place and the opacity\n      // will be toggled to delay the tooltip for the user\n      d3.select(params.viz.root_tips + '_' + inst_rc + '_dendro_tip').style(\n        'display',\n        'block'\n      );\n\n      dendro_group_highlight(params, this, d, inst_rc);\n\n      // show the tip (make sure it is displaying before it is shown)\n      dendro_tip.show(d);\n\n      // set opacity to zero\n      d3.select(params.viz.root_tips + '_' + inst_rc + '_dendro_tip').style(\n        'opacity',\n        0\n      );\n\n      // check if still hovering\n      setTimeout(still_hovering, wait_before_tooltip, this, d, i);\n    })\n    .on('mouseout', function () {\n      if (params.viz.inst_order[other_rc] === 'clust') {\n        d3.select(this).style('opacity', inst_dendro_opacity);\n      }\n\n      d3.selectAll(params.root + ' .dendro_shadow').remove();\n\n      d3.select(this).classed('hovering', false);\n      dendro_tip.hide(this);\n    })\n    .on('click', function (d, i) {\n      $(params.root + ' .dendro_info').modal('toggle');\n\n      var group_string = d.all_names.join(', ');\n      d3.select(params.root + ' .dendro_info input').attr(\n        'value',\n        group_string\n      );\n\n      var inst_selector = params.root + ' .dendro_info';\n\n      // remove old graphs (modals are not within params.root)\n      d3.selectAll('.dendro_info .cluster_info_container .cat_graph').remove();\n\n      if (params.viz.cat_info[inst_rc] !== null) {\n        make_cat_breakdown_graph(\n          params,\n          inst_rc,\n          d,\n          dendro_info[i],\n          inst_selector\n        );\n      }\n\n      if (cgm.params.dendro_click_callback != null) {\n        cgm.params.dendro_click_callback(this);\n      }\n    })\n    .call(dendro_tip);\n\n  var triangle_opacity;\n  if (params.viz.inst_order[other_rc] === 'clust') {\n    triangle_opacity = inst_dendro_opacity;\n  } else {\n    triangle_opacity = 0;\n  }\n\n  if (run_transition) {\n    d3.select(params.root + ' .' + inst_rc + '_dendro_container')\n      .selectAll('path')\n      .transition()\n      .delay(1000)\n      .duration(1000)\n      .style('opacity', triangle_opacity);\n  } else {\n    d3.select(params.root + ' .' + inst_rc + '_dendro_container')\n      .selectAll('path')\n      .style('opacity', triangle_opacity);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/make_dendro_triangles.js","var each = require('underscore/cjs/each');\nvar utils = require('../Utils_clust');\n\nmodule.exports = function calc_row_dendro_triangles(params) {\n  var triangle_info = {};\n  var inst_level = params.group_level.row;\n  var row_nodes = params.network_data.row_nodes || [];\n  var row_nodes_names = params.network_data.row_nodes_names || [];\n\n  each(row_nodes, function (d) {\n    var tmp_group = d.group[inst_level];\n    var inst_index = row_nodes_names.indexOf(d.name);\n    var inst_top = params.viz.y_scale(inst_index);\n    var inst_bot = inst_top + params.viz.y_scale.rangeBand();\n\n    if (!utils.has(triangle_info, tmp_group)) {\n      triangle_info[tmp_group] = {};\n      triangle_info[tmp_group].name_top = d.name;\n      triangle_info[tmp_group].name_bot = d.name;\n      triangle_info[tmp_group].pos_top = inst_top;\n      triangle_info[tmp_group].pos_bot = inst_bot;\n      triangle_info[tmp_group].pos_mid = (inst_top + inst_bot) / 2;\n      triangle_info[tmp_group].name = tmp_group;\n      triangle_info[tmp_group].all_names = [];\n      triangle_info[tmp_group].inst_rc = 'row';\n    }\n\n    triangle_info[tmp_group].all_names.push(d.name);\n\n    if (inst_top < triangle_info[tmp_group].pos_top) {\n      triangle_info[tmp_group].name_top = d.name;\n      triangle_info[tmp_group].pos_top = inst_top;\n      triangle_info[tmp_group].pos_mid =\n        (inst_top + triangle_info[tmp_group].pos_bot) / 2;\n    }\n\n    if (inst_bot > triangle_info[tmp_group].pos_bot) {\n      triangle_info[tmp_group].name_bot = d.name;\n      triangle_info[tmp_group].pos_bot = inst_bot;\n      triangle_info[tmp_group].pos_mid =\n        (triangle_info[tmp_group].pos_top + inst_bot) / 2;\n    }\n  });\n\n  var group_info = [];\n\n  each(triangle_info, function (d) {\n    group_info.push(d);\n  });\n\n  return group_info;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/calc_row_dendro_triangles.js","var each = require('underscore/cjs/each');\nvar utils = require('../Utils_clust');\n\nmodule.exports = function calc_col_dendro_triangles(params) {\n  var triangle_info = {};\n  var inst_level = params.group_level.col;\n  var col_nodes = params.network_data.col_nodes || [];\n  var col_nodes_names = params.network_data.col_nodes_names || [];\n\n  each(col_nodes, function (d) {\n    var tmp_group = d.group[inst_level];\n    var inst_index = col_nodes_names.indexOf(d.name);\n    var inst_top = params.viz.x_scale(inst_index);\n    var inst_bot = inst_top + params.viz.x_scale.rangeBand();\n\n    if (!utils.has(triangle_info, tmp_group)) {\n      triangle_info[tmp_group] = {};\n      triangle_info[tmp_group].name_top = d.name;\n      triangle_info[tmp_group].name_bot = d.name;\n      triangle_info[tmp_group].pos_top = inst_top;\n      triangle_info[tmp_group].pos_bot = inst_bot;\n      triangle_info[tmp_group].pos_mid = (inst_top + inst_bot) / 2;\n      triangle_info[tmp_group].name = tmp_group;\n      triangle_info[tmp_group].all_names = [];\n      triangle_info[tmp_group].inst_rc = 'col';\n    }\n\n    triangle_info[tmp_group].all_names.push(d.name);\n\n    if (inst_top < triangle_info[tmp_group].pos_top) {\n      triangle_info[tmp_group].name_top = d.name;\n      triangle_info[tmp_group].pos_top = inst_top;\n      triangle_info[tmp_group].pos_mid =\n        (inst_top + triangle_info[tmp_group].pos_bot) / 2;\n    }\n\n    if (inst_bot > triangle_info[tmp_group].pos_bot) {\n      triangle_info[tmp_group].name_bot = d.name;\n      triangle_info[tmp_group].pos_bot = inst_bot;\n      triangle_info[tmp_group].pos_mid =\n        (triangle_info[tmp_group].pos_top + inst_bot) / 2;\n    }\n  });\n\n  var group_info = [];\n\n  each(triangle_info, function (d) {\n    group_info.push(d);\n  });\n\n  return group_info;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/calc_col_dendro_triangles.js","var dendro_shade_bars = require('./dendro_shade_bars');\n\nmodule.exports = function dendro_group_highlight(\n  params,\n  inst_selection,\n  inst_data,\n  inst_rc\n) {\n  // only make shadows if there is more than one crop button\n  if (\n    d3.selectAll(params.root + ' .' + inst_rc + '_dendro_crop_buttons')[0]\n      .length > 1\n  ) {\n    setTimeout(still_hovering, 500);\n  } else {\n    d3.selectAll(params.root + ' .dendro_shadow').remove();\n  }\n\n  function still_hovering() {\n    // check that user is still hovering over dendrogram group\n    if (d3.select(inst_selection).classed('hovering')) {\n      // check that user is not using dendrogram slider\n      if (params.is_slider_drag === false) {\n        d3.select(inst_selection).style('opacity', 0.7);\n\n        if (d3.select(params.viz.viz_svg).classed('running_update') === false) {\n          make_shadow_bars();\n        }\n      }\n    }\n  }\n\n  function make_shadow_bars() {\n    if (inst_rc === 'row') {\n      // row and col labling are reversed\n      if (params.viz.inst_order.col === 'clust') {\n        dendro_shade_bars(params, inst_selection, inst_rc, inst_data);\n      }\n    } else if (inst_rc === 'col') {\n      // row and col labeling are reversed\n      if (params.viz.inst_order.row === 'clust') {\n        dendro_shade_bars(params, inst_selection, inst_rc, inst_data);\n      }\n    } else if (inst_rc === 'both') {\n      if (params.viz.inst_order.col === 'clust') {\n        dendro_shade_bars(params, inst_selection, 'row', inst_data);\n      }\n      if (params.viz.inst_order.row === 'clust') {\n        dendro_shade_bars(params, inst_selection, 'col', inst_data);\n      }\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/dendro_group_highlight.js","module.exports = function dendro_shade_bars(\n  params,\n  inst_selection,\n  inst_rc,\n  inst_data\n) {\n  var inst_opacity = 0.2;\n  var bot_height;\n\n  d3.selectAll(params.root + ' .dendro_shadow').remove();\n\n  if (inst_rc == 'row') {\n    // top shade\n    d3.select(params.root + ' .clust_group')\n      .append('rect')\n      .attr('width', params.viz.clust.dim.width + 'px')\n      .attr('height', inst_data.pos_top + 'px')\n      .attr('fill', 'black')\n      .classed('dendro_shadow', true)\n      .attr('opacity', inst_opacity);\n\n    bot_height = params.viz.clust.dim.height - inst_data.pos_bot;\n    // bottom shade\n    d3.select(params.root + ' .clust_group')\n      .append('rect')\n      .attr('width', params.viz.clust.dim.width + 'px')\n      .attr('height', bot_height + 'px')\n      .attr('transform', 'translate(0,' + inst_data.pos_bot + ')')\n      .attr('fill', 'black')\n      .classed('dendro_shadow', true)\n      .attr('opacity', inst_opacity);\n  } else if (inst_rc === 'col') {\n    // top shade\n    d3.select(params.root + ' .clust_group')\n      .append('rect')\n      .attr('width', inst_data.pos_top + 'px')\n      .attr('height', params.viz.clust.dim.height + 'px')\n      .attr('fill', 'black')\n      .classed('dendro_shadow', true)\n      .attr('opacity', inst_opacity);\n\n    // bottom shade\n    bot_height = params.viz.clust.dim.width - inst_data.pos_bot;\n    d3.select(params.root + ' .clust_group')\n      .append('rect')\n      .attr('width', bot_height + 'px')\n      .attr('height', params.viz.clust.dim.height + 'px')\n      .attr('transform', 'translate(' + inst_data.pos_bot + ',0)')\n      .attr('fill', 'black')\n      .classed('dendro_shadow', true)\n      .attr('opacity', inst_opacity);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/dendro_shade_bars.js","var calc_row_dendro_triangles = require('./calc_row_dendro_triangles');\nvar calc_col_dendro_triangles = require('./calc_col_dendro_triangles');\nvar d3_tip_custom = require('../tooltip/d3_tip_custom');\nvar dendro_group_highlight = require('./dendro_group_highlight');\nvar run_dendro_filter = require('./run_dendro_filter');\nvar zoom_crop_triangles = require('../zoom/zoom_crop_triangles');\n\nmodule.exports = function make_dendro_crop_buttons(cgm, inst_rc) {\n  var params = cgm.params;\n\n  var button_opacity = params.viz.dendro_opacity * 0.6;\n\n  // information needed to make dendro\n  var dendro_info;\n  var other_rc;\n  if (params.viz.show_dendrogram) {\n    if (inst_rc === 'row') {\n      dendro_info = calc_row_dendro_triangles(params);\n      other_rc = 'col';\n    } else {\n      dendro_info = calc_col_dendro_triangles(params);\n      other_rc = 'row';\n    }\n  }\n\n  // d3-tooltip\n  var tmp_y_offset = 5;\n  var tmp_x_offset = -5;\n  var dendro_crop_tip = d3_tip_custom()\n    .attr('class', function () {\n      var root_tip_selector = params.viz.root_tips.replace('.', '');\n      var class_string =\n        root_tip_selector +\n        ' d3-tip ' +\n        root_tip_selector +\n        '_' +\n        inst_rc +\n        '_dendro_crop_tip';\n\n      return class_string;\n    })\n    .direction('nw')\n    .style('display', 'none')\n    .offset([tmp_y_offset, tmp_x_offset]);\n\n  var wait_before_tooltip = 500;\n\n  d3.selectAll(\n    params.viz.root_tips + '_' + inst_rc + '_dendro_crop_tip'\n  ).remove();\n  d3.selectAll(params.root + ' .' + inst_rc + '_dendro_crop_buttons').remove();\n\n  var icons;\n  // position triangles\n  var start_x;\n  var start_y;\n  var mid_x;\n  var mid_y;\n  var final_x;\n  var final_y;\n\n  // need to improve to account for zooming\n  var min_tri_height = 45;\n  var scale_down_tri = 0.25;\n  var tri_height;\n  var tri_width;\n  var tri_dim;\n\n  // make crop buttons or undo buttons\n  var button_class = inst_rc + '_dendro_crop_buttons';\n  if (\n    d3\n      .select(cgm.params.root + ' .' + inst_rc + '_dendro_icons_group')\n      .classed('ran_filter') === false\n  ) {\n    // Crop Triangle\n    //////////////////////////////\n    icons = d3\n      .select(params.root + ' .' + inst_rc + '_dendro_icons_group')\n      .selectAll('path')\n      .data(dendro_info, function (d) {\n        return d.name;\n      })\n      .enter()\n      .append('path')\n      .classed(button_class, true)\n      .attr('d', function (d) {\n        // redefine\n        tri_height = 10;\n        tri_width = 10;\n\n        var tmp_height = d.pos_bot - d.pos_top;\n\n        // Row Dendrogram Crop Triangle\n        if (inst_rc === 'row') {\n          if (tmp_height < min_tri_height) {\n            tri_height = tmp_height * scale_down_tri;\n          }\n\n          // pointing left\n          start_x = tri_width;\n          start_y = -tri_height;\n          mid_x = 0;\n          mid_y = 0;\n          final_x = tri_width;\n          final_y = tri_height;\n\n          tri_dim = tri_height;\n\n          // Column Dendrogram Crop Triangle\n        } else {\n          if (tmp_height < min_tri_height) {\n            tri_width = tmp_height * scale_down_tri;\n          }\n\n          // pointing upward\n          start_x = -tri_width;\n          start_y = tri_height;\n          mid_x = 0;\n          mid_y = 0;\n          final_x = tri_width;\n          final_y = tri_height;\n\n          tri_dim = tri_width;\n        }\n\n        // save triangle height\n        // d3.select(this)[0][0].__data__.tri_dim = tri_dim;\n        var data_key = '__data__';\n        d3.select(this)[0][0][data_key].tri_dim = tri_dim;\n\n        var output_string =\n          'M' +\n          start_x +\n          ',' +\n          start_y +\n          ' L' +\n          mid_x +\n          ', ' +\n          mid_y +\n          ' L' +\n          final_x +\n          ',' +\n          final_y +\n          ' Z';\n\n        return output_string;\n      });\n\n    dendro_crop_tip.html(function () {\n      var full_string = 'Click to crop cluster';\n      return full_string;\n    });\n  } else {\n    // Undo Triangle\n    //////////////////////////////\n    icons = d3\n      .select(params.root + ' .' + inst_rc + '_dendro_icons_group')\n      .selectAll('path')\n      .data(dendro_info, function (d) {\n        return d.name;\n      })\n      .enter()\n      .append('path')\n      .classed(button_class, true)\n      .attr('d', function (d) {\n        // redefine\n        tri_height = 10;\n        tri_width = 12;\n\n        var tmp_height = d.pos_bot - d.pos_top;\n\n        if (inst_rc === 'row') {\n          if (tmp_height < min_tri_height) {\n            tri_height = tmp_height * scale_down_tri;\n          }\n\n          // pointing right\n          start_x = 0;\n          start_y = -tri_height;\n          mid_x = tri_width;\n          mid_y = 0;\n          final_x = 0;\n          final_y = tri_height;\n        } else {\n          if (tmp_height < min_tri_height) {\n            tri_width = tmp_height * scale_down_tri;\n          }\n\n          // pointing downward\n          start_x = -tri_width;\n          start_y = 0;\n          mid_x = 0;\n          mid_y = tri_height;\n          final_x = tri_width;\n          final_y = 0;\n        }\n\n        // save triangle height\n        var data_key = '__data__';\n        d3.select(this)[0][0][data_key].tri_dim = 10;\n\n        var output_string =\n          'M' +\n          start_x +\n          ',' +\n          start_y +\n          ' L' +\n          mid_x +\n          ', ' +\n          mid_y +\n          ' L' +\n          final_x +\n          ',' +\n          final_y +\n          ' Z';\n\n        return output_string;\n      });\n\n    dendro_crop_tip.html(function () {\n      var full_string = 'Click to undo crop';\n      return full_string;\n    });\n  }\n\n  icons\n    .style('cursor', 'pointer')\n    .style('opacity', function () {\n      var inst_opacity;\n\n      // if (d3.select(this).classed('hide_crop')){\n      //   inst_opacity = 0;\n      // } else {\n      //   inst_opacity = button_opacity;\n      // }\n\n      inst_opacity = button_opacity;\n      return inst_opacity;\n    })\n    .attr('transform', function (d) {\n      var inst_translate;\n\n      var inst_x;\n      var inst_y;\n\n      if (inst_rc === 'row') {\n        inst_x = params.viz.uni_margin;\n        inst_y = d.pos_mid;\n      } else {\n        inst_x = d.pos_mid;\n        inst_y = params.viz.uni_margin;\n      }\n\n      inst_translate = 'translate(' + inst_x + ',' + inst_y + ')';\n      return inst_translate;\n    })\n    .on('mouseover', function (d) {\n      d3.select(this).classed('hovering', true);\n\n      dendro_crop_tip.show(d);\n\n      dendro_group_highlight(params, this, d, inst_rc);\n\n      // display with zero opacity\n      d3.selectAll(params.viz.root_tips + '_' + inst_rc + '_dendro_crop_tip')\n        .style('opacity', 0)\n        .style('display', 'block');\n\n      // check if still hovering\n      setTimeout(still_hovering, wait_before_tooltip, this);\n    })\n    .on('mouseout', function () {\n      d3.select(this).classed('hovering', false);\n\n      d3.selectAll(params.root + ' .dendro_shadow').remove();\n\n      d3.select(this).style('opacity', button_opacity);\n\n      dendro_crop_tip.hide(this);\n    })\n    .on('click', function (d) {\n      // give user visual cue\n      d3.select(this)\n        .style('opacity', 0.9)\n        .transition()\n        .duration(1000)\n        .style('opacity', 0);\n\n      // remove dendro shadows when clicked\n      d3.selectAll(params.root + ' .dendro_shadow').remove();\n\n      /* filter using dendrogram */\n      if (\n        cgm.params.dendro_filter.row === false &&\n        cgm.params.dendro_filter.col === false &&\n        cgm.params.cat_filter.row === false &&\n        cgm.params.cat_filter.col === false\n      ) {\n        // Run Filtering\n        ///////////////////\n\n        // use class as 'global' variable\n        d3.select(cgm.params.root + ' .' + inst_rc + '_dendro_icons_group')\n          .attr('transform', 'translate(0,0), scale(1,1)')\n          .classed('ran_filter', true);\n\n        d3.select(\n          cgm.params.root + ' .' + other_rc + '_dendro_icons_group'\n        ).attr('transform', 'translate(0,0), scale(1,1)');\n\n        // do not display dendrogram slider if filtering has been run\n        d3.select(cgm.params.root + ' .' + inst_rc + '_slider_group').style(\n          'display',\n          'none'\n        );\n\n        // do not display other crop buttons since they are inactive\n        d3.select(\n          cgm.params.root + ' .' + other_rc + '_dendro_icons_container'\n        ).style('display', 'none');\n\n        // do not display brush-crop button if performing dendro crop\n        d3.select(cgm.params.root + ' .crop_button').style('opacity', 0.2);\n      } else {\n        // Undo Filtering\n        ///////////////////\n        // use class as 'global' variable\n        d3.select(cgm.params.root + ' .' + inst_rc + '_dendro_icons_group')\n          .attr('transform', 'translate(0,0), scale(1,1)')\n          .classed('ran_filter', false);\n\n        d3.select(\n          cgm.params.root + ' .' + other_rc + '_dendro_icons_group'\n        ).attr('transform', 'translate(0,0), scale(1,1)');\n\n        if (params.viz.inst_order[other_rc] === 'clust') {\n          // display slider when cropping has not been done\n          d3.select(cgm.params.root + ' .' + inst_rc + '_slider_group').style(\n            'display',\n            'block'\n          );\n        }\n\n        // display other crop buttons when cropping has not been done\n        d3.select(\n          cgm.params.root + ' .' + other_rc + '_dendro_icons_container'\n        ).style('display', 'block');\n\n        // display brush-crop button if not performing dendro crop\n        d3.select(cgm.params.root + ' .crop_button').style('opacity', 1);\n      }\n\n      run_dendro_filter(cgm, d, inst_rc);\n    })\n    .call(dendro_crop_tip);\n\n  // ordering has been reversed\n  if (params.viz.inst_order[other_rc] != 'clust') {\n    // do not display if not in cluster order\n    d3.select(params.root + ' .' + inst_rc + '_dendro_icons_group')\n      .selectAll('path')\n      .style('display', 'none');\n  }\n\n  function still_hovering(inst_selection) {\n    if (d3.select(inst_selection).classed('hovering')) {\n      // increase opacity\n      d3.selectAll(params.viz.root_tips + '_' + inst_rc + '_dendro_crop_tip')\n        .style('opacity', 1)\n        .style('display', 'block');\n    }\n  }\n\n  zoom_crop_triangles(params, params.zoom_info, inst_rc);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/make_dendro_crop_buttons.js","module.exports = function run_dendro_filter(cgm, d, inst_rc) {\n  var names = {};\n\n  if (\n    cgm.params.dendro_filter.row === false &&\n    cgm.params.dendro_filter.col === false &&\n    cgm.params.cat_filter.row === false &&\n    cgm.params.cat_filter.col === false\n  ) {\n    d3.select(cgm.params.root + ' .' + inst_rc + '_slider_group')\n      .style('opacity', 0.35)\n      .style('pointer-events', 'none');\n\n    names[inst_rc] = d.all_names;\n\n    var tmp_names = cgm.params.network_data[inst_rc + '_nodes_names'];\n\n    // keep a backup of the inst_view\n    var inst_row_nodes = cgm.params.network_data.row_nodes;\n    var inst_col_nodes = cgm.params.network_data.col_nodes;\n\n    cgm.filter_viz_using_names(names);\n\n    // overwrite with backup of original nodes\n    cgm.params.inst_nodes.row_nodes = inst_row_nodes;\n    cgm.params.inst_nodes.col_nodes = inst_col_nodes;\n\n    d3.selectAll(cgm.params.root + ' .dendro_shadow')\n      .transition()\n      .duration(1000)\n      .style('opacity', 0)\n      .remove();\n\n    // keep the names of all the nodes\n    cgm.params.dendro_filter[inst_rc] = tmp_names;\n\n    /* reset filter */\n  } else {\n    names[inst_rc] = cgm.params.dendro_filter[inst_rc];\n\n    cgm.filter_viz_using_names(names);\n    cgm.params.dendro_filter[inst_rc] = false;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/run_dendro_filter.js","module.exports = function zoom_crop_triangles(params, zoom_info, inst_rc) {\n  if (inst_rc === 'row') {\n    // transform icons (undo zoom on triangles)\n    d3.select(params.root + ' .row_dendro_icons_group')\n      .selectAll('path')\n      .attr('transform', function (d) {\n        var inst_x = params.viz.uni_margin;\n        var inst_y = d.pos_mid;\n        var curr_zoom = zoom_info.zoom_y;\n        var tri_dim = d3.select(this).data()[0].tri_dim;\n        var inst_zoom = constrain_zoom(curr_zoom, tri_dim);\n        return (\n          'translate(' +\n          inst_x +\n          ',' +\n          inst_y +\n          ') ' +\n          'scale(1, ' +\n          1 / inst_zoom +\n          ')'\n        );\n      });\n  } else {\n    // transform icons (undo zoom on triangles)\n    d3.select(params.root + ' .col_dendro_icons_group')\n      .selectAll('path')\n      .attr('transform', function (d) {\n        var inst_x = d.pos_mid;\n        var inst_y = params.viz.uni_margin;\n        var curr_zoom = zoom_info.zoom_x;\n        var tri_dim = d3.select(this).data()[0].tri_dim;\n        var inst_zoom = constrain_zoom(curr_zoom, tri_dim);\n        return (\n          'translate(' +\n          inst_x +\n          ',' +\n          inst_y +\n          ') ' +\n          'scale(' +\n          1 / inst_zoom +\n          ', 1)'\n        );\n      });\n  }\n\n  function constrain_zoom(curr_zoom, tri_height) {\n    var inst_zoom;\n    var default_tri_height = 10;\n    if (tri_height * curr_zoom < default_tri_height) {\n      inst_zoom = 1;\n    } else {\n      var max_zoom = default_tri_height / tri_height;\n      inst_zoom = curr_zoom / max_zoom;\n    }\n    return inst_zoom;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/zoom_crop_triangles.js","var calc_cat_cluster_breakdown = require('./calc_cat_cluster_breakdown');\nvar each = require('underscore/cjs/each');\nvar cat_breakdown_bars = require('./cat_breakdown_bars');\nvar cat_breakdown_values = require('./cat_breakdown_values');\n\nmodule.exports = function make_cat_breakdown_graph(\n  params,\n  inst_rc,\n  inst_data,\n  dendro_info,\n  selector,\n  tooltip = false\n) {\n  /*\n  This function is used to make the category breakdown graphs for tooltips on\n  dendrogram mousover and on dendrogram click modal popup.\n  */\n\n  // in case sim_mat\n  if (inst_rc === 'both') {\n    inst_rc = 'row';\n  }\n\n  var cat_breakdown = calc_cat_cluster_breakdown(params, inst_data, inst_rc);\n\n  if (cat_breakdown.length > 0) {\n    // put cluster information in dendro_tip\n    ///////////////////////////////////////////\n    var cluster_info_container = d3.select(\n      selector + ' .cluster_info_container'\n    );\n\n    // loop through cat_breakdown data\n    var width = 370;\n    var title_height = 27;\n    var shift_tooltip_left = 177;\n    var bar_offset = 23;\n\n    // these are the indexes where the number-of-nodes and the number of downsampled\n    // nodes are stored\n    var num_nodes_index = 4;\n    var num_nodes_ds_index = 5;\n    var offset_ds_count = 150;\n\n    var is_downsampled = false;\n    if (cat_breakdown[0].bar_data[0][num_nodes_ds_index] != null) {\n      width = width + 100;\n      shift_tooltip_left = shift_tooltip_left + offset_ds_count - 47;\n      is_downsampled = true;\n    }\n\n    // the index that will be used to generate the bars (will be different if\n    // downsampled)\n    var cluster_total = dendro_info.all_names.length;\n    var bars_index = num_nodes_index;\n    if (is_downsampled) {\n      bars_index = num_nodes_ds_index;\n\n      // calculate the total number of nodes in downsampled case\n      var inst_bar_data = cat_breakdown[0].bar_data;\n      cluster_total = 0;\n      each(inst_bar_data, function (tmp_data) {\n        cluster_total = cluster_total + tmp_data[num_nodes_ds_index];\n      });\n    }\n\n    // limit on the number of category types shown\n    var max_cats = 3;\n    // limit the number of bars shown\n    var max_bars = 25;\n\n    // calculate height needed for svg based on cat_breakdown data\n    var svg_height = 20;\n    cat_breakdown.slice(0, max_cats).forEach(function (tmp_break) {\n      var num_bars = tmp_break.bar_data.length;\n      if (num_bars > max_bars) {\n        num_bars = max_bars;\n      }\n      svg_height = svg_height + title_height * (num_bars + 1);\n    });\n\n    // Cluster Information Title (for tooltip only not modal)\n    if (tooltip) {\n      cluster_info_container.append('text').text('Cluster Information');\n    }\n\n    var main_dendro_svg = cluster_info_container\n      .append('div')\n      .style('margin-top', '5px')\n      .classed('cat_graph', true)\n      .append('svg')\n      .style('height', svg_height + 'px')\n      .style('width', width + 'px');\n\n    cluster_info_container.style('margin-bottom', '5px');\n\n    // make background\n    main_dendro_svg\n      .append('rect')\n      .classed('cat_background', true)\n      .attr('height', svg_height + 'px')\n      .attr('width', width + 'px')\n      .attr('fill', 'white')\n      .attr('opacity', 1);\n\n    // limit the category-types\n    cat_breakdown = cat_breakdown.slice(0, max_cats);\n\n    // shift the position of the numbers based on the size of the number\n    // offset the count column based on how large the counts are\n    var digit_offset_scale = d3.scale\n      .linear()\n      .domain([0, 100000])\n      .range([20, 30]);\n\n    // the total amout to shift down the next category\n    var shift_down = title_height;\n\n    cat_breakdown.forEach(function (cat_data) {\n      var max_bar_value = cat_data.bar_data[0][bars_index];\n\n      var count_offset = digit_offset_scale(max_bar_value);\n\n      var cat_graph_group = main_dendro_svg\n        .append('g')\n        .classed('cat_graph_group', true)\n        .attr('transform', 'translate(10, ' + shift_down + ')');\n\n      var cat_bar_container = cat_graph_group\n        .append('g')\n        .classed('cat_bar_container', true)\n        .attr('transform', 'translate(0, 10)');\n\n      // make bar groups (hold bar and text)\n      var cat_bar_groups = cat_bar_container\n        .selectAll('g')\n        .data(cat_data.bar_data)\n        .enter()\n        .append('g')\n        .attr('transform', function (d, i) {\n          var inst_y = i * bar_offset;\n          return 'translate(0,' + inst_y + ')';\n        });\n\n      cat_breakdown_bars(\n        params,\n        cat_data,\n        cat_graph_group,\n        title_height,\n        bars_index,\n        max_bars,\n        cat_bar_groups\n      );\n\n      cat_breakdown_values(\n        params,\n        cat_graph_group,\n        cat_bar_groups,\n        num_nodes_index,\n        is_downsampled,\n        count_offset,\n        bars_index,\n        cluster_total\n      );\n\n      // shift down based on number of bars\n      shift_down = shift_down + title_height * (cat_data.bar_data.length + 1);\n    });\n\n    // reposition tooltip\n    /////////////////////////////////////////////////\n    if (tooltip) {\n      var dendro_tip = d3.select(selector);\n      var old_top = dendro_tip.style('top').split('.px')[0];\n      var old_left = dendro_tip.style('left').split('.px')[0];\n      var shift_top = 0;\n      var shift_left = 0;\n\n      // shifting\n      if (inst_rc === 'row') {\n        // rows\n        //////////////\n        shift_top = 0;\n        shift_left = shift_tooltip_left;\n\n        // // prevent graph from being too high\n        // if (dendro_info.pos_top < svg_height){\n        //   // do not shift position of category breakdown graph\n        //   // shift_top = -(svg_height + (dendro_info.pos_mid - dendro_info.pos_top)/2) ;\n        // }\n      } else {\n        // columns\n        //////////////\n        shift_top = svg_height + 32;\n        shift_left = 30;\n      }\n\n      dendro_tip\n        .style('top', function () {\n          var new_top = String(parseInt(old_top, 10) - shift_top) + 'px';\n          return new_top;\n        })\n        .style('left', function () {\n          var new_left = String(parseInt(old_left, 10) - shift_left) + 'px';\n          return new_left;\n        });\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/make_cat_breakdown_graph.js","var binom_test = require('./binom_test');\nvar each = require('underscore/cjs/each');\nvar utils = require('../Utils_clust');\n\nmodule.exports = function calc_cat_cluster_breakdown(\n  params,\n  inst_data,\n  inst_rc\n) {\n  // Category-breakdown of dendrogram-clusters\n  /////////////////////////////////////////////\n  /*\n  1. get information for nodes in cluster\n  2. find category-types that are string-type\n  3. count instances of each category name for each category-type\n  */\n\n  // in case sim_mat\n  if (inst_rc === 'both') {\n    inst_rc = 'row';\n  }\n\n  // 1: get information for nodes in cluster\n  ///////////////////////////////////////////\n\n  // names of nodes in cluster\n  var clust_names = inst_data.all_names;\n  // array of nodes in the cluster\n  var clust_nodes = [];\n  var all_nodes = params.network_data[inst_rc + '_nodes'];\n  var num_in_clust_index = null;\n  var is_downsampled = false;\n\n  var inst_name;\n  each(all_nodes, function (inst_node) {\n    inst_name = inst_node.name;\n\n    if (clust_names.indexOf(inst_name) >= 0) {\n      clust_nodes.push(inst_node);\n    }\n  });\n\n  // 2: find category-types that are string-type\n  ///////////////////////////////////////////////\n\n  var cat_breakdown = [];\n\n  if (params.viz.cat_info[inst_rc] !== null) {\n    var inst_cat_info = params.viz.cat_info[inst_rc];\n\n    // tmp list of all categories\n    var tmp_types_index = Object.keys(inst_cat_info || {});\n    // this will hold the indexes of string-type categories\n    var cat_types_index = [];\n\n    // get category names (only include string-type categories)\n    var cat_types_names = [];\n    var type_name;\n    var inst_index;\n    var cat_index;\n    for (var i = 0; i < tmp_types_index.length; i++) {\n      cat_index = 'cat-' + String(i);\n\n      if (params.viz.cat_info[inst_rc][cat_index].type === 'cat_strings') {\n        type_name = params.viz.cat_names[inst_rc][cat_index];\n        cat_types_names.push(type_name);\n        cat_types_index.push(cat_index);\n      } else {\n        // save number in clust category index if found\n        if (params.viz.cat_names[inst_rc][cat_index] === 'number in clust') {\n          num_in_clust_index = cat_index;\n          is_downsampled = true;\n        }\n      }\n    }\n\n    var tmp_run_count = {};\n    var inst_breakdown = {};\n    var bar_data;\n    var radix_param = 10;\n\n    // sort by actual counts (rather than cluster counts)\n    var sorting_index = 4;\n    if (is_downsampled) {\n      sorting_index = 5;\n    }\n\n    var no_title_given;\n    if (type_name === cat_index) {\n      no_title_given = true;\n    } else {\n      no_title_given = false;\n    }\n\n    if (cat_types_names.length > 0) {\n      // 3: count instances of each category name for each category-type\n      var cat_name;\n      var num_in_clust = clust_names.length;\n\n      // use the cat_hist to get the number of instances of this category in\n      // all rows/cols\n      // params\n\n      each(cat_types_index, function (cat_index) {\n        inst_index = cat_index.split('-')[1];\n        type_name = cat_types_names[inst_index];\n\n        if (no_title_given) {\n          if (cat_index.indexOf('-') >= 0) {\n            var tmp_num = parseInt(cat_index.split('-')[1], radix_param) + 1;\n            type_name = 'Category ' + String(tmp_num);\n          } else {\n            // backup behavior\n            type_name = 'Category';\n          }\n        }\n\n        tmp_run_count[type_name] = {};\n\n        // loop through the nodes and keep a running count of categories\n        each(clust_nodes, function (tmp_node) {\n          cat_name = tmp_node[cat_index];\n\n          if (cat_name.indexOf(': ') >= 0) {\n            cat_name = cat_name.split(': ')[1];\n          }\n\n          if (cat_name in tmp_run_count[type_name]) {\n            tmp_run_count[type_name][cat_name].num_nodes =\n              tmp_run_count[type_name][cat_name].num_nodes + 1;\n\n            if (num_in_clust_index != null) {\n              tmp_run_count[type_name][cat_name].num_nodes_ds =\n                tmp_run_count[type_name][cat_name].num_nodes_ds +\n                parseInt(\n                  tmp_node[num_in_clust_index].split(': ')[1],\n                  radix_param\n                );\n            }\n          } else {\n            tmp_run_count[type_name][cat_name] = {};\n            tmp_run_count[type_name][cat_name].num_nodes = 1;\n            if (num_in_clust_index != null) {\n              tmp_run_count[type_name][cat_name].num_nodes_ds = parseInt(\n                tmp_node[num_in_clust_index].split(': ')[1],\n                radix_param\n              );\n            }\n          }\n        });\n\n        inst_breakdown = {};\n        inst_breakdown.type_name = type_name;\n        inst_breakdown.num_in_clust = num_in_clust;\n\n        // sort cat info in cat_breakdown\n        bar_data = [];\n        var bar_color;\n        var cat_title_and_name;\n        var inst_run_count = tmp_run_count[type_name];\n\n        for (var inst_cat in inst_run_count) {\n          var tot_num_cat =\n            params.viz.cat_info[inst_rc][cat_index].cat_hist[inst_cat];\n          var total_nodes = params.network_data[inst_rc + '_nodes'].length;\n          var expect_prob = tot_num_cat / total_nodes;\n\n          // if no cat-title given\n          if (no_title_given) {\n            cat_title_and_name = inst_cat;\n          } else {\n            cat_title_and_name = type_name + ': ' + inst_cat;\n          }\n\n          // num_nodes: number of cat-nodes drawn in cluster\n          var num_nodes = inst_run_count[inst_cat].num_nodes;\n\n          var actual_k = num_nodes;\n          var pval = binom_test(actual_k, num_in_clust, expect_prob);\n\n          // working on tracking the 'real' number of nodes, which is only different\n          // if downsampling has been done\n          if (utils.has(inst_run_count[inst_cat], 'num_nodes_ds')) {\n            var num_nodes_ds = inst_run_count[inst_cat].num_nodes_ds;\n          } else {\n            num_nodes_ds = null;\n          }\n\n          bar_color =\n            params.viz.cat_colors[inst_rc][cat_index][cat_title_and_name];\n\n          bar_data.push([\n            cat_index,\n            cat_title_and_name,\n            inst_run_count[inst_cat],\n            bar_color,\n            num_nodes,\n            num_nodes_ds,\n            pval\n          ]);\n        }\n\n        bar_data.sort(function (a, b) {\n          return b[sorting_index] - a[sorting_index];\n        });\n\n        inst_breakdown.bar_data = bar_data;\n\n        cat_breakdown.push(inst_breakdown);\n      });\n    }\n  }\n\n  return cat_breakdown;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/calc_cat_cluster_breakdown.js","// Load the math.js core\n// Create a new, empty math.js instance\n// It will only contain methods `import` and `config`\n// math.import(require('mathjs/lib/type/fraction'));\nvar p_dict = require('./binom_prop_pval_lookup');\nvar core = require('mathjs/core');\nvar math = core.create();\n\nmath.import(require('mathjs/lib/function/probability/factorial'));\n\nmodule.exports = function binom_test(actual_k, n, p) {\n  var fact = math.factorial;\n  var pval;\n\n  function binom_dist(k, n, p) {\n    var bin_coeff = fact(n) / (fact(k) * fact(n - k));\n    p = bin_coeff * (Math.pow(p, k) * Math.pow(1 - p, n - k));\n    return p;\n  }\n\n  function my_binom_test_2(actual_k, n, p) {\n    var cp = 0;\n    var k;\n    var dp;\n    for (var inst_k = actual_k; inst_k < n + 1; inst_k++) {\n      k = inst_k;\n      dp = binom_dist(k, n, p);\n      cp = cp + dp;\n    }\n\n    return cp;\n  }\n\n  // look up p-value from z-score using table\n  function binom_prop_table(actual_k, n, p) {\n    // expected average number of successes\n    var mu = n * p;\n\n    // standard deviation\n    var sigma = Math.sqrt(n * p * (1 - p));\n\n    // how many standard deviations is the actual_k away\n    // from the expected value\n    var z = (actual_k - mu) / sigma;\n\n    var z_vals = p_dict.z;\n    var p_vals = p_dict.p;\n\n    var found_index = -1;\n    var found = false;\n\n    for (var index = 0; index < z_vals.length; index++) {\n      var inst_z = z_vals[index];\n\n      // increasing inst_z until z is less than inst_z\n      if (z < inst_z && found === false) {\n        found_index = index;\n        found = true;\n      }\n    }\n\n    // give it the smallest p-val if the z-score was larger than\n    // any in the table\n    if (found_index === -1) {\n      found_index = z_vals.length - 1;\n    }\n    pval = p_vals[found_index];\n\n    return pval;\n  }\n\n  // calculate pval\n  pval = my_binom_test_2(actual_k, n, p);\n  if (isNaN(pval)) {\n    pval = binom_prop_table(actual_k, n, p);\n  }\n\n  return pval;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/binom_test.js","module.exports = {\n  p: [\n    0.5, 0.48006119416162751, 0.46017216272297101, 0.4403823076297575,\n    0.42074029056089696, 0.4012936743170763, 0.38208857781104733,\n    0.3631693488243809, 0.34457825838967582, 0.32635522028791997,\n    0.30853753872598688, 0.29115968678834636, 0.27425311775007355,\n    0.25784611080586473, 0.24196365222307303, 0.22662735237686821,\n    0.21185539858339669, 0.19766254312269238, 0.18406012534675947,\n    0.17105612630848183, 0.15865525393145707, 0.14685905637589591,\n    0.13566606094638267, 0.12507193563715024, 0.11506967022170828,\n    0.10564977366685535, 0.096800484585610358, 0.088507991437401956,\n    0.080756659233771066, 0.073529259609648304, 0.066807201268858071,\n    0.060570758002059008, 0.054799291699557974, 0.049471468033648075,\n    0.044565462758543006, 0.040059156863817086, 0.035930319112925789,\n    0.032156774795613713, 0.028716559816001783, 0.025588059521638611,\n    0.022750131948179195, 0.020182215405704383, 0.017864420562816542,\n    0.015777607391090499, 0.013903447513498595, 0.012224472655044696,\n    0.010724110021675795, 0.0093867055348385662, 0.0081975359245961138,\n    0.0071428107352714152, 0.0062096653257761323, 0.0053861459540666843,\n    0.0046611880237187467, 0.0040245885427583027, 0.0034669738030406647,\n    0.0029797632350545551, 0.002555130330427929, 0.0021859614549132405,\n    0.0018658133003840339, 0.0015888696473648667, 0.0013498980316300933,\n    0.0011442068310226977, 0.00096760321321835631, 0.00081635231282856037,\n    0.00068713793791584708, 0.00057702504239076592, 0.00048342414238377663,\n    0.0004040578018640207, 0.00033692926567687988, 0.00028029327681617744,\n    0.00023262907903552502, 0.00019261557563563279, 0.00015910859015753364,\n    0.00013112015442048433, 0.00010779973347738823, 8.8417285200803773e-5,\n    7.2348043925119787e-5, 5.9058912418922374e-5, 4.8096344017602614e-5,\n    3.9075596597787456e-5, 3.1671241833119863e-5, 2.5608816474041489e-5,\n    2.0657506912546683e-5, 1.6623763729652213e-5, 1.334574901590631e-5,\n    1.0688525774934402e-5, 8.5399054709917942e-6, 6.8068765993340312e-6,\n    5.4125439077038407e-6, 4.293514469971858e-6, 3.3976731247300535e-6,\n    2.6822957796388472e-6, 2.1124547025028419e-6, 1.6596751443714555e-6,\n    1.3008074539172771e-6, 1.0170832425687032e-6, 7.9332815197558919e-7,\n    6.1730737200919249e-7, 4.7918327659031855e-7, 3.7106740796333271e-7,\n    2.8665157187919333e-7, 2.2090503226954194e-7, 1.6982674071475937e-7,\n    1.3024322953320117e-7, 9.9644263169334701e-8, 7.6049605164887e-8,\n    5.7901340399645569e-8, 4.3977115940058689e-8, 3.3320448485428448e-8,\n    2.518491005446105e-8, 1.8989562465887681e-8, 1.4283479893922661e-8,\n    1.0717590258310852e-8, 8.0223918506634739e-9, 5.9903714010635304e-9,\n    4.4621724539016108e-9, 3.3157459783261365e-9, 2.4578650618080152e-9,\n    1.8175078630994235e-9, 1.3407124440918662e-9, 9.8658764503769458e-10,\n    7.2422917051376055e-10, 5.303423262948808e-10, 3.8741473466756636e-10,\n    2.8231580370432682e-10, 2.0522634252189396e-10, 1.4882282217622966e-10,\n    1.0765746385121517e-10, 7.7688475817097756e-11, 5.592507575942645e-11,\n    4.0160005838590881e-11, 2.8768541736043109e-11, 2.055788909399508e-11,\n    1.4654650977302715e-11, 1.0420976987965154e-11, 7.3922577780177942e-12,\n    5.2309575441445253e-12, 3.6924994272355614e-12, 2.600126965638173e-12,\n    1.8264310619769611e-12, 1.279812543885835e-12, 8.9458895587698439e-13,\n    6.23784446333152e-13, 4.3388950271780343e-13, 3.0106279811174218e-13,\n    2.0838581586720548e-13, 1.4388386381575764e-13, 9.9103427495475088e-14,\n    6.8092248906200155e-14, 4.6670115887190274e-14, 3.1908916729108844e-14,\n    2.1762912097085575e-14, 1.4806537490047908e-14, 1.0048965656526223e-14,\n    6.8033115407739012e-15, 4.5946274357785623e-15, 3.095358771958668e-15,\n    2.0801863521393674e-15, 1.394517146659261e-15, 9.3255757716812045e-16,\n    6.2209605742717405e-16, 4.1397018162731219e-16, 2.7479593923982212e-16,\n    1.8196213635266084e-16, 1.2019351542735647e-16, 7.9197263146424757e-17,\n    5.2055697448902465e-17, 3.4131483264581459e-17, 2.232393197288031e-17,\n    1.456514112590909e-17, 9.4795348222032499e-18, 6.1544255908503949e-18,\n    3.985804962848151e-18, 2.5749715380118873e-18, 1.6594208699647519e-18,\n    1.0667637375474856e-18, 6.840807685935497e-19, 4.3759647993090167e-19,\n    2.7923343749396233e-19, 1.7774117841455144e-19, 1.1285884059538324e-19,\n    7.1484170112696837e-20, 4.516591491435403e-20, 2.8466774084602088e-20,\n    1.7897488120140146e-20, 1.1224633591327901e-20, 7.0222842404415411e-21,\n    4.3823862990664603e-21, 2.7281535713460872e-21, 1.6941535024881097e-21,\n    1.0494515075362604e-21, 6.4848144530772079e-22, 3.9972212057261192e-22,\n    2.4577864834723153e-22, 1.5074931688101589e-22, 9.2234135249393526e-23,\n    5.6292823113765143e-23, 3.4271987941135974e-23, 2.0813752194932085e-23,\n    1.2609160670206559e-23\n  ],\n  z: [\n    0.0, 0.050000000000000003, 0.10000000000000001, 0.15000000000000002,\n    0.20000000000000001, 0.25, 0.30000000000000004, 0.35000000000000003,\n    0.40000000000000002, 0.45000000000000001, 0.5, 0.55000000000000004,\n    0.60000000000000009, 0.65000000000000002, 0.70000000000000007, 0.75,\n    0.80000000000000004, 0.85000000000000009, 0.90000000000000002,\n    0.95000000000000007, 1.0, 1.05, 1.1000000000000001, 1.1500000000000001,\n    1.2000000000000002, 1.25, 1.3, 1.3500000000000001, 1.4000000000000001,\n    1.4500000000000002, 1.5, 1.55, 1.6000000000000001, 1.6500000000000001,\n    1.7000000000000002, 1.75, 1.8, 1.8500000000000001, 1.9000000000000001,\n    1.9500000000000002, 2.0, 2.0500000000000003, 2.1000000000000001,\n    2.1499999999999999, 2.2000000000000002, 2.25, 2.3000000000000003,\n    2.3500000000000001, 2.4000000000000004, 2.4500000000000002, 2.5,\n    2.5500000000000003, 2.6000000000000001, 2.6500000000000004,\n    2.7000000000000002, 2.75, 2.8000000000000003, 2.8500000000000001,\n    2.9000000000000004, 2.9500000000000002, 3.0, 3.0500000000000003,\n    3.1000000000000001, 3.1500000000000004, 3.2000000000000002, 3.25,\n    3.3000000000000003, 3.3500000000000001, 3.4000000000000004,\n    3.4500000000000002, 3.5, 3.5500000000000003, 3.6000000000000001,\n    3.6500000000000004, 3.7000000000000002, 3.75, 3.8000000000000003,\n    3.8500000000000001, 3.9000000000000004, 3.9500000000000002, 4.0,\n    4.0499999999999998, 4.1000000000000005, 4.1500000000000004,\n    4.2000000000000002, 4.25, 4.2999999999999998, 4.3500000000000005,\n    4.4000000000000004, 4.4500000000000002, 4.5, 4.5499999999999998,\n    4.6000000000000005, 4.6500000000000004, 4.7000000000000002, 4.75,\n    4.8000000000000007, 4.8500000000000005, 4.9000000000000004,\n    4.9500000000000002, 5.0, 5.0500000000000007, 5.1000000000000005,\n    5.1500000000000004, 5.2000000000000002, 5.25, 5.3000000000000007,\n    5.3500000000000005, 5.4000000000000004, 5.4500000000000002, 5.5,\n    5.5500000000000007, 5.6000000000000005, 5.6500000000000004,\n    5.7000000000000002, 5.75, 5.8000000000000007, 5.8500000000000005,\n    5.9000000000000004, 5.9500000000000002, 6.0, 6.0500000000000007,\n    6.1000000000000005, 6.1500000000000004, 6.2000000000000002, 6.25,\n    6.3000000000000007, 6.3500000000000005, 6.4000000000000004,\n    6.4500000000000002, 6.5, 6.5500000000000007, 6.6000000000000005,\n    6.6500000000000004, 6.7000000000000002, 6.75, 6.8000000000000007,\n    6.8500000000000005, 6.9000000000000004, 6.9500000000000002, 7.0,\n    7.0500000000000007, 7.1000000000000005, 7.1500000000000004,\n    7.2000000000000002, 7.25, 7.3000000000000007, 7.3500000000000005,\n    7.4000000000000004, 7.4500000000000002, 7.5, 7.5500000000000007,\n    7.6000000000000005, 7.6500000000000004, 7.7000000000000002, 7.75,\n    7.8000000000000007, 7.8500000000000005, 7.9000000000000004,\n    7.9500000000000002, 8.0, 8.0500000000000007, 8.0999999999999996,\n    8.1500000000000004, 8.2000000000000011, 8.25, 8.3000000000000007,\n    8.3499999999999996, 8.4000000000000004, 8.4500000000000011, 8.5,\n    8.5500000000000007, 8.5999999999999996, 8.6500000000000004,\n    8.7000000000000011, 8.75, 8.8000000000000007, 8.8499999999999996,\n    8.9000000000000004, 8.9500000000000011, 9.0, 9.0500000000000007,\n    9.0999999999999996, 9.1500000000000004, 9.2000000000000011, 9.25,\n    9.3000000000000007, 9.3499999999999996, 9.4000000000000004,\n    9.4500000000000011, 9.5, 9.5500000000000007, 9.6000000000000014,\n    9.6500000000000004, 9.7000000000000011, 9.75, 9.8000000000000007,\n    9.8500000000000014, 9.9000000000000004, 9.9500000000000011\n  ]\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/binom_prop_pval_lookup.js","'use strict';\n\nvar deepMap = require('../../utils/collection/deepMap');\n\nfunction factory (type, config, load, typed) {\n  var gamma = load(require('./gamma'));\n  var latex = require('../../utils/latex');\n\n  /**\n   * Compute the factorial of a value\n   *\n   * Factorial only supports an integer value as argument.\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.factorial(n)\n   *\n   * Examples:\n   *\n   *    math.factorial(5);    // returns 120\n   *    math.factorial(3);    // returns 6\n   *\n   * See also:\n   *\n   *    combinations, gamma, permutations\n   *\n   * @param {number | BigNumber | Array | Matrix} n   An integer number\n   * @return {number | BigNumber | Array | Matrix}    The factorial of `n`\n   */\n  var factorial = typed('factorial', {\n    'number': function (n) {\n      if (n < 0) {\n        throw new Error('Value must be non-negative');\n      }\n\n      return gamma(n + 1);\n    },\n\n    'BigNumber': function (n) {\n      if (n.isNegative()) {\n        throw new Error('Value must be non-negative');\n      }\n\n      return gamma(n.plus(1));\n    },\n\n    'Array | Matrix': function (n) {\n      return deepMap(n, factorial);\n    }\n  });\n\n  factorial.toTex = {\n    1: '\\\\left(${args[0]}\\\\right)' + latex.operators['factorial']\n  };\n\n  return factorial;\n}\n\nexports.name = 'factorial';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/probability/factorial.js","'use strict';\n\n/**\n * Execute the callback function element wise for each element in array and any\n * nested array\n * Returns an array with the results\n * @param {Array | Matrix} array\n * @param {Function} callback   The callback is called with two parameters:\n *                              value1 and value2, which contain the current\n *                              element of both arrays.\n * @param {boolean} [skipZeros] Invoke callback function for non-zero values only.\n *\n * @return {Array | Matrix} res\n */\nmodule.exports = function deepMap(array, callback, skipZeros) {\n  if (array && (typeof array.map === 'function')) {\n    // TODO: replace array.map with a for loop to improve performance\n    return array.map(function (x) {\n      return deepMap(x, callback, skipZeros);\n    });\n  }\n  else {\n    return callback(array);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/utils/collection/deepMap.js","'use strict';\n\nvar deepMap = require('../../utils/collection/deepMap');\nvar isInteger = require('../../utils/number').isInteger;\n\nfunction factory (type, config, load, typed) {\n  var multiply = load(require('../arithmetic/multiply'));\n  var pow = load(require('../arithmetic/pow'));\n\n  /**\n   * Compute the gamma function of a value using Lanczos approximation for\n   * small values, and an extended Stirling approximation for large values.\n   *\n   * For matrices, the function is evaluated element wise.\n   *\n   * Syntax:\n   *\n   *    math.gamma(n)\n   *\n   * Examples:\n   *\n   *    math.gamma(5);       // returns 24\n   *    math.gamma(-0.5);    // returns -3.5449077018110335\n   *    math.gamma(math.i);  // returns -0.15494982830180973 - 0.49801566811835596i\n   *\n   * See also:\n   *\n   *    combinations, factorial, permutations\n   *\n   * @param {number | Array | Matrix} n   A real or complex number\n   * @return {number | Array | Matrix}    The gamma of `n`\n   */\n  var gamma = typed('gamma', {\n    'number': function (n) {\n      var t, x;\n\n      if (isInteger(n)) {\n        if (n <= 0) {\n          return isFinite(n) ? Infinity : NaN;\n        }\n\n        if (n > 171) {\n          return Infinity;                  // Will overflow\n        }\n\n        var value = n - 2;\n        var res = n - 1;\n        while (value > 1) {\n          res *= value;\n          value--;\n        }\n\n        if (res == 0) {\n          res = 1;                          // 0! is per definition 1\n        }\n\n        return res;\n      }\n\n      if (n < 0.5) {\n        return Math.PI / (Math.sin(Math.PI * n) * gamma(1-n));\n      }\n\n      if (n >= 171.35) {\n        return Infinity;                    // will overflow\n      }\n\n      if (n > 85.0) {                       // Extended Stirling Approx\n        var twoN = n*n;\n        var threeN = twoN*n;\n        var fourN = threeN*n;\n        var fiveN = fourN*n;\n        return Math.sqrt(2*Math.PI/n) * Math.pow((n/Math.E), n) *\n            (1 + 1/(12*n) + 1/(288*twoN) - 139/(51840*threeN) -\n            571/(2488320*fourN) + 163879/(209018880*fiveN) +\n            5246819/(75246796800*fiveN*n));\n      }\n\n      --n;\n      x = p[0];\n      for (var i = 1; i < p.length; ++i) {\n        x += p[i] / (n+i);\n      }\n\n      t = n + g + 0.5;\n      return Math.sqrt(2*Math.PI) * Math.pow(t, n+0.5) * Math.exp(-t) * x;\n    },\n\n    'Complex': function (n) {\n      var t, x;\n\n      if (n.im == 0) {\n        return gamma(n.re);\n      }\n\n      n = new type.Complex(n.re - 1, n.im);\n      x = new type.Complex(p[0], 0);\n      for (var i = 1; i < p.length; ++i) {\n        var real = n.re + i;                // x += p[i]/(n+i)\n        var den = real*real + n.im*n.im;\n        if (den != 0) {\n          x.re += p[i] * real / den;\n          x.im += -(p[i] * n.im) / den;\n        } else {\n          x.re = p[i] < 0\n              ? -Infinity\n              :  Infinity;\n        }\n      }\n\n      t = new type.Complex(n.re + g + 0.5, n.im);\n      var twoPiSqrt = Math.sqrt(2*Math.PI);\n\n      n.re += 0.5;\n      var result = pow(t, n);\n      if (result.im == 0) {                 // sqrt(2*PI)*result\n        result.re *= twoPiSqrt;\n      } else if (result.re == 0) {\n        result.im *= twoPiSqrt;\n      } else {\n        result.re *= twoPiSqrt;\n        result.im *= twoPiSqrt;\n      }\n\n      var r = Math.exp(-t.re);              // exp(-t)\n      t.re = r * Math.cos(-t.im);\n      t.im = r * Math.sin(-t.im);\n\n      return multiply(multiply(result, t), x);\n    },\n\n    'BigNumber': function (n) {\n      if (n.isInteger()) {\n        return (n.isNegative() || n.isZero())\n            ? new type.BigNumber(Infinity)\n            : bigFactorial(n.minus(1));\n      }\n\n      if (!n.isFinite()) {\n        return new type.BigNumber(n.isNegative() ? NaN : Infinity);\n      }\n\n      throw new Error('Integer BigNumber expected');\n    },\n\n    'Array | Matrix': function (n) {\n      return deepMap(n, gamma);\n    }\n  });\n\n  /**\n   * Calculate factorial for a BigNumber\n   * @param {BigNumber} n\n   * @returns {BigNumber} Returns the factorial of n\n   */\n  function bigFactorial(n) {\n    if (n.isZero()) {\n      return new type.BigNumber(1); // 0! is per definition 1\n    }\n\n    var precision = config.precision + (Math.log(n.toNumber()) | 0);\n    var Big = type.BigNumber.clone({precision: precision});\n\n    var res = new Big(n);\n    var value = n.toNumber() - 1; // number\n    while (value > 1) {\n      res = res.times(value);\n      value--;\n    }\n\n    return new type.BigNumber(res.toPrecision(type.BigNumber.precision));\n  }\n\n  gamma.toTex = {1: '\\\\Gamma\\\\left(${args[0]}\\\\right)'};\n\n  return gamma;\n}\n\n// TODO: comment on the variables g and p\n\nvar g = 4.7421875;\n\nvar p = [\n  0.99999999999999709182,\n  57.156235665862923517,\n  -59.597960355475491248,\n  14.136097974741747174,\n  -0.49191381609762019978,\n  0.33994649984811888699e-4,\n  0.46523628927048575665e-4,\n  -0.98374475304879564677e-4,\n  0.15808870322491248884e-3,\n  -0.21026444172410488319e-3,\n  0.21743961811521264320e-3,\n  -0.16431810653676389022e-3,\n  0.84418223983852743293e-4,\n  -0.26190838401581408670e-4,\n  0.36899182659531622704e-5\n];\n\nexports.name = 'gamma';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/probability/gamma.js","'use strict';\n\nvar extend = require('../../utils/object').extend;\nvar array = require('../../utils/array');\n\nfunction factory (type, config, load, typed) {\n  var latex = require('../../utils/latex');\n\n  var matrix = load(require('../../type/matrix/function/matrix'));\n  var addScalar = load(require('./addScalar'));\n  var multiplyScalar = load(require('./multiplyScalar'));\n  var equalScalar = load(require('../relational/equalScalar'));\n\n  var algorithm11 = load(require('../../type/matrix/utils/algorithm11'));\n  var algorithm14 = load(require('../../type/matrix/utils/algorithm14'));\n  \n  var DenseMatrix = type.DenseMatrix;\n  var SparseMatrix = type.SparseMatrix;\n\n  /**\n   * Multiply two or more values, `x * y`.\n   * For matrices, the matrix product is calculated.\n   *\n   * Syntax:\n   *\n   *    math.multiply(x, y)\n   *    math.multiply(x, y, z, ...)\n   *\n   * Examples:\n   *\n   *    math.multiply(4, 5.2);        // returns number 20.8\n   *    math.multiply(2, 3, 4);       // returns number 24\n   *\n   *    var a = math.complex(2, 3);\n   *    var b = math.complex(4, 1);\n   *    math.multiply(a, b);          // returns Complex 5 + 14i\n   *\n   *    var c = [[1, 2], [4, 3]];\n   *    var d = [[1, 2, 3], [3, -4, 7]];\n   *    math.multiply(c, d);          // returns Array [[7, -6, 17], [13, -4, 33]]\n   *\n   *    var e = math.unit('2.1 km');\n   *    math.multiply(3, e);          // returns Unit 6.3 km\n   *\n   * See also:\n   *\n   *    divide, prod, cross, dot\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} x First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} y Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit | Array | Matrix} Multiplication of `x` and `y`\n   */\n  var multiply = typed('multiply', extend({\n    // we extend the signatures of multiplyScalar with signatures dealing with matrices\n\n    'Array, Array': function (x, y) {\n      // check dimensions\n      _validateMatrixDimensions(array.size(x), array.size(y));\n\n      // use dense matrix implementation\n      var m = multiply(matrix(x), matrix(y));\n      // return array or scalar\n      return type.isMatrix(m) ? m.valueOf() : m;\n    },\n\n    'Matrix, Matrix': function (x, y) {\n      // dimensions\n      var xsize = x.size();\n      var ysize = y.size();\n\n      // check dimensions\n      _validateMatrixDimensions(xsize, ysize);\n\n      // process dimensions\n      if (xsize.length === 1) {\n        // process y dimensions\n        if (ysize.length === 1) {\n          // Vector * Vector\n          return _multiplyVectorVector(x, y, xsize[0]);\n        }\n        // Vector * Matrix\n        return _multiplyVectorMatrix(x, y);\n      }\n      // process y dimensions\n      if (ysize.length === 1) {\n        // Matrix * Vector\n        return _multiplyMatrixVector(x, y);\n      }\n      // Matrix * Matrix\n      return _multiplyMatrixMatrix(x, y);\n    },\n\n    'Matrix, Array': function (x, y) {\n      // use Matrix * Matrix implementation\n      return multiply(x, matrix(y));\n    },\n\n    'Array, Matrix': function (x, y) {\n      // use Matrix * Matrix implementation\n      return multiply(matrix(x, y.storage()), y);\n    },\n\n    'Matrix, any': function (x, y) {\n      // result\n      var c;\n      \n      // process storage format\n      switch (x.storage()) {\n        case 'sparse':\n          c = algorithm11(x, y, multiplyScalar, false);\n          break;\n        case 'dense':\n          c = algorithm14(x, y, multiplyScalar, false);\n          break;\n      }\n      return c;\n    },\n\n    'any, Matrix': function (x, y) {\n      // result\n      var c;\n      // check storage format\n      switch (y.storage()) {\n        case 'sparse':\n          c = algorithm11(y, x, multiplyScalar, true);\n          break;\n        case 'dense':\n          c = algorithm14(y, x, multiplyScalar, true);\n          break;\n      }\n      return c;\n    },\n\n    'Array, any': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(x), y, multiplyScalar, false).valueOf();\n    },\n\n    'any, Array': function (x, y) {\n      // use matrix implementation\n      return algorithm14(matrix(y), x, multiplyScalar, true).valueOf();\n    },\n\n    'any, any': multiplyScalar,\n\n    'Array | Matrix | any, Array | Matrix | any, ...any': function (x, y, rest) {\n      var result = multiply(x, y);\n\n      for (var i = 0; i < rest.length; i++) {\n        result = multiply(result, rest[i]);\n      }\n      \n      return result;\n    }\n  }, multiplyScalar.signatures));\n\n  var _validateMatrixDimensions = function (size1, size2) {\n    // check left operand dimensions\n    switch (size1.length) {\n      case 1:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Vector x Vector\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vectors must have the same length');\n            }\n            break;\n          case 2:\n            // Vector x Matrix\n            if (size1[0] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Vector length (' + size1[0] + ') must match Matrix rows (' + size2[0] + ')');\n            }\n            break;\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n        break;\n      case 2:\n        // check size2\n        switch (size2.length) {\n          case 1:\n            // Matrix x Vector\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix columns (' + size1[1] + ') must match Vector length (' + size2[0] + ')');\n            }\n            break;\n          case 2:\n            // Matrix x Matrix\n            if (size1[1] !== size2[0]) {\n              // throw error\n              throw new RangeError('Dimension mismatch in multiplication. Matrix A columns (' + size1[1] + ') must match Matrix B rows (' + size2[0] + ')');\n            }\n            break;\n          default:\n            throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix B has ' + size2.length + ' dimensions)');\n        }\n        break;\n      default:\n        throw new Error('Can only multiply a 1 or 2 dimensional matrix (Matrix A has ' + size1.length + ' dimensions)');\n    }\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (N)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {number}             Scalar value\n   */\n  var _multiplyVectorVector = function (a, b, n) {\n    // check empty vector\n    if (n === 0)\n      throw new Error('Cannot multiply two empty vectors');\n\n    // a dense\n    var adata = a._data;\n    var adt = a._datatype;\n    // b dense\n    var bdata = b._data;\n    var bdt = b._datatype;\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n    \n    // result (do not initialize it with zero)\n    var c = mf(adata[0], bdata[0]);\n    // loop data\n    for (var i = 1; i < n; i++) {\n      // multiply and accumulate\n      c = af(c, mf(adata[i], bdata[i]));\n    }\n    return c;\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Matrix         (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n  var _multiplyVectorMatrix = function (a, b) {\n    // process storage\n    switch (b.storage()) {\n      case 'dense':\n        return _multiplyVectorDenseMatrix(a, b);\n    }\n    throw new Error('Not implemented');\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Dense Vector   (M)\n   * @param {Matrix} b            Dense Matrix   (MxN)\n   *\n   * @return {Matrix}             Dense Vector   (N)\n   */\n  var _multiplyVectorDenseMatrix = function (a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    // b dense\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype;\n    // rows & columns\n    var alength = asize[0];\n    var bcolumns = bsize[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n\n    // result\n    var c = [];\n\n    // loop matrix columns\n    for (var j = 0; j < bcolumns; j++) {\n      // sum (do not initialize it with zero)\n      var sum = mf(adata[0], bdata[0][j]);      \n      // loop vector\n      for (var i = 1; i < alength; i++) {\n        // multiply & accumulate\n        sum = af(sum, mf(adata[i], bdata[i][j]));\n      }\n      c[j] = sum;\n    }\n\n    // return matrix\n    return new DenseMatrix({\n      data: c,\n      size: [bcolumns],\n      datatype: dt\n    });\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Dense Vector   (N)\n   *\n   * @return {Matrix}             Dense Vector   (M)\n   */\n  var _multiplyMatrixVector = function (a, b) {\n    // process storage\n    switch (a.storage()) {\n      case 'dense':\n        return _multiplyDenseMatrixVector(a, b);\n      case 'sparse':\n        return _multiplySparseMatrixVector(a, b);\n    }\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            Matrix         (MxN)\n   * @param {Matrix} b            Matrix         (NxC)\n   *\n   * @return {Matrix}             Matrix         (MxC)\n   */\n  var _multiplyMatrixMatrix = function (a, b) {\n    // process storage\n    switch (a.storage()) {\n      case 'dense':\n        // process storage\n        switch (b.storage()) {\n          case 'dense':\n            return _multiplyDenseMatrixDenseMatrix(a, b);\n          case 'sparse':\n            return _multiplyDenseMatrixSparseMatrix(a, b);\n        }\n        break;\n      case 'sparse':\n        // process storage\n        switch (b.storage()) {\n          case 'dense':\n            return _multiplySparseMatrixDenseMatrix(a, b);\n          case 'sparse':\n            return _multiplySparseMatrixSparseMatrix(a, b);\n        }\n        break;\n    }\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix  (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             Dense Vector (M) \n   */ \n  var _multiplyDenseMatrixVector = function (a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    // b dense\n    var bdata = b._data;\n    var bdt = b._datatype;\n    // rows & columns\n    var arows = asize[0];\n    var acolumns = asize[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n\n    // result\n    var c = [];\n\n    // loop matrix a rows\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i];\n      // sum (do not initialize it with zero)\n      var sum = mf(row[0], bdata[0]);\n      // loop matrix a columns\n      for (var j = 1; j < acolumns; j++) {\n        // multiply & accumulate\n        sum = af(sum, mf(row[j], bdata[j]));\n      }\n      c[i] = sum;\n    }\n\n    // return matrix\n    return new DenseMatrix({\n      data: c,\n      size: [arows],\n      datatype: dt\n    });\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            DenseMatrix    (NxC)\n   *\n   * @return {Matrix}             DenseMatrix    (MxC)\n   */\n  var _multiplyDenseMatrixDenseMatrix = function (a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    // b dense\n    var bdata = b._data;\n    var bsize = b._size;\n    var bdt = b._datatype;\n    // rows & columns\n    var arows = asize[0];\n    var acolumns = asize[1];\n    var bcolumns = bsize[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n    \n    // result\n    var c = [];\n\n    // loop matrix a rows\n    for (var i = 0; i < arows; i++) {\n      // current row\n      var row = adata[i];\n      // initialize row array\n      c[i] = [];\n      // loop matrix b columns\n      for (var j = 0; j < bcolumns; j++) {\n        // sum (avoid initializing sum to zero)\n        var sum = mf(row[0], bdata[0][j]);\n        // loop matrix a columns\n        for (var x = 1; x < acolumns; x++) {\n          // multiply & accumulate\n          sum = af(sum, mf(row[x], bdata[x][j]));\n        }\n        c[i][j] = sum;\n      }\n    }\n\n    // return matrix\n    return new DenseMatrix({\n      data: c,\n      size: [arows, bcolumns],\n      datatype: dt\n    });\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            DenseMatrix    (MxN)\n   * @param {Matrix} b            SparseMatrix   (NxC)\n   *\n   * @return {Matrix}             SparseMatrix   (MxC)\n   */\n  var _multiplyDenseMatrixSparseMatrix = function (a, b) {\n    // a dense\n    var adata = a._data;\n    var asize = a._size;\n    var adt = a._datatype;\n    // b sparse\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bsize = b._size;\n    var bdt = b._datatype;\n    // validate b matrix\n    if (!bvalues)\n      throw new Error('Cannot multiply Dense Matrix times Pattern only Matrix');\n    // rows & columns\n    var arows = asize[0];\n    var bcolumns = bsize[1];\n    \n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n    // equalScalar signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n    }\n\n    // result\n    var cvalues = [];\n    var cindex = [];\n    var cptr = [];\n    // c matrix\n    var c = new SparseMatrix({\n      values : cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    });\n\n    // loop b columns\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length;\n      // indeces in column jb\n      var kb0 = bptr[jb];\n      var kb1 = bptr[jb + 1];\n      // do not process column jb if no data exists\n      if (kb1 > kb0) {\n        // last row mark processed\n        var last = 0;\n        // loop a rows\n        for (var i = 0; i < arows; i++) {\n          // column mark\n          var mark = i + 1;\n          // C[i, jb]\n          var cij;\n          // values in b column j\n          for (var kb = kb0; kb < kb1; kb++) {\n            // row\n            var ib = bindex[kb];\n            // check value has been initialized\n            if (last !== mark) {\n              // first value in column jb\n              cij = mf(adata[i][ib], bvalues[kb]);\n              // update mark\n              last = mark;\n            }\n            else {\n              // accumulate value\n              cij = af(cij, mf(adata[i][ib], bvalues[kb]));\n            }\n          }\n          // check column has been processed and value != 0\n          if (last === mark && !eq(cij, zero)) {\n            // push row & value\n            cindex.push(i);\n            cvalues.push(cij);\n          }\n        }\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix    (MxN)\n   * @param {Matrix} b            Dense Vector (N)\n   *\n   * @return {Matrix}             SparseMatrix    (M, 1) \n   */\n  var _multiplySparseMatrixVector = function (a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype;\n    // validate a matrix\n    if (!avalues)\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    // b dense\n    var bdata = b._data;\n    var bdt = b._datatype;\n    // rows & columns\n    var arows = a._size[0];\n    var brows = b._size[0];\n    // result\n    var cvalues = [];\n    var cindex = [];\n    var cptr = [];\n    \n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n    // equalScalar signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n    }\n\n    // workspace\n    var x = [];\n    // vector with marks indicating a value x[i] exists in a given column\n    var w = [];\n\n    // update ptr\n    cptr[0] = 0;\n    // rows in b\n    for (var ib = 0; ib < brows; ib++) {\n      // b[ib]\n      var vbi = bdata[ib];\n      // check b[ib] != 0, avoid loops\n      if (!eq(vbi, zero)) {\n        // A values & index in ib column\n        for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n          // a row\n          var ia = aindex[ka];\n          // check value exists in current j\n          if (!w[ia]) {\n            // ia is new entry in j\n            w[ia] = true;\n            // add i to pattern of C\n            cindex.push(ia);\n            // x(ia) = A\n            x[ia] = mf(vbi, avalues[ka]);\n          }\n          else {\n            // i exists in C already\n            x[ia] = af(x[ia], mf(vbi, avalues[ka]));\n          }\n        }\n      }\n    }\n    // copy values from x to column jb of c\n    for (var p1 = cindex.length, p = 0; p < p1; p++) {\n      // row\n      var ic = cindex[p];\n      // copy value\n      cvalues[p] = x[ic];\n    }\n    // update ptr\n    cptr[1] = cindex.length;\n\n    // return sparse matrix\n    return new SparseMatrix({\n      values : cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, 1],\n      datatype: dt\n    });\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            DenseMatrix       (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n  var _multiplySparseMatrixDenseMatrix = function (a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype;\n    // validate a matrix\n    if (!avalues)\n      throw new Error('Cannot multiply Pattern only Matrix times Dense Matrix');\n    // b dense\n    var bdata = b._data;\n    var bdt = b._datatype;\n    // rows & columns\n    var arows = a._size[0];\n    var brows = b._size[0];\n    var bcolumns = b._size[1];\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n    // equalScalar signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n    }\n\n    // result\n    var cvalues = [];\n    var cindex = [];\n    var cptr = [];\n    // c matrix\n    var c = new SparseMatrix({\n      values : cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    });\n\n    // workspace\n    var x = [];\n    // vector with marks indicating a value x[i] exists in a given column\n    var w = [];\n\n    // loop b columns\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length;\n      // mark in workspace for current column\n      var mark = jb + 1;\n      // rows in jb\n      for (var ib = 0; ib < brows; ib++) {\n        // b[ib, jb]\n        var vbij = bdata[ib][jb];\n        // check b[ib, jb] != 0, avoid loops\n        if (!eq(vbij, zero)) {\n          // A values & index in ib column\n          for (var ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // a row\n            var ia = aindex[ka];\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark;\n              // add i to pattern of C\n              cindex.push(ia);\n              // x(ia) = A\n              x[ia] = mf(vbij, avalues[ka]);\n            }\n            else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(vbij, avalues[ka]));\n            }\n          }\n        }\n      }\n      // copy values from x to column jb of c\n      for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n        // row\n        var ic = cindex[p];\n        // copy value\n        cvalues[p] = x[ic];\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  };\n\n  /**\n   * C = A * B\n   *\n   * @param {Matrix} a            SparseMatrix      (MxN)\n   * @param {Matrix} b            SparseMatrix      (NxC)\n   *\n   * @return {Matrix}             SparseMatrix      (MxC)\n   */\n  var _multiplySparseMatrixSparseMatrix = function (a, b) {\n    // a sparse\n    var avalues = a._values;\n    var aindex = a._index;\n    var aptr = a._ptr;\n    var adt = a._datatype;\n    // b sparse\n    var bvalues = b._values;\n    var bindex = b._index;\n    var bptr = b._ptr;\n    var bdt = b._datatype;\n    \n    // rows & columns\n    var arows = a._size[0];\n    var bcolumns = b._size[1];\n    // flag indicating both matrices (a & b) contain data\n    var values = avalues && bvalues;\n\n    // datatype\n    var dt;\n    // addScalar signature to use\n    var af = addScalar;\n    // multiplyScalar signature to use\n    var mf = multiplyScalar;\n\n    // process data types\n    if (adt && bdt && adt === bdt && typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signatures that matches (dt, dt)\n      af = typed.find(addScalar, [dt, dt]);\n      mf = typed.find(multiplyScalar, [dt, dt]);\n    }\n    \n    // result\n    var cvalues = values ? [] : undefined;\n    var cindex = [];\n    var cptr = [];\n    // c matrix\n    var c = new SparseMatrix({\n      values : cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [arows, bcolumns],\n      datatype: dt\n    });\n\n    // workspace\n    var x = values ? [] : undefined;\n    // vector with marks indicating a value x[i] exists in a given column\n    var w = [];\n    // variables\n    var ka, ka0, ka1, kb, kb0, kb1, ia, ib;\n    // loop b columns\n    for (var jb = 0; jb < bcolumns; jb++) {\n      // update ptr\n      cptr[jb] = cindex.length;\n      // mark in workspace for current column\n      var mark = jb + 1;\n      // B values & index in j\n      for (kb0 = bptr[jb], kb1 = bptr[jb + 1], kb = kb0; kb < kb1; kb++) {\n        // b row\n        ib = bindex[kb];\n        // check we need to process values\n        if (values) {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka];\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark;\n              // add i to pattern of C\n              cindex.push(ia);\n              // x(ia) = A\n              x[ia] = mf(bvalues[kb], avalues[ka]);\n            }\n            else {\n              // i exists in C already\n              x[ia] = af(x[ia], mf(bvalues[kb], avalues[ka]));\n            }\n          }\n        }\n        else {\n          // loop values in a[:,ib]\n          for (ka0 = aptr[ib], ka1 = aptr[ib + 1], ka = ka0; ka < ka1; ka++) {\n            // row\n            ia = aindex[ka];\n            // check value exists in current j\n            if (w[ia] !== mark) {\n              // ia is new entry in j\n              w[ia] = mark;\n              // add i to pattern of C\n              cindex.push(ia);\n            }\n          }\n        }\n      }\n      // check we need to process matrix values (pattern matrix)\n      if (values) {\n        // copy values from x to column jb of c\n        for (var p0 = cptr[jb], p1 = cindex.length, p = p0; p < p1; p++) {\n          // row\n          var ic = cindex[p];\n          // copy value\n          cvalues[p] = x[ic];\n        }\n      }\n    }\n    // update ptr\n    cptr[bcolumns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  };\n\n  multiply.toTex = {\n    2: '\\\\left(${args[0]}' + latex.operators['multiply'] + '${args[1]}\\\\right)'\n  };\n\n  return multiply;\n}\n\nexports.name = 'multiply';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/arithmetic/multiply.js","'use strict';\n\nfunction factory(type, config, load, typed) {\n  \n  /**\n   * Multiply two scalar values, `x * y`.\n   * This function is meant for internal use: it is used by the public function\n   * `multiply`\n   *\n   * This function does not support collections (Array or Matrix), and does\n   * not validate the number of of inputs.\n   *\n   * @param  {number | BigNumber | Fraction | Complex | Unit} x   First value to multiply\n   * @param  {number | BigNumber | Fraction | Complex} y          Second value to multiply\n   * @return {number | BigNumber | Fraction | Complex | Unit}                      Multiplication of `x` and `y`\n   * @private\n   */\n  var multiplyScalar = typed('multiplyScalar', {\n\n    'number, number': function (x, y) {\n      return x * y;\n    },\n\n    'Complex, Complex': function (x, y) {\n      return x.mul(y);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      return x.times(y);\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      return x.mul(y);\n    },\n\n    'number | Fraction | BigNumber | Complex, Unit': function (x, y) {\n      var res = y.clone();\n      res.value = (res.value === null) ? res._normalize(x) : multiplyScalar(res.value, x);\n      return res;\n    },\n\n    'Unit, number | Fraction | BigNumber | Complex': function (x, y) {\n      var res = x.clone();\n      res.value = (res.value === null) ? res._normalize(y) : multiplyScalar(res.value, y);\n      return res;\n    },\n\n    'Unit, Unit': function (x, y) {\n      return x.multiply(y);\n    }\n\n  });\n\n  return multiplyScalar;\n}\n\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/arithmetic/multiplyScalar.js","'use strict';\n\nfunction factory (type, config, load, typed) {\n\n  var equalScalar = load(require('../../../function/relational/equalScalar'));\n\n  var SparseMatrix = type.SparseMatrix;\n\n  /**\n   * Iterates over SparseMatrix S nonzero items and invokes the callback function f(Sij, b). \n   * Callback function invoked NZ times (number of nonzero items in S).\n   *\n   *\n   *          ┌  f(Sij, b)  ; S(i,j) !== 0\n   * C(i,j) = ┤  \n   *          └  0          ; otherwise\n   *\n   *\n   * @param {Matrix}   s                 The SparseMatrix instance (S)\n   * @param {Scalar}   b                 The Scalar value\n   * @param {Function} callback          The f(Aij,b) operation to invoke\n   * @param {boolean}  inverse           A true value indicates callback should be invoked f(b,Sij)\n   *\n   * @return {Matrix}                    SparseMatrix (C)\n   *\n   * https://github.com/josdejong/mathjs/pull/346#issuecomment-97626813\n   */\n  var algorithm11 = function (s, b, callback, inverse) {\n    // sparse matrix arrays\n    var avalues = s._values;\n    var aindex = s._index;\n    var aptr = s._ptr;\n    var asize = s._size;\n    var adt = s._datatype;\n\n    // sparse matrix cannot be a Pattern matrix\n    if (!avalues)\n      throw new Error('Cannot perform operation on Pattern Sparse Matrix and Scalar value');\n\n    // rows & columns\n    var rows = asize[0];\n    var columns = asize[1];\n\n    // datatype\n    var dt;\n    // equal signature to use\n    var eq = equalScalar;\n    // zero value\n    var zero = 0;\n    // callback signature to use\n    var cf = callback;\n\n    // process data types\n    if (typeof adt === 'string') {\n      // datatype\n      dt = adt;\n      // find signature that matches (dt, dt)\n      eq = typed.find(equalScalar, [dt, dt]);\n      // convert 0 to the same datatype\n      zero = typed.convert(0, dt);\n      // convert b to the same datatype\n      b = typed.convert(b, dt);\n      // callback\n      cf = typed.find(callback, [dt, dt]);\n    }\n\n    // result arrays\n    var cvalues = [];\n    var cindex = [];\n    var cptr = [];\n    // matrix\n    var c = new SparseMatrix({\n      values: cvalues,\n      index: cindex,\n      ptr: cptr,\n      size: [rows, columns],\n      datatype: dt\n    });\n\n    // loop columns\n    for (var j = 0; j < columns; j++) {\n      // initialize ptr\n      cptr[j] = cindex.length;\n      // values in j\n      for (var k0 = aptr[j], k1 = aptr[j + 1], k = k0; k < k1; k++) {\n        // row\n        var i = aindex[k];\n        // invoke callback\n        var v = inverse ? cf(b, avalues[k]) : cf(avalues[k], b);\n        // check value is zero\n        if (!eq(v, zero)) {\n          // push index & value\n          cindex.push(i);\n          cvalues.push(v);\n        }\n      }\n    }\n    // update ptr\n    cptr[columns] = cindex.length;\n\n    // return sparse matrix\n    return c;\n  };\n\n  return algorithm11;\n}\n\nexports.name = 'algorithm11';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/matrix/utils/algorithm11.js","'use strict';\n\nvar isInteger = require('../../utils/number').isInteger;\nvar size = require('../../utils/array').size;\n\nfunction factory (type, config, load, typed) {\n  var latex = require('../../utils/latex');\n  var eye = load(require('../matrix/eye'));\n  var multiply = load(require('./multiply'));\n  var matrix = load(require('../../type/matrix/function/matrix'));\n  var fraction = load(require('../../type/fraction/function/fraction'));\n  var number = load(require('../../type/number'));\n\n  /**\n   * Calculates the power of x to y, `x ^ y`.\n   * Matrix exponentiation is supported for square matrices `x`, and positive\n   * integer exponents `y`.\n   *\n   * For cubic roots of negative numbers, the function returns the principal\n   * root by default. In order to let the function return the real root,\n   * math.js can be configured with `math.config({predictable: true})`.\n   * To retrieve all cubic roots of a value, use `math.cbrt(x, true)`.\n   *\n   * Syntax:\n   *\n   *    math.pow(x, y)\n   *\n   * Examples:\n   *\n   *    math.pow(2, 3);               // returns number 8\n   *\n   *    var a = math.complex(2, 3);\n   *    math.pow(a, 2)                // returns Complex -5 + 12i\n   *\n   *    var b = [[1, 2], [4, 3]];\n   *    math.pow(b, 2);               // returns Array [[9, 8], [16, 17]]\n   *\n   * See also:\n   *\n   *    multiply, sqrt, cbrt, nthRoot\n   *\n   * @param  {number | BigNumber | Complex | Array | Matrix} x  The base\n   * @param  {number | BigNumber | Complex} y                   The exponent\n   * @return {number | BigNumber | Complex | Array | Matrix} The value of `x` to the power `y`\n   */\n  var pow = typed('pow', {\n    'number, number': _pow,\n\n    'Complex, Complex': function (x, y) {\n      return x.pow(y);\n    },\n\n    'BigNumber, BigNumber': function (x, y) {\n      if (y.isInteger() || x >= 0 || config.predictable) {\n        return x.pow(y);\n      }\n      else {\n        return new type.Complex(x.toNumber(), 0).pow(y.toNumber(), 0);\n      }\n    },\n\n    'Fraction, Fraction': function (x, y) {\n      if (y.d !== 1) {\n        if (config.predictable) {\n          throw new Error('Function pow does not support non-integer exponents for fractions.');\n        }\n        else {\n          return _pow(x.valueOf(), y.valueOf());\n        }\n      }\n      else {\n        return x.pow(y);\n     }\n    },\n\n    'Array, number': _powArray,\n\n    'Array, BigNumber': function (x, y) {\n      return _powArray(x, y.toNumber());\n    },\n\n    'Matrix, number': _powMatrix,\n\n    'Matrix, BigNumber': function (x, y) {\n      return _powMatrix(x, y.toNumber());\n    },\n\n    'Unit, number': function (x, y) {\n      return x.pow(y);\n    }\n\n  });\n\n  /**\n   * Calculates the power of x to y, x^y, for two numbers.\n   * @param {number} x\n   * @param {number} y\n   * @return {number | Complex} res\n   * @private\n   */\n  function _pow(x, y) {\n\n    // Alternatively could define a 'realmode' config option or something, but\n    // 'predictable' will work for now\n    if (config.predictable && !isInteger(y) && x < 0) {\n      // Check to see if y can be represented as a fraction\n      try {\n        var yFrac = fraction(y);\n        var yNum = number(yFrac);\n        if(y === yNum || Math.abs((y - yNum) / y) < 1e-14) {\n          if(yFrac.d % 2 === 1) {\n            return (yFrac.n % 2 === 0 ? 1 : -1) * Math.pow(-x, y);\n          }\n        }\n      }\n      catch (ex) {\n        // fraction() throws an error if y is Infinity, etc.\n      }\n\n      // Unable to express y as a fraction, so continue on\n    }\n\n\n    // x^Infinity === 0 if -1 < x < 1\n    // A real number 0 is returned instead of complex(0)\n    if ((x*x < 1 && y ===  Infinity) ||\n        (x*x > 1 && y === -Infinity)) {\n      return 0;\n    }\n\n    // **for predictable mode** x^Infinity === NaN if x < -1\n    // N.B. this behavour is different from `Math.pow` which gives\n    // (-2)^Infinity === Infinity\n    if (config.predictable &&\n        ((x < -1 &&          y ===  Infinity) ||\n         (x > -1 && x < 0 && y === -Infinity))) {\n      return NaN;\n    }\n\n    if (isInteger(y) || x >= 0 || config.predictable) {\n      return Math.pow(x, y);\n    }\n    else {\n      return new type.Complex(x, 0).pow(y, 0);\n    }\n  }\n\n  /**\n   * Calculate the power of a 2d array\n   * @param {Array} x     must be a 2 dimensional, square matrix\n   * @param {number} y    a positive, integer value\n   * @returns {Array}\n   * @private\n   */\n  function _powArray(x, y) {\n    if (!isInteger(y) || y < 0) {\n      throw new TypeError('For A^b, b must be a positive integer (value is ' + y + ')');\n    }\n    // verify that A is a 2 dimensional square matrix\n    var s = size(x);\n    if (s.length != 2) {\n      throw new Error('For A^b, A must be 2 dimensional (A has ' + s.length + ' dimensions)');\n    }\n    if (s[0] != s[1]) {\n      throw new Error('For A^b, A must be square (size is ' + s[0] + 'x' + s[1] + ')');\n    }\n\n    var res = eye(s[0]).valueOf();\n    var px = x;\n    while (y >= 1) {\n      if ((y & 1) == 1) {\n        res = multiply(px, res);\n      }\n      y >>= 1;\n      px = multiply(px, px);\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the power of a 2d matrix\n   * @param {Matrix} x     must be a 2 dimensional, square matrix\n   * @param {number} y    a positive, integer value\n   * @returns {Matrix}\n   * @private\n   */\n  function _powMatrix (x, y) {\n    return matrix(_powArray(x.valueOf(), y));\n  }\n\n\n\n  pow.toTex = {\n    2: '\\\\left(${args[0]}\\\\right)' + latex.operators['pow'] + '{${args[1]}}'\n  };\n\n  return pow;\n}\n\nexports.name = 'pow';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/arithmetic/pow.js","'use strict';\n\nvar array = require('../../utils/array');\nvar isInteger = require('../../utils/number').isInteger;\n\nfunction factory (type, config, load, typed) {\n  \n  var matrix = load(require('../../type/matrix/function/matrix'));\n  \n  /**\n   * Create a 2-dimensional identity matrix with size m x n or n x n.\n   * The matrix has ones on the diagonal and zeros elsewhere.\n   *\n   * Syntax:\n   *\n   *    math.eye(n)\n   *    math.eye(n, format)\n   *    math.eye(m, n)\n   *    math.eye(m, n, format)\n   *    math.eye([m, n])\n   *    math.eye([m, n], format)\n   *\n   * Examples:\n   *\n   *    math.eye(3);                    // returns [[1, 0, 0], [0, 1, 0], [0, 0, 1]]\n   *    math.eye(3, 2);                 // returns [[1, 0], [0, 1], [0, 0]]\n   *\n   *    var A = [[1, 2, 3], [4, 5, 6]];\n   *    math.eye(math.size(A));         // returns [[1, 0, 0], [0, 1, 0]]\n   *\n   * See also:\n   *\n   *    diag, ones, zeros, size, range\n   *\n   * @param {...number | Matrix | Array} size   The size for the matrix\n   * @param {string} [format]                   The Matrix storage format\n   *\n   * @return {Matrix | Array | number} A matrix with ones on the diagonal.\n   */\n  var eye = typed('eye', {\n    '': function () {\n      return (config.matrix === 'Matrix') ? matrix([]) : [];\n    },\n\n    'string': function (format) {\n      return matrix(format);\n    },\n\n    'number | BigNumber': function (rows) {\n      return _eye(rows, rows, config.matrix === 'Matrix' ? 'default' : undefined);\n    },\n    \n    'number | BigNumber, string': function (rows, format) {\n      return _eye(rows, rows, format);\n    },\n\n    'number | BigNumber, number | BigNumber': function (rows, cols) {\n      return _eye(rows, cols, config.matrix === 'Matrix' ? 'default' : undefined);\n    },\n    \n    'number | BigNumber, number | BigNumber, string': function (rows, cols, format) {\n      return _eye(rows, cols, format);\n    },\n\n    'Array':  function (size) {\n      return _eyeVector(size);\n    },\n    \n    'Array, string':  function (size, format) {\n      return _eyeVector(size, format);\n    },\n\n    'Matrix': function (size) {\n      return _eyeVector(size.valueOf(), size.storage());\n    },\n    \n    'Matrix, string': function (size, format) {\n      return _eyeVector(size.valueOf(), format);\n    }\n  });\n\n  eye.toTex = undefined; // use default template\n\n  return eye;\n\n  function _eyeVector (size, format) {\n    switch (size.length) {\n      case 0: return format ? matrix(format) : [];\n      case 1: return _eye(size[0], size[0], format);\n      case 2: return _eye(size[0], size[1], format);\n      default: throw new Error('Vector containing two values expected');\n    }\n  }\n\n  /**\n   * Create an identity matrix\n   * @param {number | BigNumber} rows\n   * @param {number | BigNumber} cols\n   * @param {string} [format]\n   * @returns {Matrix}\n   * @private\n   */\n  function _eye (rows, cols, format) {\n    // BigNumber constructor with the right precision\n    var Big = (type.isBigNumber(rows) || type.isBigNumber(cols))\n            ? type.BigNumber\n            : null;\n\n    if (type.isBigNumber(rows)) rows = rows.toNumber();\n    if (type.isBigNumber(cols)) cols = cols.toNumber();\n\n    if (!isInteger(rows) || rows < 1) {\n      throw new Error('Parameters in function eye must be positive integers');\n    }\n    if (!isInteger(cols) || cols < 1) {\n      throw new Error('Parameters in function eye must be positive integers');\n    }\n    \n    var one = Big ? new type.BigNumber(1) : 1;\n    var defaultValue = Big ? new Big(0) : 0;\n    var size = [rows, cols];\n    \n    // check we need to return a matrix\n    if (format) {\n      // get matrix storage constructor\n      var F = type.Matrix.storage(format);\n      // create diagonal matrix (use optimized implementation for storage format)\n      return F.diagonal(size, one, 0, defaultValue);\n    }\n    \n    // create and resize array\n    var res = array.resize([], size, defaultValue);\n    // fill in ones on the diagonal\n    var minimum = rows < cols ? rows : cols;\n    // fill diagonal\n    for (var d = 0; d < minimum; d++) {\n      res[d][d] = one;\n    }\n    return res;\n  }\n}\n\nexports.name = 'eye';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/function/matrix/eye.js","'use strict';\n\nvar deepMap = require('../../../utils/collection/deepMap');\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create a fraction convert a value to a fraction.\n   *\n   * Syntax:\n   *     math.fraction(numerator, denominator)\n   *     math.fraction({n: numerator, d: denominator})\n   *     math.fraction(matrix: Array | Matrix)         Turn all matrix entries\n   *                                                   into fractions\n   *\n   * Examples:\n   *\n   *     math.fraction(1, 3);\n   *     math.fraction('2/3');\n   *     math.fraction({n: 2, d: 3});\n   *     math.fraction([0.2, 0.25, 1.25]);\n   *\n   * See also:\n   *\n   *    bignumber, number, string, unit\n   *\n   * @param {number | string | Fraction | BigNumber | Array | Matrix} [args]\n   *            Arguments specifying the numerator and denominator of\n   *            the fraction\n   * @return {Fraction | Array | Matrix} Returns a fraction\n   */\n  var fraction = typed('fraction', {\n    'number': function (x) {\n      if (!isFinite(x) || isNaN(x)) {\n        throw new Error(x + ' cannot be represented as a fraction');\n      }\n\n      return new type.Fraction(x);\n    },\n\n    'string': function (x) {\n      return new type.Fraction(x);\n    },\n\n    'number, number': function (numerator, denominator) {\n      return new type.Fraction(numerator, denominator);\n    },\n\n    'BigNumber': function (x) {\n      return new type.Fraction(x.toString());\n    },\n\n    'Fraction': function (x) {\n      return x; // fractions are immutable\n    },\n\n    'Object': function (x) {\n      return new type.Fraction(x);\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, fraction);\n    }\n  });\n\n  return fraction;\n}\n\nexports.name = 'fraction';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/fraction/function/fraction.js","'use strict';\n\nvar deepMap = require('./../utils/collection/deepMap');\n\nfunction factory (type, config, load, typed) {\n  /**\n   * Create a number or convert a string, boolean, or unit to a number.\n   * When value is a matrix, all elements will be converted to number.\n   *\n   * Syntax:\n   *\n   *    math.number(value)\n   *    math.number(unit, valuelessUnit)\n   *\n   * Examples:\n   *\n   *    math.number(2);                         // returns number 2\n   *    math.number('7.2');                     // returns number 7.2\n   *    math.number(true);                      // returns number 1\n   *    math.number([true, false, true, true]); // returns [1, 0, 1, 1]\n   *    math.number(math.unit('52cm'), 'm');    // returns 0.52\n   *\n   * See also:\n   *\n   *    bignumber, boolean, complex, index, matrix, string, unit\n   *\n   * @param {string | number | BigNumber | Fraction | boolean | Array | Matrix | Unit | null} [value]  Value to be converted\n   * @param {Unit | string} [valuelessUnit] A valueless unit, used to convert a unit to a number\n   * @return {number | Array | Matrix} The created number\n   */\n  var number = typed('number', {\n    '': function () {\n      return 0;\n    },\n\n    'number': function (x) {\n      return x;\n    },\n\n    'string': function (x) {\n      var num = Number(x);\n      if (isNaN(num)) {\n        throw new SyntaxError('String \"' + x + '\" is no valid number');\n      }\n      return num;\n    },\n\n    'BigNumber': function (x) {\n      return x.toNumber();\n    },\n\n    'Fraction': function (x) {\n      return x.valueOf();\n    },\n\n    'Unit': function (x) {\n      throw new Error('Second argument with valueless unit expected');\n    },\n\n    'Unit, string | Unit': function (unit, valuelessUnit) {\n      return unit.toNumber(valuelessUnit);\n    },\n\n    'Array | Matrix': function (x) {\n      return deepMap(x, number);\n    }\n  });\n\n  number.toTex = {\n    0: '0',\n    1: '\\\\left(${args[0]}\\\\right)',\n    2: '\\\\left(\\\\left(${args[0]}\\\\right)${args[1]}\\\\right)'\n  };\n\n  return number;\n}\n\nexports.name = 'number';\nexports.factory = factory;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/mathjs/lib/type/number.js","module.exports = function cat_breakdown_bars(\n  params,\n  cat_data,\n  cat_graph_group,\n  title_height,\n  bars_index,\n  max_bars,\n  cat_bar_groups\n) {\n  var paragraph_string = '<p>';\n  var super_string = ': ';\n\n  var bar_width = params.viz.cat_bar_width;\n  var bar_height = params.viz.cat_bar_height;\n\n  var max_string_length = 25;\n\n  var max_bar_value = cat_data.bar_data[0][bars_index];\n\n  // only keep the top max_bars categories\n  cat_data.bar_data = cat_data.bar_data.slice(0, max_bars);\n\n  var inst_title = cat_data.type_name;\n  // ensure that title is not too long\n  if (inst_title.length >= max_string_length) {\n    inst_title = inst_title.slice(0, max_string_length) + '..';\n  }\n\n  // make title\n  cat_graph_group\n    .append('text')\n    .classed('cat_graph_title', true)\n    .text(inst_title)\n    .style('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif')\n    .style('font-weight', 800);\n\n  var line_y = 4;\n  cat_graph_group\n    .append('line')\n    .attr('x1', 0)\n    .attr('x2', bar_width)\n    .attr('y1', line_y)\n    .attr('y2', line_y)\n    .attr('stroke', 'blue')\n    .attr('stroke-width', 1)\n    .attr('opacity', 1.0);\n\n  // bar length is max when all nodes in cluster are of\n  // a single cat\n  var bar_scale = d3.scale\n    .linear()\n    .domain([0, max_bar_value])\n    .range([0, bar_width]);\n\n  // make bars\n  cat_bar_groups\n    .append('rect')\n    .attr('height', bar_height + 'px')\n    .attr('width', function (d) {\n      var inst_width = bar_scale(d[bars_index]);\n      return inst_width + 'px';\n    })\n    .attr('fill', function (d) {\n      // cat color is stored in the third element\n      return d[3];\n    })\n    .attr('opacity', params.viz.cat_colors.opacity)\n    .attr('stroke', 'grey')\n    .attr('stroke-width', '0.5px');\n\n  // make bar labels\n  cat_bar_groups\n    .append('text')\n    .classed('bar_labels', true)\n    .text(function (d) {\n      var inst_text = d[1];\n      if (inst_text.indexOf(super_string) > 0) {\n        inst_text = inst_text.split(super_string)[1];\n      }\n      if (inst_text.indexOf(paragraph_string) > 0) {\n        // required for Enrichr category names (needs improvements)\n        inst_text = inst_text.split(paragraph_string)[0];\n      }\n      // ensure that bar name is not too long\n      if (inst_text.length >= max_string_length) {\n        inst_text = inst_text.slice(0, max_string_length) + '..';\n      }\n      return inst_text;\n    })\n    .attr('transform', function () {\n      return 'translate(5, ' + 0.75 * bar_height + ')';\n    })\n    .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif')\n    .attr('font-weight', 400)\n    .attr('text-anchor', 'right');\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/cat_breakdown_bars.js","module.exports = function cat_breakdown_values(\n  params,\n  cat_graph_group,\n  cat_bar_groups,\n  num_nodes_index,\n  is_downsampled,\n  count_offset,\n  bars_index,\n  cluster_total\n) {\n  var bar_width = params.viz.cat_bar_width;\n  var bar_height = params.viz.cat_bar_height;\n  var offset_ds_count = 150;\n  var binom_pval_index = 6;\n\n  // Count Title\n  cat_graph_group\n    .append('text')\n    .text('Count')\n    .attr('transform', function () {\n      var inst_x = bar_width + count_offset;\n      var inst_translate = 'translate(' + inst_x + ', 0)';\n      return inst_translate;\n    });\n\n  // Percentage Title\n  cat_graph_group\n    .append('text')\n    .text('Pct')\n    .attr('transform', function () {\n      var inst_x = bar_width + count_offset + 60;\n      var inst_translate = 'translate(' + inst_x + ', 0)';\n      return inst_translate;\n    });\n\n  // Percentage Title\n  cat_graph_group\n    .append('text')\n    .text('P-val')\n    .attr('transform', function () {\n      var inst_x = bar_width + count_offset + 115;\n      var inst_translate = 'translate(' + inst_x + ', 0)';\n      return inst_translate;\n    });\n\n  // Count Downsampled Title\n  if (is_downsampled) {\n    cat_graph_group\n      .append('text')\n      .text('Clusters')\n      .attr('transform', function () {\n        var inst_x = bar_width + offset_ds_count;\n        var inst_translate = 'translate(' + inst_x + ', 0)';\n        return inst_translate;\n      });\n  }\n\n  // Counts\n  /////////////////////////////\n  var shift_count_num = 35;\n\n  cat_bar_groups\n    .append('text')\n    .classed('count_labels', true)\n    .text(function (d) {\n      var inst_count = d[bars_index];\n      inst_count = inst_count.toLocaleString();\n      return String(inst_count);\n    })\n    .attr('transform', function () {\n      var inst_x = bar_width + count_offset + shift_count_num;\n      var inst_y = 0.75 * bar_height;\n      return 'translate(' + inst_x + ', ' + inst_y + ')';\n    })\n    .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif')\n    .attr('font-weight', 400)\n    .attr('text-anchor', 'end');\n\n  // Percentage\n  //////////////////////\n  cat_bar_groups\n    .append('text')\n    .classed('count_labels', true)\n    .text(function (d) {\n      // calculate the percentage relative to the current cluster\n      var inst_count = (d[bars_index] / cluster_total) * 100;\n      inst_count = Math.round(inst_count * 10) / 10;\n      inst_count = inst_count.toLocaleString();\n      return String(inst_count);\n    })\n    .attr('transform', function () {\n      var inst_x = bar_width + count_offset + shift_count_num + 47;\n      var inst_y = 0.75 * bar_height;\n      return 'translate(' + inst_x + ', ' + inst_y + ')';\n    })\n    .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif')\n    .attr('font-weight', 400)\n    .attr('text-anchor', 'end');\n\n  // Binomial Test Pvals\n  cat_bar_groups\n    .append('text')\n    .classed('count_labels', true)\n    .text(function (d) {\n      // calculate the percentage relative to the current cluster\n      var inst_count = d[binom_pval_index];\n\n      if (inst_count < 0.001) {\n        inst_count = parseFloat(inst_count.toPrecision(3));\n        inst_count = inst_count.toExponential();\n      } else {\n        inst_count = parseFloat(inst_count.toPrecision(2));\n      }\n\n      // inst_count = inst_count.toLocaleString();\n      return inst_count;\n    })\n    .attr('transform', function () {\n      var inst_x = bar_width + count_offset + shift_count_num + 112;\n      var inst_y = 0.75 * bar_height;\n      return 'translate(' + inst_x + ', ' + inst_y + ')';\n    })\n    .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif')\n    .attr('font-weight', 400)\n    .attr('text-anchor', 'end');\n\n  if (is_downsampled) {\n    cat_bar_groups\n      .append('text')\n      .classed('count_labels', true)\n      .text(function (d) {\n        return String(d[num_nodes_index].toLocaleString());\n      })\n      .attr('transform', function () {\n        // downsampled cluster numbers are smaller and need less flexible offsetting\n        var inst_x = bar_width + shift_count_num + offset_ds_count + 20;\n        var inst_y = 0.75 * bar_height;\n        return 'translate(' + inst_x + ', ' + inst_y + ')';\n      })\n      .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif')\n      .attr('font-weight', 400)\n      .attr('text-anchor', 'end');\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/cat_breakdown_values.js","module.exports = function get_previous_zoom(params) {\n  var prev_zoom = {};\n\n  var inst_trans = d3.select(params.root + ' .clust_group').attr('transform');\n\n  if (inst_trans != null) {\n    // prevent from crashing if no scaling was done\n    if (inst_trans.indexOf('scale') > 0) {\n      prev_zoom.zoom_x = parseFloat(\n        inst_trans\n          .split('scale')[1]\n          .replace('(', '')\n          .replace(')', '')\n          .split(',')[0]\n      );\n\n      prev_zoom.zoom_y = parseFloat(\n        inst_trans\n          .split('scale')[1]\n          .replace('(', '')\n          .replace(')', '')\n          .split(',')[1]\n      );\n    } else {\n      prev_zoom.zoom_x = 1;\n      prev_zoom.zoom_y = 1;\n    }\n  } else {\n    prev_zoom.zoom_x = 1;\n    prev_zoom.zoom_y = 1;\n  }\n\n  return prev_zoom;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/get_previous_zoom.js","module.exports = function make_row_tooltips(params) {\n  if (params.labels.show_label_tooltips) {\n    d3.select(params.root + ' .row_label_zoom_container')\n      .selectAll('g')\n      .on('mouseover', function (d) {\n        dispatchEvent(\n          new CustomEvent('ROW_MOUSEOVER', {\n            detail: {\n              row: d,\n              rect: this.getBoundingClientRect()\n            }\n          })\n        );\n      })\n      .on('mouseout', function mouseout(d) {\n        dispatchEvent(\n          new CustomEvent('ROW_MOUSEOUT', {\n            detail: {\n              row: d\n            }\n          })\n        );\n      });\n  } else {\n    d3.select(params.root + ' .row_label_zoom_container')\n      .selectAll('g')\n      .on('mouseover', function () {\n        d3.select(this).select('text').classed('active', true);\n      })\n      .on('mouseout', function mouseout() {\n        d3.select(this).select('text').classed('active', false);\n      });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/make_row_tooltips.js","var utils = require('../Utils_clust');\nvar add_col_click_hlight = require('./add_col_click_hlight');\nvar col_reorder = require('../reorder/col_reorder');\nvar row_reorder = require('../reorder/row_reorder');\nvar make_col_tooltips = require('./make_col_tooltips');\nvar col_viz_aid_triangle = require('./col_viz_aid_triangle');\n\nmodule.exports = function make_col_label_container(cgm, text_delay = 0) {\n  var params = cgm.params;\n  var col_container;\n\n  var col_nodes = params.network_data.col_nodes;\n\n  // offset click group column label\n  var x_offset_click =\n    params.viz.x_scale.rangeBand() / 2 + params.viz.border_width.x;\n  // reduce width of rotated rects\n\n  // make container to pre-position zoomable elements\n  if (d3.select(params.root + ' .col_container').empty()) {\n    col_container = d3\n      .select(params.viz.viz_svg)\n      .append('g')\n      .attr('class', 'col_container')\n      .attr(\n        'transform',\n        'translate(' +\n          params.viz.clust.margin.left +\n          ',' +\n          params.viz.norm_labels.margin.top +\n          ')'\n      );\n\n    // white background rect for col labels\n    col_container\n      .append('rect')\n      .attr('fill', params.viz.background_color) //!! prog_colors\n      .attr('width', 30 * params.viz.clust.dim.width + 'px')\n      .attr('height', params.viz.label_background.col)\n      .attr('class', 'white_bars');\n\n    // col labels\n    col_container\n      .append('g')\n      .attr('class', 'col_label_outer_container')\n      // position the outer col label group\n      .attr(\n        'transform',\n        'translate(0,' + params.viz.norm_labels.width.col + ')'\n      )\n      .append('g')\n      .attr('class', 'col_zoom_container');\n  } else {\n    col_container = d3\n      .select(params.root + ' .col_container')\n      .attr(\n        'transform',\n        'translate(' +\n          params.viz.clust.margin.left +\n          ',' +\n          params.viz.norm_labels.margin.top +\n          ')'\n      );\n\n    // white background rect for col labels\n    col_container\n      .select('.white_bars')\n      .attr('fill', params.viz.background_color) //!! prog_colors\n      .attr('width', 30 * params.viz.clust.dim.width + 'px')\n      .attr('height', params.viz.label_background.col);\n\n    // col labels\n    col_container.select(params.root + ' .col_label_outer_container');\n  }\n\n  // add main column label group\n  var col_label_obj = d3\n    .select(params.root + ' .col_zoom_container')\n    .selectAll('.col_label_text')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .enter()\n    .append('g')\n    .attr('class', 'col_label_text')\n    .attr('transform', function (d) {\n      var inst_index = d.col_index;\n      return 'translate(' + params.viz.x_scale(inst_index) + ', 0) rotate(-90)';\n    });\n\n  // append group for individual column label\n  var col_label_group = col_label_obj\n    // append new group for rect and label (not white lines)\n    .append('g')\n    .attr('class', 'col_label_group')\n    // rotate column labels\n    .attr(\n      'transform',\n      'translate(' +\n        params.viz.x_scale.rangeBand() / 2 +\n        ',' +\n        x_offset_click +\n        ') rotate(45)'\n    )\n    .on('mouseover', function () {\n      d3.select(this).select('text').classed('active', true);\n    })\n    .on('mouseout', function () {\n      d3.select(this).select('text').classed('active', false);\n    });\n\n  // append column value bars\n  if (utils.has(params.network_data.col_nodes[0], 'value')) {\n    col_label_group\n      .append('rect')\n      .attr('class', 'col_bars')\n      .attr('width', function (d) {\n        var inst_value = 0;\n        if (d.value > 0) {\n          inst_value = params.labels.bar_scale_col(d.value);\n        }\n        return inst_value;\n      })\n      // rotate labels - reduce width if rotating\n      .attr('height', params.viz.x_scale.rangeBand() * 0.66)\n      .style('fill', function (d) {\n        return d.value > 0\n          ? params.matrix.bar_colors[0]\n          : params.matrix.bar_colors[1];\n      })\n      .attr('opacity', 0.6);\n  }\n\n  // add column label\n  col_label_group\n    .append('text')\n    .attr('x', 0)\n    // manually tuned\n    .attr('y', params.viz.x_scale.rangeBand() * 0.64)\n    .attr('dx', params.viz.border_width.x)\n    .attr('text-anchor', 'start')\n    .attr('full_name', function (d) {\n      return d.name;\n    })\n    // original font size\n    .style('font-size', params.labels.default_fs_col + 'px')\n    .style('cursor', 'default')\n    .text(function (d) {\n      return utils.normal_name(d);\n    })\n    // .attr('pointer-events','none')\n    .style('opacity', 0)\n    .transition()\n    .delay(text_delay)\n    .duration(text_delay)\n    .style('opacity', 1);\n\n  make_col_tooltips(params);\n\n  // add triangle under rotated labels\n  col_label_group\n    .append('path')\n    .style('stroke-width', 0)\n    .attr('d', function () {\n      return col_viz_aid_triangle(params);\n    })\n    .attr('fill', '#eee')\n    .style('opacity', 0)\n    .transition()\n    .delay(text_delay)\n    .duration(text_delay)\n    .style('opacity', params.viz.triangle_opacity);\n\n  // add col callback function\n  d3.selectAll(params.root + ' .col_label_text')\n    .on('click', function (d) {\n      if (typeof params.click_label == 'function') {\n        params.click_label(d.name, 'col');\n        add_col_click_hlight(params, this, d.ini);\n      } else {\n        if (params.tile_click_hlight) {\n          add_col_click_hlight(params, this, d.ini);\n        }\n      }\n    })\n    .on('dblclick', function (d) {\n      var data_attr = '__data__';\n      var col_name = this[data_attr].name;\n\n      if (params.sim_mat) {\n        col_reorder(cgm, this, col_name);\n\n        var row_selection = d3\n          .selectAll(params.root + ' .row_label_group')\n          .filter(function (d) {\n            return d.name == col_name;\n          })[0][0];\n\n        row_reorder(cgm, row_selection, col_name);\n      } else {\n        col_reorder(cgm, this, col_name);\n      }\n\n      if (params.tile_click_hlight) {\n        add_col_click_hlight(params, this, d.ini);\n      }\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/make_col_label_container.js","module.exports = function (params, clicked_col, id_clicked_col) {\n  if (id_clicked_col != params.click_hlight_col) {\n    params.click_hlight_col = id_clicked_col;\n\n    var rel_width_hlight = 6;\n    var opacity_hlight = 0.85;\n    var hlight_width = rel_width_hlight * params.viz.border_width.x;\n\n    d3.selectAll(params.root + ' .click_hlight').remove();\n\n    // // highlight selected column\n    // ///////////////////////////////\n    // // unhilight and unbold all columns (already unbolded earlier)\n    // d3.selectAll('.col_label_text')\n    //   .select('rect')\n    //   .style('opacity', 0);\n    // // highlight column name\n    // d3.select(clicked_col)\n    //   .select('rect')\n    //   .style('opacity', 1);\n\n    d3.select(clicked_col)\n      .append('rect')\n      .classed('click_hlight', true)\n      .classed('col_top_hlight', true)\n      .attr('width', params.viz.clust.dim.height)\n      .attr('height', hlight_width)\n      .attr('fill', params.matrix.hlight_color)\n      .attr('opacity', opacity_hlight)\n      .attr('transform', function () {\n        var tmp_translate_y = 0;\n        var tmp_translate_x = -(\n          params.viz.clust.dim.height +\n          params.viz.cat_room.col +\n          params.viz.uni_margin\n        );\n        return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n      });\n\n    d3.select(clicked_col)\n      .append('rect')\n      .classed('click_hlight', true)\n      .classed('col_bottom_hlight', true)\n      .attr('width', params.viz.clust.dim.height)\n      .attr('height', hlight_width)\n      .attr('fill', params.matrix.hlight_color)\n      .attr('opacity', opacity_hlight)\n      .attr('transform', function () {\n        // reverse x and y since rotated\n        var tmp_translate_y = params.viz.x_scale.rangeBand() - hlight_width;\n        var tmp_translate_x = -(\n          params.viz.clust.dim.height +\n          params.viz.cat_room.col +\n          params.viz.uni_margin\n        );\n        return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n      });\n  } else {\n    d3.selectAll(params.root + ' .click_hlight').remove();\n    params.click_hlight_col = -666;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/add_col_click_hlight.js","// var utils = require('../Utils_clust');\nvar reposition_tile_highlight = require('./reposition_tile_highlight');\nvar toggle_dendro_view = require('../dendrogram/toggle_dendro_view');\nvar show_visible_area = require('../zoom/show_visible_area');\nvar ini_zoom_info = require('../zoom/ini_zoom_info');\nvar get_previous_zoom = require('../zoom/get_previous_zoom');\nvar calc_downsampled_levels = require('../matrix/calc_downsampled_levels');\nvar $ = require('jquery');\n\nmodule.exports = function col_reorder(cgm, col_selection, inst_term) {\n  var params = cgm.params;\n  var prev_zoom = get_previous_zoom(params);\n\n  if (prev_zoom.zoom_y === 1 && prev_zoom.zoom_x === 1) {\n    params.viz.inst_order.col = 'custom';\n\n    toggle_dendro_view(cgm, 'col');\n\n    d3.selectAll(params.root + ' .toggle_row_order .btn').classed(\n      'active',\n      false\n    );\n\n    params.viz.run_trans = true;\n\n    var mat = $.extend(true, {}, params.matrix.matrix);\n    var row_nodes = params.network_data.row_nodes;\n    var col_nodes = params.network_data.col_nodes;\n\n    // find the column number of col_selection term from col_nodes\n    // gather column node names\n    var tmp_arr = [];\n    col_nodes.forEach(function (node) {\n      tmp_arr.push(node.name);\n    });\n\n    // find index\n    var inst_col = tmp_arr.indexOf(inst_term);\n\n    // gather the values of the input genes\n    tmp_arr = [];\n    row_nodes.forEach(function (node, index) {\n      tmp_arr.push(mat[index].row_data[inst_col].value);\n    });\n\n    // sort the cols\n    var tmp_sort = d3.range(tmp_arr.length).sort(function (a, b) {\n      return tmp_arr[b] - tmp_arr[a];\n    });\n\n    // resort rows (rows are reorderd by double clicking a col)\n    params.viz.y_scale.domain(tmp_sort);\n\n    // save to custom row order\n    params.matrix.orders.custom_col = tmp_sort;\n\n    var t;\n\n    var row_nodes_names = params.network_data.row_nodes_names || [];\n\n    // reorder\n    if (params.network_data.links.length > params.matrix.def_large_matrix) {\n      t = d3.select(params.root + ' .viz_svg');\n    } else {\n      t = d3\n        .select(params.root + ' .viz_svg')\n        .transition()\n        .duration(2500);\n    }\n\n    // reorder row_label_triangle groups\n    t.selectAll('.row_cat_group').attr('transform', function (d) {\n      var inst_index = row_nodes_names.indexOf(d.name);\n      return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n    });\n\n    // Move Row Labels\n    t.select('.row_label_zoom_container')\n      .selectAll('.row_label_group')\n      .attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n      });\n\n    // only update matri if not downsampled\n    if (params.viz.ds_level === -1) {\n      // reorder matrix rows\n      t.selectAll('.row').attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n      });\n    }\n\n    // highlight selected column\n    ///////////////////////////////\n    // unhilight and unbold all columns (already unbolded earlier)\n    d3.selectAll(params.root + ' .col_label_text')\n      .select('.highlight_rect')\n      .style('opacity', 0);\n    // highlight column name\n    d3.select(col_selection).select('.highlight_rect').style('opacity', 1);\n\n    // redefine x and y positions\n    params.network_data.links.forEach(function (d) {\n      d.x = params.viz.x_scale(d.target);\n      d.y = params.viz.y_scale(d.source);\n    });\n\n    reposition_tile_highlight(params);\n\n    params.zoom_info = ini_zoom_info();\n\n    setTimeout(function () {\n      params.viz.run_trans = false;\n    }, 2500);\n\n    // calculate downsmapling if necessary\n    if (params.viz.ds_num_levels > 0 && params.viz.ds_level >= 0) {\n      calc_downsampled_levels(params);\n\n      var zooming_stopped = true;\n      var zooming_out = true;\n      var make_all_rows = true;\n      // show_visible_area is also run with two_translate_zoom, but at that point\n      // the parameters were not updated and two_translate_zoom if only run\n      // if needed to reset zoom\n      show_visible_area(cgm, zooming_stopped, zooming_out, make_all_rows);\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reorder/col_reorder.js","var find_viz_rows = require('../zoom/find_viz_rows');\nvar make_matrix_rows = require('../matrix/make_matrix_rows');\nvar make_row_labels = require('../labels/make_row_labels');\nvar make_row_visual_aid_triangles = require('../labels/make_row_visual_aid_triangles');\nvar contains = require('underscore/cjs/contains');\nvar difference = require('underscore/cjs/difference');\n\nmodule.exports = function show_visible_area(\n  cgm,\n  zooming_stopped = false,\n  zooming_out = false,\n  make_all_rows = false\n) {\n  // console.log('show_visible_area stopped: ' + String(zooming_stopped));\n\n  var params = cgm.params;\n  var zoom_info = params.zoom_info;\n\n  // update ds_level if necessary\n  //////////////////////////////////////////////\n  var check_ds_level = params.viz.ds_level;\n  var old_ds_level = params.viz.ds_level;\n\n  // toggle the downsampling level (if necessary)\n  if (params.viz.ds === null) {\n    check_ds_level = -1;\n  } else {\n    check_ds_level = Math.floor(\n      Math.log(zoom_info.zoom_y) / Math.log(params.viz.ds_zt)\n    );\n\n    if (check_ds_level > params.viz.ds_num_levels - 1) {\n      check_ds_level = -1;\n    }\n  }\n\n  // check if override_ds is necessary\n  //////////////////////////////////////////////\n  // force update of view if moving to more coarse view\n  var override_ds = false;\n\n  if (old_ds_level == -1) {\n    // transitioning to more coarse downsampling view (from real data)\n    if (check_ds_level >= 0) {\n      override_ds = true;\n    }\n  } else {\n    // transitioning to more coarse downsampling view\n    if (check_ds_level < old_ds_level) {\n      override_ds = true;\n    }\n  }\n\n  // update level if zooming has stopped or if transitioning to more coarse view\n  var new_ds_level;\n\n  if (zooming_stopped === true || override_ds === true) {\n    // update new_ds_level if necessary (if decreasing detail, zooming out)\n    new_ds_level = check_ds_level;\n\n    // set zooming_stopped to true in case of override_ds\n    zooming_stopped = true;\n\n    params.viz.ds_level = new_ds_level;\n  } else {\n    // keep the old level (zooming is still occuring and not zooming out)\n    new_ds_level = old_ds_level;\n  }\n\n  var viz_area = {};\n  var buffer_size = 5;\n  // get translation vector absolute values\n  viz_area.min_x =\n    Math.abs(zoom_info.trans_x) / zoom_info.zoom_x -\n    (buffer_size + 1) * params.viz.rect_width;\n  viz_area.min_y =\n    Math.abs(zoom_info.trans_y) / zoom_info.zoom_y -\n    (buffer_size + 1) * params.viz.rect_height;\n\n  viz_area.max_x =\n    Math.abs(zoom_info.trans_x) / zoom_info.zoom_x +\n    params.viz.clust.dim.width / zoom_info.zoom_x +\n    buffer_size * params.viz.rect_width;\n\n  viz_area.max_y =\n    Math.abs(zoom_info.trans_y) / zoom_info.zoom_y +\n    params.viz.clust.dim.height / zoom_info.zoom_y +\n    buffer_size * params.viz.rect_height;\n\n  // generate lists of visible rows/cols\n  find_viz_rows(params, viz_area);\n\n  var missing_rows;\n  if (make_all_rows === false) {\n    missing_rows = difference(\n      params.viz.viz_nodes.row,\n      params.viz.viz_nodes.curr_row\n    );\n  } else {\n    // make all rows (reordering)\n    missing_rows = 'all';\n\n    // remove downsampled rows\n    d3.selectAll(params.root + ' .ds' + String(new_ds_level) + '_row').remove();\n  }\n\n  if (params.viz.ds != null) {\n    var ds_row_class = '.ds' + String(params.viz.ds_level) + '_row';\n    d3.selectAll(ds_row_class).style('display', 'block');\n  }\n\n  // if downsampling\n  if (new_ds_level >= 0) {\n    // remove old rows\n    d3.selectAll(params.root + ' .row').remove();\n    // remove tile tooltips and row tooltips\n    d3.selectAll(params.viz.root_tips + '_tile_tip').remove();\n    d3.selectAll(params.viz.root_tips + '_row_tip').remove();\n  }\n\n  // default state for downsampling\n  var inst_matrix;\n\n  if (new_ds_level < 0) {\n    // set matrix to default matrix\n    inst_matrix = params.matrix.matrix;\n\n    // make row visual-aid triangles\n    make_row_visual_aid_triangles(params);\n  } else {\n    // set matrix to downsampled matrix\n    inst_matrix = params.matrix.ds_matrix[new_ds_level];\n\n    d3.selectAll(params.root + ' .row_cat_group path').remove();\n  }\n\n  // also remove row visual aid triangles if zooming out\n  if (zooming_out === true) {\n    d3.selectAll(params.root + ' .row_cat_group path').remove();\n  }\n\n  // remove rows and labels that are not visible and change ds_level\n  /* run when zooming has stopped */\n  if (zooming_stopped === true) {\n    // remove not visible matrix rows\n    if (new_ds_level >= 0) {\n      // remove downsampled rows\n      d3.selectAll(params.root + ' .ds' + String(new_ds_level) + '_row').each(\n        function (d) {\n          if (contains(params.viz.viz_nodes.row, d.name) === false) {\n            d3.select(this).remove();\n          }\n        }\n      );\n    } else {\n      // remove real data rows\n      d3.selectAll(params.root + ' .row').each(function (d) {\n        if (contains(params.viz.viz_nodes.row, d.name) === false) {\n          d3.select(this).remove();\n        }\n      });\n    }\n\n    // remove not visible row labels\n    d3.selectAll(params.root + ' .row_label_group').each(function (d) {\n      if (contains(params.viz.viz_nodes.row, d.name) === false) {\n        d3.select(this).remove();\n      }\n    });\n\n    // level change\n    if (new_ds_level != old_ds_level) {\n      // console.log('old: ' + String(old_ds_level) + ' new: '+ String(new_ds_level));\n\n      // all visible rows are missing at new downsampling level\n      missing_rows = params.viz.viz_nodes.row;\n\n      // remove old level rows\n      d3.selectAll(\n        params.root + ' .ds' + String(old_ds_level) + '_row'\n      ).remove();\n    }\n  }\n\n  // console.log('missing_rows: ' + String(missing_rows))\n  // console.log(missing_rows)\n\n  // only make new matrix_rows if there are missing rows\n  if (missing_rows.length >= 1 || missing_rows === 'all') {\n    make_matrix_rows(params, inst_matrix, missing_rows, new_ds_level);\n  }\n\n  // only make new row_labels if there are missing row_labels, downsampled, and\n  // not zooming out or zooming has stopped\n  if (new_ds_level === -1) {\n    if (zooming_out === false || zooming_stopped) {\n      // check if labels need to be made\n      ///////////////////////////////////\n      // get the names visible row_labels\n      var visible_row_labels = [];\n      d3.selectAll(params.root + ' .row_label_group').each(function (d) {\n        visible_row_labels.push(d.name);\n      });\n\n      // find missing labels\n      var missing_row_labels = difference(\n        params.viz.viz_nodes.row,\n        visible_row_labels\n      );\n\n      // make labels\n      //////////////////////////////////\n      // only make row labels if there are any missing\n      var addback_thresh = 1;\n      if (missing_row_labels.length > addback_thresh) {\n        make_row_labels(cgm, missing_row_labels);\n      }\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/show_visible_area.js","module.exports = function find_viz_rows(params, viz_area) {\n  var should_be_rows = [];\n  var curr_rows = [];\n\n  // find rows that should be visible\n  var y_trans;\n\n  // default y_scale (no downsampling)\n  var y_scale = params.viz.y_scale;\n  var ds_level = params.viz.ds_level;\n  var row_names = params.network_data.row_nodes_names;\n  var row_class = '.row';\n\n  // if downsampling redefine variables\n  if (ds_level >= 0) {\n    y_scale = params.viz.ds[ds_level].y_scale;\n    row_names = d3.range(params.matrix.ds_matrix[ds_level].length).map(String);\n    row_class = '.ds' + String(ds_level) + '_row';\n  }\n\n  // find rows that should be visible\n  for (var i = 0; i < row_names.length; i++) {\n    y_trans = y_scale(i);\n    if (y_trans < viz_area.max_y && y_trans > viz_area.min_y) {\n      should_be_rows.push(row_names[i]);\n    }\n  }\n\n  // find currently visible rows\n  d3.selectAll(params.root + ' ' + row_class).each(function (d) {\n    curr_rows.push(d.name);\n  });\n\n  // nodes that should be visible\n  params.viz.viz_nodes.row = should_be_rows;\n  // nodes that are visible\n  params.viz.viz_nodes.curr_row = curr_rows;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/find_viz_rows.js","module.exports = function make_row_visual_aid_triangles(params) {\n  if (d3.select(params.root + ' .row_cat_group path').empty() === true) {\n    d3.selectAll(params.root + ' .row_cat_group')\n      .append('path')\n      .attr('d', function () {\n        var origin_x = params.viz.cat_room.symbol_width - 1;\n        var origin_y = 0;\n        var mid_x = 1;\n        var mid_y = params.viz.y_scale.rangeBand() / 2;\n        var final_x = params.viz.cat_room.symbol_width - 1;\n        var final_y = params.viz.y_scale.rangeBand();\n        var output_string =\n          'M ' +\n          origin_x +\n          ',' +\n          origin_y +\n          ' L ' +\n          mid_x +\n          ',' +\n          mid_y +\n          ' L ' +\n          final_x +\n          ',' +\n          final_y +\n          ' Z';\n        return output_string;\n      })\n      .attr('fill', '#eee')\n      .style('opacity', params.viz.triangle_opacity);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/make_row_visual_aid_triangles.js","var restArguments = require('./restArguments.js');\nvar _flatten = require('./_flatten.js');\nvar filter = require('./filter.js');\nvar contains = require('./contains.js');\n\n// Take the difference between one array and a number of other arrays.\n// Only the elements present in just the first array will remain.\nvar difference = restArguments(function(array, rest) {\n  rest = _flatten(rest, true, true);\n  return filter(array, function(value){\n    return !contains(rest, value);\n  });\n});\n\nmodule.exports = difference;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/difference.js","// Some functions take a variable number of arguments, or a few expected\n// arguments at the beginning and then a variable number of values to operate\n// on. This helper accumulates all remaining arguments past the function’s\n// argument length (or an explicit `startIndex`), into an array that becomes\n// the last argument. Similar to ES6’s \"rest parameter\".\nfunction restArguments(func, startIndex) {\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\n  return function() {\n    var length = Math.max(arguments.length - startIndex, 0),\n        rest = Array(length),\n        index = 0;\n    for (; index < length; index++) {\n      rest[index] = arguments[index + startIndex];\n    }\n    switch (startIndex) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, arguments[0], rest);\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\n    }\n    var args = Array(startIndex + 1);\n    for (index = 0; index < startIndex; index++) {\n      args[index] = arguments[index];\n    }\n    args[startIndex] = rest;\n    return func.apply(this, args);\n  };\n}\n\nmodule.exports = restArguments;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/restArguments.js","var _getLength = require('./_getLength.js');\nvar _isArrayLike = require('./_isArrayLike.js');\nvar isArray = require('./isArray.js');\nvar isArguments = require('./isArguments.js');\n\n// Internal implementation of a recursive `flatten` function.\nfunction flatten(input, depth, strict, output) {\n  output = output || [];\n  if (!depth && depth !== 0) {\n    depth = Infinity;\n  } else if (depth <= 0) {\n    return output.concat(input);\n  }\n  var idx = output.length;\n  for (var i = 0, length = _getLength(input); i < length; i++) {\n    var value = input[i];\n    if (_isArrayLike(value) && (isArray(value) || isArguments(value))) {\n      // Flatten current level of array or arguments object.\n      if (depth > 1) {\n        flatten(value, depth - 1, strict, output);\n        idx = output.length;\n      } else {\n        var j = 0, len = value.length;\n        while (j < len) output[idx++] = value[j++];\n      }\n    } else if (!strict) {\n      output[idx++] = value;\n    }\n  }\n  return output;\n}\n\nmodule.exports = flatten;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/_flatten.js","var _tagTester = require('./_tagTester.js');\nvar _has = require('./_has.js');\n\nvar isArguments = _tagTester('Arguments');\n\n// Define a fallback version of the method in browsers (ahem, IE < 9), where\n// there isn't any inspectable \"Arguments\" type.\n(function() {\n  if (!isArguments(arguments)) {\n    isArguments = function(obj) {\n      return _has(obj, 'callee');\n    };\n  }\n}());\n\nvar isArguments$1 = isArguments;\n\nmodule.exports = isArguments$1;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/isArguments.js","module.exports = function make_col_tooltips(params) {\n  if (params.labels.show_label_tooltips) {\n    d3.select(params.root + ' .col_zoom_container')\n      .selectAll('.col_label_group')\n      .on('mouseover', function (d) {\n        dispatchEvent(\n          new CustomEvent('COL_MOUSEOVER', {\n            detail: {\n              col: d,\n              text: this.childNodes[0].getBoundingClientRect(),\n              triangle: this.childNodes[1].getBoundingClientRect()\n            }\n          })\n        );\n      })\n      .on('mouseout', function (d) {\n        dispatchEvent(\n          new CustomEvent('COL_MOUSEOUT', {\n            detail: {\n              col: d\n            }\n          })\n        );\n      });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/make_col_tooltips.js","module.exports = function col_viz_aid_triangle(params) {\n  // x and y are flipped since its rotated\n  var reduce_rect_width = params.viz.x_scale.rangeBand() * 0.36;\n  var origin_y = -params.viz.border_width.x;\n  var start_x = 0;\n  var final_x = params.viz.x_scale.rangeBand() - reduce_rect_width;\n  var start_y = -(\n    params.viz.x_scale.rangeBand() -\n    reduce_rect_width +\n    params.viz.border_width.x\n  );\n  var final_y = -params.viz.border_width.x;\n  var output_string =\n    'M ' +\n    origin_y +\n    ',0 L ' +\n    start_y +\n    ',' +\n    start_x +\n    ' L ' +\n    final_y +\n    ',' +\n    final_x +\n    ' Z';\n  return output_string;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/col_viz_aid_triangle.js","module.exports = function (params) {\n  d3.select(params.viz.viz_svg)\n    .append('rect')\n    .attr('fill', params.viz.background_color)\n    .attr('height', params.viz.super_labels.dim.width + 'px')\n    .attr('width', '3000px')\n    .classed('super_col_bkg', true)\n    .classed('white_bars', true)\n    .attr(\n      'transform',\n      'translate(' +\n        params.viz.clust.margin.left +\n        ',' +\n        params.viz.super_labels.margin.top +\n        ')'\n    );\n\n  d3.select(params.viz.viz_svg)\n    .append('text')\n    .attr('class', 'super_col')\n    .text(params.labels.super.col)\n    .attr('text-anchor', 'center')\n    .attr('transform', function () {\n      var inst_text_width = d3.select(this)[0][0].getBBox().width;\n\n      var inst_x =\n        params.viz.clust.dim.width / 2 +\n        params.viz.norm_labels.width.row -\n        inst_text_width / 2;\n      var inst_y = params.viz.super_labels.dim.width;\n      return 'translate(' + inst_x + ',' + inst_y + ')';\n    })\n    .style('font-size', function () {\n      var inst_font_size =\n        params.labels.super_label_fs * params.labels.super_label_scale;\n      return inst_font_size + 'px';\n    })\n    .style('font-weight', 300);\n\n  d3.select(params.viz.viz_svg)\n    .append('rect')\n    .attr('fill', params.viz.background_color)\n    .attr('width', params.viz.super_labels.dim.width + 'px')\n    .attr('height', '3000px')\n    .classed('super_row_bkg', true)\n    .classed('white_bars', true)\n    .attr(\n      'transform',\n      'translate(' + params.viz.super_labels.margin.left + ',0)'\n    );\n\n  // append super title row group - used to separate translation from rotation\n  d3.select(params.viz.viz_svg)\n    .append('g')\n    .classed('super_row', true)\n    .attr('transform', function () {\n      // position in the middle of the clustergram\n      var inst_x = params.viz.super_labels.dim.width;\n      var inst_y =\n        params.viz.clust.dim.height / 2 + params.viz.norm_labels.width.col;\n      return 'translate(' + inst_x + ',' + inst_y + ')';\n    });\n\n  // super row label (rotate the already translated title )\n  d3.select(params.root + ' .super_row')\n    .append('text')\n    .text(params.labels.super.row)\n    .attr('text-anchor', 'center')\n    .attr('transform', function () {\n      var inst_text_width = d3.select(this)[0][0].getBBox().width;\n      var inst_x_offset =\n        inst_text_width / 2 + params.viz.norm_labels.width.col;\n      var inst_offset = 'translate(0,' + inst_x_offset + '), rotate(-90)';\n      return inst_offset;\n    })\n    .style('font-size', function () {\n      var inst_font_size =\n        params.labels.super_label_fs * params.labels.super_label_scale;\n      return inst_font_size + 'px';\n    })\n    .style('font-weight', 300);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/super_labels.js","var get_cat_title = require('../categories/get_cat_title');\nvar ini_cat_reorder = require('../reorder/ini_cat_reorder');\nvar make_row_cat_super_labels = require('../labels/make_row_cat_super_labels');\nvar make_dendro_crop_buttons = require('../dendrogram/make_dendro_crop_buttons');\n\nmodule.exports = function Spillover(cgm) {\n  var params = cgm.params;\n\n  var viz = params.viz;\n\n  // hide spillover from slanted column labels on right side\n  d3.select(viz.root + ' .col_container')\n    .append('path')\n    .style('stroke-width', '0')\n    .attr('d', 'M 0,0 L 1000,-1000, L 1000,0 Z')\n    .attr('fill', viz.background_color) //!! prog_colors\n    .attr('class', 'right_slant_triangle')\n    .attr(\n      'transform',\n      'translate(' + viz.clust.dim.width + ',' + viz.norm_labels.width.col + ')'\n    );\n\n  // hide spillover from slanted column labels on left side\n  d3.select(viz.root + ' .col_container')\n    .append('path')\n    .style('stroke-width', '0')\n    .attr('d', 'M 0,0 L 500,-500, L 0,-500 Z')\n    .attr('fill', viz.background_color)\n    .attr('class', 'left_slant_triangle')\n    // shift left by 1 px to prevent cutting off labels\n    .attr('transform', 'translate(-1,' + viz.norm_labels.width.col + ')');\n\n  var rect_height = viz.clust.margin.top + viz.uni_margin / 5;\n  // white rect to cover excess labels\n  d3.select(viz.viz_svg)\n    .append('rect')\n    .attr('fill', viz.background_color) //!! prog_colors\n    .attr('width', viz.clust.margin.left)\n    .attr('height', rect_height - 1)\n    .attr('class', 'top_left_white');\n\n  var inst_height = viz.cat_room.col + 1.5 * viz.uni_margin;\n  // white rect to cover excess labels\n  d3.select(viz.viz_svg)\n    .append('rect')\n    .attr('fill', viz.background_color)\n    .attr('width', 2 * viz.clust.dim.width)\n    .attr('height', inst_height)\n    .attr('class', 'top_right_white')\n    .attr('transform', function () {\n      var tmp_left = viz.clust.margin.left + viz.clust.dim.width;\n      var tmp_top =\n        viz.norm_labels.width.col + viz.norm_labels.margin.top - viz.uni_margin;\n      return 'translate(' + tmp_left + ', ' + tmp_top + ')';\n    });\n\n  x_offset = viz.clust.margin.left + viz.clust.dim.width + viz.uni_margin;\n  y_offset =\n    viz.norm_labels.margin.top +\n    viz.norm_labels.width.col +\n    2.5 * viz.uni_margin;\n  var cat_text_size = 1.15 * viz.cat_room.symbol_width;\n  var cat_super_opacity = 0.65;\n  var extra_y_room = 1.25;\n\n  // col category super labels\n  if (viz.show_categories.col) {\n    d3.select(viz.viz_svg)\n      .selectAll()\n      .data(viz.all_cats.col)\n      .enter()\n      .append('text')\n      .classed('col_cat_super', true)\n      .style('font-size', cat_text_size + 'px')\n      .style('opacity', cat_super_opacity)\n      .style('cursor', 'default')\n      .attr('transform', function (d) {\n        var inst_cat = parseInt(d.split('-')[1], 10);\n        var inst_y =\n          y_offset + extra_y_room * viz.cat_room.symbol_width * inst_cat;\n        return 'translate(' + x_offset + ',' + inst_y + ')';\n      })\n      .text(function (d) {\n        return get_cat_title(viz, d, 'col');\n      });\n  }\n\n  // row category super labels\n  make_row_cat_super_labels(cgm);\n\n  // white border bottom - prevent clustergram from hitting border\n  if (viz.show_dendrogram) {\n    // quick fix to make room for crop buttons\n    y_offset =\n      viz.clust.margin.top +\n      viz.clust.dim.height +\n      viz.dendro_room.col -\n      2 * viz.uni_margin;\n  } else {\n    y_offset = viz.clust.margin.top + viz.clust.dim.height;\n  }\n\n  var b_spill_container = d3\n    .select(viz.viz_svg)\n    .append('g')\n    .classed('bottom_spillover_container', true)\n    .attr('transform', function () {\n      // shift up enough to show the entire border width\n      return 'translate(0,' + y_offset + ')';\n    });\n\n  b_spill_container\n    .append('rect')\n    .attr('class', 'bottom_spillover')\n    .attr('fill', viz.background_color) //!! prog_colors\n    .attr('width', viz.svg_dim.width)\n    .attr('height', 2 * viz.svg_dim.height);\n\n  x_offset = viz.clust.margin.left;\n  y_offset = 0;\n  b_spill_container\n    .append('g')\n    .classed('col_dendro_icons_container', true)\n    .attr('transform', 'translate(' + x_offset + ',' + y_offset + ')')\n    .append('g')\n    .classed('col_dendro_icons_group', true);\n\n  if (cgm.config.show_dendrogram) {\n    make_dendro_crop_buttons(cgm, 'col');\n  }\n\n  var x_offset = viz.clust.margin.left + viz.clust.dim.width;\n  var y_offset = viz.clust.margin.top + viz.clust.dim.height;\n  var tmp_width = viz.cat_room.col + viz.clust.dim.width;\n  var tmp_height = viz.cat_room.row + 10 * viz.uni_margin;\n  d3.select(viz.viz_svg)\n    .append('rect')\n    .attr('fill', viz.background_color)\n    .attr('width', tmp_width)\n    .attr('height', tmp_height)\n    .attr('transform', function () {\n      return 'translate(' + x_offset + ',' + y_offset + ')';\n    })\n    .classed('white_bars', true)\n    .classed('dendro_corner_spillover', true);\n\n  // hide spillover left top of col dendrogram\n  x_offset = 0;\n  y_offset = viz.clust.margin.top + viz.clust.dim.height;\n  tmp_width = viz.clust.margin.left;\n  tmp_height = viz.clust.dim.height * 10;\n  d3.select(viz.viz_svg)\n    .append('rect')\n    .attr('fill', viz.background_color)\n    .attr('width', tmp_width)\n    .attr('height', tmp_height)\n    .attr('transform', function () {\n      return 'translate(' + x_offset + ',' + y_offset + ')';\n    })\n    .classed('white_bars', true)\n    .classed('dendro_col_spillover', true);\n\n  ini_cat_reorder(cgm);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/spillover/main_spillover.js","module.exports = function get_cat_title(viz, inst_cat, inst_rc) {\n  var cat_title;\n\n  // make default title if none is given\n  if (viz.cat_names[inst_rc][inst_cat] === inst_cat) {\n    var inst_num = parseInt(inst_cat.split('-')[1], 10) + 1;\n    // generate placeholder title\n    cat_title = 'Category ' + inst_num;\n  } else {\n    // make real title\n    cat_title = viz.cat_names[inst_rc][inst_cat];\n  }\n\n  return cat_title;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/get_cat_title.js","var all_reorder = require('./all_reorder');\n\nmodule.exports = function ini_cat_reorder(cgm) {\n  /* eslint-disable */\n\n  var params = cgm.params;\n\n  ['row', 'col'].forEach(function (inst_rc) {\n    if (params.viz.show_categories[inst_rc]) {\n      d3.selectAll(params.root + ' .' + inst_rc + '_cat_super').on(\n        'dblclick',\n        function () {\n          if (params.sim_mat) {\n            inst_rc = 'both';\n          }\n\n          d3.selectAll(\n            params.root + ' .toggle_' + inst_rc + '_order .btn'\n          ).classed('active', false);\n\n          var order_id = this.__data__.replace('-', '_') + '_index';\n          if (params.viz.sim_mat) {\n            all_reorder(cgm, order_id, 'row');\n            all_reorder(cgm, order_id, 'col');\n          } else {\n            all_reorder(cgm, order_id, inst_rc);\n          }\n        }\n      );\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reorder/ini_cat_reorder.js","var toggle_dendro_view = require('../dendrogram/toggle_dendro_view');\nvar show_visible_area = require('../zoom/show_visible_area');\nvar ini_zoom_info = require('../zoom/ini_zoom_info');\nvar calc_downsampled_levels = require('../matrix/calc_downsampled_levels');\nvar two_translate_zoom = require('../zoom/two_translate_zoom');\nvar get_previous_zoom = require('../zoom/get_previous_zoom');\n\nmodule.exports = function (cgm, inst_order, inst_rc) {\n  var params = cgm.params;\n\n  var prev_zoom = get_previous_zoom(params);\n\n  var delay_reorder = 0;\n  if (prev_zoom.zoom_y != 1 || prev_zoom.zoom_x != 1) {\n    // reset zoom before reordering\n    two_translate_zoom(cgm, 0, 0, 1);\n    delay_reorder = 1200;\n  }\n\n  // row/col names are swapped, will improve later\n  var other_rc;\n  if (inst_rc === 'row') {\n    other_rc = 'col';\n  } else if (inst_rc === 'col') {\n    other_rc = 'row';\n  }\n\n  params.viz.run_trans = true;\n\n  // save order state\n  if (other_rc === 'row') {\n    params.viz.inst_order.row = inst_order;\n  } else if (other_rc === 'col') {\n    params.viz.inst_order.col = inst_order;\n  }\n\n  if (params.viz.show_dendrogram) {\n    toggle_dendro_view(cgm, inst_rc);\n  }\n\n  if (other_rc === 'row') {\n    params.viz.x_scale.domain(\n      params.matrix.orders[params.viz.inst_order.row + '_row']\n    );\n  } else if (other_rc == 'col') {\n    params.viz.y_scale.domain(\n      params.matrix.orders[params.viz.inst_order.col + '_col']\n    );\n  }\n\n  // only animate transition if there are a small number of tiles\n  var t;\n  if (\n    d3.selectAll(params.root + ' .tile')[0].length <\n    params.matrix.def_large_matrix\n  ) {\n    t = d3\n      .select(params.root + ' .viz_svg')\n      .transition()\n      .duration(2500)\n      .delay(delay_reorder);\n  } else {\n    t = d3.select(params.root + ' .viz_svg');\n  }\n\n  var row_nodes_names = params.network_data.row_nodes_names || [];\n  var col_nodes_names = params.network_data.col_nodes_names || [];\n\n  // only update matrix if not downsampled (otherwise rows are updated)\n  if (params.viz.ds_level === -1) {\n    t.selectAll('.row')\n      .attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n      })\n      .selectAll('.tile')\n      .attr('transform', function (d) {\n        return 'translate(' + params.viz.x_scale(d.pos_x) + ' , 0)';\n      });\n\n    t.selectAll('.tile_up').attr('transform', function (d) {\n      return 'translate(' + params.viz.x_scale(d.pos_x) + ' , 0)';\n    });\n\n    t.selectAll('.tile_dn').attr('transform', function (d) {\n      return 'translate(' + params.viz.x_scale(d.pos_x) + ' , 0)';\n    });\n  }\n\n  // Move Row Labels\n  t.select('.row_label_zoom_container')\n    .selectAll('.row_label_group')\n    .attr('transform', function (d) {\n      var inst_index = row_nodes_names.indexOf(d.name);\n      return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n    });\n\n  // Move Col Labels\n  t.select('.col_zoom_container')\n    .selectAll('.col_label_text')\n    .attr('transform', function (d) {\n      var inst_index = col_nodes_names.indexOf(d.name);\n      return 'translate(' + params.viz.x_scale(inst_index) + ') rotate(-90)';\n    });\n\n  // reorder row categories\n  t.selectAll('.row_cat_group').attr('transform', function (d) {\n    var inst_index = row_nodes_names.indexOf(d.name);\n    return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n  });\n\n  // reorder col_class groups\n  t.selectAll('.col_cat_group').attr('transform', function (d) {\n    var inst_index = col_nodes_names.indexOf(d.name);\n    return 'translate(' + params.viz.x_scale(inst_index) + ',0)';\n  });\n\n  // redefine x and y positions\n  params.network_data.links.forEach(function (d) {\n    d.x = params.viz.x_scale(d.target);\n    d.y = params.viz.y_scale(d.source);\n  });\n\n  params.zoom_info = ini_zoom_info();\n\n  // calculate downsmapling if necessary\n  if (params.viz.ds_num_levels > 0 && params.viz.ds_level >= 0) {\n    calc_downsampled_levels(params);\n    var zooming_stopped = true;\n    var zooming_out = true;\n    var make_all_rows = true;\n\n    // show_visible_area is also run with two_translate_zoom, but at that point\n    // the parameters were not updated and two_translate_zoom if only run\n    // if needed to reset zoom\n    show_visible_area(cgm, zooming_stopped, zooming_out, make_all_rows);\n  }\n\n  setTimeout(function () {\n    params.viz.run_trans = false;\n  }, 2500);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reorder/all_reorder.js","var utils = require('../Utils_clust');\nvar label_constrain_and_trim = require('../labels/label_constrain_and_trim');\nvar show_visible_area = require('./show_visible_area');\nvar ini_zoom_info = require('../zoom/ini_zoom_info');\nvar toggle_grid_lines = require('../matrix/toggle_grid_lines');\n\nmodule.exports = function two_translate_zoom(cgm, pan_dx, pan_dy, fin_zoom) {\n  // console.log('pan_dy: ' + String(pan_dy))\n\n  var params = cgm.params;\n\n  d3.selectAll(params.viz.root_tips).style('display', 'none');\n\n  params.zoom_info = ini_zoom_info();\n\n  show_visible_area(cgm);\n\n  // do not allow while transitioning, e.g. reordering\n  if (!params.viz.run_trans) {\n    // define the commonly used variable half_height\n    var half_height = params.viz.clust.dim.height / 2;\n\n    // y pan room, the pan room has to be less than half_height since\n    // zooming in on a gene that is near the top of the clustergram also causes\n    // panning out of the visible region\n    var y_pan_room = half_height / fin_zoom;\n\n    // prevent visualization from panning down too much\n    // when zooming into genes near the top of the clustergram\n    if (pan_dy >= half_height - y_pan_room) {\n      // console.log(' prevent visualization from panning down too much')\n\n      // explanation of panning rules\n      /////////////////////////////////\n      /*\n        prevent the clustergram from panning down too much\n        if the amount of panning is equal to the half_height then it needs to be reduced\n        effectively, the the visualization needs to be moved up (negative) by some factor\n        of the half-width-of-the-visualization.\n\n        If there was no zooming involved, then the\n        visualization would be centered first, then panned to center the top term\n        this would require a\n        correction to re-center it. However, because of the zooming the offset is\n        reduced by the zoom factor (this is because the panning is occurring on something\n        that will be zoomed into - this is why the pan_dy value is not scaled in the two\n        translate transformations, but it has to be scaled afterwards to set the translate\n        vector)\n        pan_dy = half_height - (half_height)/fin_zoom\n\n        if pan_dy is greater than the pan room, then panning has to be restricted\n        start by shifting back up (negative) by half_height/fin_zoom then shift back down\n        by the difference between half_height and pan_dy (so that the top of the clustergram is\n        visible)\n      */\n\n      var shift_top_viz = half_height - pan_dy;\n      var shift_up_viz = -half_height / fin_zoom + shift_top_viz;\n\n      // reduce pan_dy so that the visualization does not get panned to far down\n      pan_dy = pan_dy + shift_up_viz;\n    }\n\n    // prevent visualization from panning up too much\n    // when zooming into genes at the bottom of the clustergram\n    if (pan_dy < -(half_height - y_pan_room)) {\n      shift_top_viz = half_height + pan_dy;\n\n      shift_up_viz = half_height / fin_zoom - shift_top_viz; //- move_up_one_row;\n\n      // reduce pan_dy so that the visualization does not get panned to far down\n      pan_dy = pan_dy + shift_up_viz;\n    }\n\n    // will improve this !!\n    var zoom_y = fin_zoom;\n    var zoom_x = 1;\n\n    // search duration - the duration of zooming and panning\n    var search_duration = 700;\n\n    // center_y\n    var center_y = -(zoom_y - 1) * half_height;\n\n    // transform clust group\n    ////////////////////////////\n    d3.select(params.root + ' .clust_group')\n      .transition()\n      .duration(search_duration)\n      // first apply the margin transformation\n      // then zoom, then apply the final transformation\n      .attr(\n        'transform',\n        'translate(' +\n          [0, 0 + center_y] +\n          ')' +\n          ' scale(' +\n          zoom_x +\n          ',' +\n          zoom_y +\n          ')' +\n          'translate(' +\n          [pan_dx, pan_dy] +\n          ')'\n      );\n\n    // transform row labels\n    d3.select(params.root + ' .row_label_zoom_container')\n      .transition()\n      .duration(search_duration)\n      .attr(\n        'transform',\n        'translate(' +\n          [0, center_y] +\n          ')' +\n          ' scale(' +\n          zoom_y +\n          ',' +\n          zoom_y +\n          ')' +\n          'translate(' +\n          [0, pan_dy] +\n          ')'\n      );\n\n    // transform row_cat_container\n    // use the offset saved in params, only zoom in the y direction\n    d3.select(params.root + ' .row_cat_container')\n      .transition()\n      .duration(search_duration)\n      .attr(\n        'transform',\n        'translate(' +\n          [0, center_y] +\n          ')' +\n          ' scale(' +\n          1 +\n          ',' +\n          zoom_y +\n          ')' +\n          'translate(' +\n          [0, pan_dy] +\n          ')'\n      );\n\n    d3.select(params.root + ' .row_dendro_container')\n      .transition()\n      .duration(search_duration)\n      .attr(\n        'transform',\n        'translate(' +\n          [0, center_y] +\n          ')' +\n          ' scale(' +\n          zoom_x +\n          ',' +\n          zoom_y +\n          ')' +\n          'translate(' +\n          [params.viz.uni_margin / 2, pan_dy] +\n          ')'\n      );\n\n    // toggle crop buttons\n    var inst_button_opacity;\n    ['row', 'col'].forEach(function (inst_rc) {\n      inst_button_opacity = d3\n        .select(params.root + ' .' + inst_rc + '_dendro_crop_buttons')\n        .style('opacity');\n      d3.selectAll(params.root + ' .' + inst_rc + '_dendro_crop_buttons').style(\n        'opacity',\n        0\n      );\n      setTimeout(show_crop_buttons, 700, inst_rc, inst_button_opacity);\n    });\n\n    // transform col labels\n    d3.select(params.root + ' .col_zoom_container')\n      .transition()\n      .duration(search_duration)\n      .attr(\n        'transform',\n        ' scale(' +\n          zoom_x +\n          ',' +\n          zoom_x +\n          ')' +\n          'translate(' +\n          [pan_dx, 0] +\n          ')'\n      );\n\n    // transform col_class\n    d3.select(params.root + ' .col_cat_container')\n      .transition()\n      .duration(search_duration)\n      .attr(\n        'transform',\n        ' scale(' + zoom_x + ',' + 1 + ')' + 'translate(' + [pan_dx, 0] + ')'\n      );\n\n    d3.select(params.root + ' .col_dendro_container')\n      .transition()\n      .duration(search_duration)\n      .attr(\n        'transform',\n        ' scale(' +\n          zoom_x +\n          ',' +\n          1 +\n          ')' +\n          'translate(' +\n          [pan_dx, params.viz.uni_margin / 2] +\n          ')'\n      );\n\n    // set y translate: center_y is positive, positive moves the visualization down\n    // the translate vector has the initial margin, the first y centering, and pan_dy\n    // times the scaling zoom_y\n    var net_y_offset = params.viz.clust.margin.top + center_y + pan_dy * zoom_y;\n    var net_x_offset = params.viz.clust.margin.left + pan_dx;\n\n    // reset the zoom and translate\n    params.zoom_behavior.scale(zoom_y).translate([net_x_offset, net_y_offset]);\n\n    label_constrain_and_trim(params);\n\n    // re-size of the highlighting rects\n    /////////////////////////////////////////\n    if (\n      d3.select(params.root + ' .row_label_zoom_container text').empty() ===\n      false\n    ) {\n      d3.select(params.root + ' .row_label_zoom_container').each(function () {\n        // get the bounding box of the row label text\n        var bbox = d3.select(this).select('text')[0][0].getBBox();\n\n        // use the bounding box to set the size of the rect\n        d3.select(this)\n          .select('rect')\n          .attr('x', bbox.x * 0.5)\n          .attr('y', 0)\n          .attr('width', bbox.width * 0.5)\n          .attr('height', params.viz.y_scale.rangeBand())\n          .style('fill', 'yellow');\n      });\n    }\n\n    // reset crop button zooming\n    d3.select(params.root + ' .row_dendro_icons_group').attr(\n      'transform',\n      'translate(' +\n        [0, 0 + center_y] +\n        ')' +\n        ' scale(' +\n        zoom_x +\n        ',' +\n        zoom_y +\n        ')' +\n        'translate(' +\n        [pan_dx, pan_dy] +\n        ')'\n    );\n\n    d3.select(params.root + ' .row_dendro_icons_group')\n      .selectAll('path')\n      .attr('transform', function (d) {\n        var inst_x = params.viz.uni_margin;\n        var inst_y = d.pos_mid;\n        return (\n          'translate(' +\n          inst_x +\n          ',' +\n          inst_y +\n          ') ' +\n          'scale(1, ' +\n          1 / zoom_y +\n          ')'\n        );\n      });\n\n    // console.log('zooming x and y')\n    // console.log(zoom_x)\n    // console.log(zoom_y)\n\n    // need to improve behavior\n    d3.select(params.root + ' .col_dendro_icons_group').attr(\n      'transform',\n      function () {\n        var inst_trans =\n          // 'translate(' + [0, 0 + center_y] + ')' +\n          ' scale(' + zoom_x + ',' + zoom_y + ')';\n        // + 'translate(' + [pan_dx, pan_dy ] + ')';\n        return inst_trans;\n      }\n    );\n\n    d3.select(params.root + ' .col_dendro_icons_group')\n      .selectAll('path')\n      .attr('transform', function (d) {\n        var inst_x = d.pos_mid;\n        var inst_y = params.viz.uni_margin;\n        // return 'translate('+ inst_x +',' + inst_y + ') ' + 'scale('+1/zoom_x+',1)';\n        return 'translate(' + inst_x + ',' + inst_y + ') ' + 'scale(1,1)';\n      });\n\n    // column value bars\n    ///////////////////////\n    // reduce the height of the column value bars based on the zoom applied\n    // recalculate the height and divide by the zooming scale\n    // col_label_obj.select('rect')\n    if (utils.has(params.network_data.col_nodes[0], 'value')) {\n      d3.selectAll(params.root + ' .col_bars').attr('width', function (d) {\n        var inst_value = 0;\n        if (d.value > 0) {\n          inst_value = params.labels.bar_scale_col(d.value) / zoom_x;\n        }\n        return inst_value;\n      });\n    }\n\n    if (utils.has(params.network_data.row_nodes[0], 'value')) {\n      d3.selectAll(params.root + ' .row_bars')\n        .transition()\n        .duration(search_duration)\n        .attr('width', function (d) {\n          var inst_value = 0;\n          inst_value = params.labels.bar_scale_row(Math.abs(d.value)) / zoom_y;\n          return inst_value;\n        })\n        .attr('x', function (d) {\n          var inst_value = 0;\n          inst_value = -params.labels.bar_scale_row(Math.abs(d.value)) / zoom_y;\n          return inst_value;\n        });\n    }\n\n    toggle_grid_lines(params);\n  }\n\n  function show_crop_buttons(inst_rc, inst_button_opacity) {\n    d3.selectAll(params.root + ' .' + inst_rc + '_dendro_crop_buttons')\n      .transition()\n      .duration(search_duration)\n      .style('opacity', inst_button_opacity);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/two_translate_zoom.js","var utils = require('../Utils_clust');\nvar trim_text = require('../zoom/trim_text');\nvar constrain_font_size = require('../zoom/constrain_font_size');\n\nmodule.exports = function label_constrain_and_trim(params) {\n  // console.log('label_constrain_and_trim');\n\n  // reset text in rows and columns\n  d3.selectAll(params.root + ' .row_label_group')\n    .select('text')\n    .text(function (d) {\n      return utils.normal_name(d);\n    });\n\n  d3.selectAll(params.root + ' .col_label_text')\n    .select('text')\n    .text(function (d) {\n      return utils.normal_name(d);\n    });\n\n  constrain_font_size(params);\n\n  d3.selectAll(params.root + ' .row_label_group').each(function () {\n    trim_text(params, this, 'row');\n  });\n\n  d3.selectAll(params.root + ' .col_label_group').each(function () {\n    trim_text(params, this, 'col');\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/label_constrain_and_trim.js","module.exports = function (params, inst_selection, inst_rc) {\n  if (d3.select(inst_selection).style('display') != 'none') {\n    // trim text that is longer than the container\n    var inst_zoom;\n    var inst_width;\n    var trimmed_text;\n    var current_num_char;\n    var inst_text;\n    var original_text;\n    var keep_num_char;\n    var i;\n\n    var max_width = params.viz.norm_labels.width[inst_rc];\n\n    if (inst_rc === 'row') {\n      if (params.viz.zoom_ratio.y) {\n        inst_zoom = params.zoom_behavior.scale() / params.viz.zoom_ratio.y;\n      } else {\n        inst_zoom = params.zoom_behavior.scale();\n      }\n      // num_trims = params.labels.row_max_char;\n    } else {\n      if (params.viz.zoom_ratio.x > 1) {\n        inst_zoom = params.zoom_behavior.scale() / params.viz.zoom_ratio.x;\n      } else {\n        inst_zoom = params.zoom_behavior.scale();\n      }\n      // num_trims = params.labels.col_max_char;\n    }\n\n    var num_trims;\n    d3.select(inst_selection)\n      .select('text')\n      .each(function (d) {\n        num_trims = d.name.length;\n      });\n\n    var tmp_width = d3\n      .select(inst_selection)\n      .select('text')\n      .node()\n      .getBBox().width;\n\n    inst_width = calc_width(tmp_width, inst_zoom);\n\n    if (inst_width > max_width) {\n      for (i = 1; i < num_trims; i++) {\n        if (inst_width > max_width) {\n          d3.select(inst_selection).select('text').text(trim);\n\n          tmp_width = d3\n            .select(inst_selection)\n            .select('text')\n            .node()\n            .getBBox().width;\n\n          inst_width = calc_width(tmp_width, inst_zoom);\n        }\n      }\n    } else if (inst_width < max_width * 0.75) {\n      for (i = 1; i < num_trims; i++) {\n        if (inst_width < max_width * 0.75) {\n          d3.select(inst_selection).select('text').text(add_back);\n\n          tmp_width = d3\n            .select(inst_selection)\n            .select('text')\n            .node()\n            .getBBox().width;\n\n          inst_width = calc_width(tmp_width, inst_zoom);\n        }\n      }\n    }\n  }\n\n  function trim() {\n    inst_text = d3.select(this).text();\n    current_num_char = inst_text.length;\n    keep_num_char = current_num_char - 3;\n    trimmed_text = inst_text.substring(0, keep_num_char) + '..';\n    return trimmed_text;\n  }\n\n  function add_back(d) {\n    inst_text = d3.select(this).text();\n    if (inst_text.slice(-2) === '..') {\n      current_num_char = inst_text.length - 2;\n    } else {\n      current_num_char = inst_text.length;\n    }\n\n    original_text = d.name;\n    keep_num_char = current_num_char + 2;\n    trimmed_text = original_text.substring(0, keep_num_char) + '..';\n\n    // if '..' was added to original text\n    if (trimmed_text.length > original_text.length) {\n      trimmed_text = original_text;\n    }\n\n    return trimmed_text;\n  }\n\n  function calc_width(tmp_width, inst_zoom) {\n    if (inst_zoom < 1) {\n      inst_width = tmp_width;\n    } else {\n      inst_width = tmp_width * inst_zoom;\n    }\n\n    return inst_width;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/trim_text.js","var calc_real_font_size = require('./calc_real_font_size');\n\nmodule.exports = function constrain_font_size(params) {\n  var tmp_font_size = params.labels.default_fs_row;\n  var inst_zoom;\n  var min_font_size = 3;\n\n  var real_font_size = calc_real_font_size(params);\n\n  // rows\n  ////////////////////////////////////\n  if (real_font_size.row > min_font_size) {\n    if (real_font_size.row > params.labels.max_allow_fs) {\n      if (params.viz.zoom_ratio.y) {\n        inst_zoom = params.zoom_behavior.scale() / params.viz.zoom_ratio.y;\n      } else {\n        inst_zoom = params.zoom_behavior.scale();\n      }\n\n      if (inst_zoom < 1) {\n        inst_zoom = 1;\n      }\n\n      tmp_font_size = params.labels.max_allow_fs / inst_zoom;\n\n      d3.selectAll(params.root + ' .row_label_group')\n        .select('text')\n        .style('font-size', tmp_font_size + 'px')\n        .attr('y', params.viz.rect_height * 0.5 + tmp_font_size * 0.35);\n    } else {\n      d3.selectAll(params.root + ' .row_label_group')\n        .select('text')\n        .style('font-size', params.labels.default_fs_row + 'px')\n        .attr(\n          'y',\n          params.viz.rect_height * 0.5 + params.labels.default_fs_row * 0.35\n        );\n    }\n  }\n\n  // columns\n  //////////////////////////////////////\n  if (real_font_size.col > min_font_size) {\n    if (real_font_size.col > params.labels.max_allow_fs) {\n      if (params.viz.zoom_ratio.x > 1) {\n        inst_zoom = params.zoom_behavior.scale() / params.viz.zoom_ratio.x;\n      } else {\n        inst_zoom = params.zoom_behavior.scale();\n      }\n\n      if (inst_zoom < 1) {\n        inst_zoom = 1;\n      }\n\n      tmp_font_size = params.labels.max_allow_fs / inst_zoom;\n\n      if (tmp_font_size > 0.7 * params.viz.rect_width) {\n        tmp_font_size = 0.7 * params.viz.rect_width;\n      }\n\n      d3.selectAll(params.root + ' .col_label_text')\n        .select('text')\n        .style('font-size', tmp_font_size + 'px');\n    } else {\n      d3.selectAll(params.root + ' .col_label_text')\n        .select('text')\n        .style('font-size', params.labels.default_fs_col + 'px');\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/constrain_font_size.js","module.exports = function calc_real_font_size(params) {\n  var real_font_size = {};\n  // zoom_switch behavior has to change with zoom_ratio.y\n  if (params.viz.zoom_ratio.x > 1) {\n    real_font_size.row =\n      params.labels.default_fs_row * params.zoom_behavior.scale();\n    real_font_size.col =\n      params.labels.default_fs_col * params.zoom_behavior.scale();\n  } else {\n    real_font_size.row =\n      (params.labels.default_fs_row * params.zoom_behavior.scale()) /\n      params.viz.zoom_ratio.y;\n    real_font_size.col =\n      params.labels.default_fs_col * params.zoom_behavior.scale();\n  }\n\n  return real_font_size;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/calc_real_font_size.js","module.exports = function toggle_grid_lines(params) {\n  if (params.zoom_info.zoom_x * params.viz.border_width.x > 1) {\n    d3.selectAll(params.root + ' .vert_lines')\n      .select('line')\n      .style('display', 'block')\n      .style('opacity', 0)\n      .transition()\n      .style('opacity', 1);\n  } else {\n    d3.selectAll(params.root + ' .vert_lines')\n      .select('line')\n      .style('display', 'none');\n  }\n\n  if (params.zoom_info.zoom_y * params.viz.border_width.y > 1) {\n    d3.selectAll(params.root + ' .horz_lines')\n      .select('line')\n      .style('display', 'block')\n      .style('opacity', 0)\n      .transition()\n      .style('opacity', 1);\n  } else {\n    d3.selectAll(params.root + ' .horz_lines')\n      .select('line')\n      .style('display', 'none');\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/toggle_grid_lines.js","var get_cat_title = require('../categories/get_cat_title');\nvar d3_tip_custom = require('../tooltip/d3_tip_custom');\nvar utils = require('../Utils_clust');\n\nmodule.exports = function make_row_cat_super_labels(cgm) {\n  var params = cgm.params;\n\n  var viz = params.viz;\n  var extra_x_room = 2.75;\n\n  if (d3.select(params.root + ' .row_cat_label_container').empty()) {\n    d3.select(cgm.params.viz.viz_svg)\n      .append('g')\n      .classed('row_cat_label_container', true);\n\n    // append background section for optional value-bars (e.g. enrichment pvals)\n    d3.select(cgm.params.viz.viz_svg + ' .row_cat_label_container')\n      .append('g')\n      .classed('row_cat_label_bar_container', true);\n  }\n\n  var x_offset = viz.clust.margin.left + viz.clust.dim.width + viz.uni_margin;\n  var y_offset =\n    viz.norm_labels.margin.top +\n    viz.norm_labels.width.col +\n    2.5 * viz.uni_margin;\n  var cat_text_size = 1.15 * viz.cat_room.symbol_width;\n  var cat_super_opacity = 0.65;\n  var extra_y_room = 1.25;\n\n  d3.select(params.root + ' .row_cat_label_container').attr(\n    'transform',\n    function () {\n      x_offset =\n        viz.norm_labels.margin.left +\n        viz.norm_labels.width.row +\n        viz.cat_room.symbol_width +\n        extra_x_room * viz.uni_margin;\n      y_offset = viz.clust.margin.top - viz.uni_margin;\n      return 'translate(' + x_offset + ',' + y_offset + ') rotate(-90)';\n    }\n  );\n\n  // clear old categories\n  d3.selectAll(params.root + ' .row_cat_label_container text').remove();\n  d3.selectAll(params.root + ' .row_cat_selection_bar').remove();\n  // d3.selectAll(params.root+' .row_cat_label_bar_container rect').remove();\n\n  // remove any old row_cat_super tooltips from this visualization\n  d3.selectAll(cgm.params.viz.root_tips + '_row_cat_super').remove();\n\n  // d3-tooltip\n  var tmp_y_offset = 50; // viz.clust.margin.top - viz.uni_margin;\n  var tmp_x_offset = -75;\n  var cat_tip = d3_tip_custom()\n    .attr('class', function () {\n      var root_tip_selector = params.viz.root_tips.replace('.', '');\n      var class_string =\n        root_tip_selector + ' d3-tip ' + root_tip_selector + '_row_cat_super';\n      return class_string;\n    })\n    .direction('south_custom')\n    .offset([tmp_y_offset, tmp_x_offset])\n    .style('display', 'none')\n    .style('opacity', 0)\n    .html(function (d) {\n      var full_string;\n\n      var tmp_string = params.network_data.row_nodes[0][d];\n\n      if (tmp_string.indexOf('<p>') > -1) {\n        var start_string = tmp_string.split(': ')[0];\n        var end_string = tmp_string.split('<p>')[1];\n\n        full_string = start_string + '<p>' + end_string;\n      } else {\n        full_string = get_cat_title(viz, d, 'row');\n      }\n\n      return full_string;\n    });\n\n  var unit_length = extra_y_room * viz.cat_room.symbol_width;\n  var bar_width = unit_length * 0.9;\n\n  // show row label categories even if viewing a simmilarity matrix\n\n  d3.select(params.root + ' .row_cat_label_container')\n    .selectAll()\n    .data(viz.all_cats.row)\n    .enter()\n    .append('text')\n    .style('width', '100px')\n    .style('height', bar_width + 'px')\n    .classed('row_cat_super', true)\n    .style('font-size', cat_text_size + 'px')\n    .style('opacity', cat_super_opacity)\n    .style('cursor', 'default')\n    .attr('transform', function (d) {\n      var inst_y =\n        extra_y_room *\n        viz.cat_room.symbol_width *\n        parseInt(d.split('-')[1], 10);\n      return 'translate(0,' + inst_y + ')';\n    })\n    .text(function (d) {\n      return get_cat_title(viz, d, 'row');\n    });\n\n  // selection bar\n  ///////////////////////////////\n  d3.select(params.root + ' .row_cat_label_container')\n    .selectAll()\n    .data(viz.all_cats.row)\n    .enter()\n    .append('rect')\n    .classed('row_cat_super', true)\n    .classed('row_cat_selection_bar', true)\n    .style('height', bar_width + 'px')\n    .style('fill', 'green')\n    .style('width', '120px')\n    .style('opacity', 0)\n    .attr('transform', function (d) {\n      var inst_y = unit_length * (parseInt(d.split('-')[1], 10) - 0.75);\n      return 'translate(0,' + inst_y + ')';\n    })\n    .on('mouseover', function (d) {\n      d3.selectAll(params.viz.root_tips + '_row_cat_super')\n        .style('display', 'block')\n        .style('opacity', 1);\n\n      cat_tip.show(d);\n    })\n    .on('mouseout', function () {\n      cat_tip.hide(this);\n      // might not need\n      d3.selectAll('.d3-tip').style('display', 'none');\n\n      d3.selectAll(params.viz.root_tips + '_row_cat_super')\n        .style('display', 'none')\n        .style('opacity', 0);\n    });\n\n  // row category super-label mouseover\n  //////////////////////////////////////\n  if (d3.select(params.root + ' .row_cat_selection_bar').empty() === false) {\n    d3.selectAll(params.root + ' .row_cat_selection_bar').call(cat_tip);\n  }\n\n  if (utils.has(params.network_data, 'row_cat_bars')) {\n    // Enrichrgram title\n    /////////////////////\n    d3.select(params.root + ' .enr_title').remove();\n\n    var enr_title = d3\n      .select(params.root + ' .viz_svg')\n      .append('g')\n      .classed('enr_title', true)\n      .attr('transform', function () {\n        var trans = d3\n          .select(params.root + ' .row_cat_label_container')\n          .attr('transform')\n          .split('(')[1]\n          .split(')')[0];\n        var x_offset = Number(trans.split(',')[0]) - 10;\n\n        return 'translate(' + String(x_offset) + ', 0)';\n      });\n\n    enr_title\n      .append('rect')\n      .attr('width', params.viz.cat_room.row)\n      .attr('height', 25)\n      .attr('fill', 'white');\n\n    var library_string = params.network_data.enrichrgram_lib.substring(0, 40);\n\n    enr_title\n      .append('text')\n      .attr('transform', 'translate(0, 17)')\n      .text(library_string.replace(/_/g, ' '))\n      .style('font-size', '15px')\n      .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif');\n\n    // Enrichr bars\n    ////////////////////\n    d3.selectAll(params.root + ' .enrichr_bars').remove();\n\n    var bar_height = params.viz.clust.margin.top - 35;\n    var max_score = params.network_data.row_cat_bars[0];\n    var bar_scale = d3.scale\n      .linear()\n      .domain([0, max_score])\n      .range([0, bar_height]);\n\n    d3.select(params.root + ' .row_cat_label_bar_container')\n      .selectAll()\n      .data(params.network_data.row_cat_bars)\n      .enter()\n      .append('rect')\n      .classed('enrichr_bars', true)\n      .attr('height', bar_width + 'px')\n      .attr('fill', 'red')\n      .attr('width', function (d) {\n        var bar_length = bar_scale(d);\n        return bar_length + 'px';\n      })\n      .attr('opacity', 0.4)\n      .attr('transform', function (d, i) {\n        var inst_y = unit_length * (i - 0.75);\n        return 'translate(0, ' + inst_y + ')';\n      });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/labels/make_row_cat_super_labels.js","// var resize_viz = require('./reset_size/resize_viz');\n\nmodule.exports = function initialize_resizing(cgm) {\n  // customization\n  // var params = cgm.params;\n  // var exp_button;\n  // // d3.select(window).on('resize', null);\n  // // // resize window\n  // // if (params.viz.resize) {\n  // //   d3.select(window).on('resize', function () {\n  // //     d3.select(params.viz.viz_svg).style('opacity', 0.5);\n  // //     var wait_time = 500;\n  // //     if (params.viz.run_trans === true) {\n  // //       wait_time = 2500;\n  // //     }\n  // //     setTimeout(resize_viz, wait_time, params);\n  // //   });\n  // // }\n  // // if (params.viz.expand_button) {\n  // d3.select(params.root + \" .expand_button\").on(\"click\", null);\n  // var expand_opacity = 0.4;\n  // if (d3.select(params.root + \" .expand_button\").empty()) {\n  //   exp_button = d3\n  //     .select(params.viz.viz_svg)\n  //     .append(\"text\")\n  //     .attr(\"class\", \"expand_button\");\n  // } else {\n  //   exp_button = d3.select(params.root + \" .expand_button\");\n  // }\n  // exp_button\n  //   .attr(\"text-anchor\", \"middle\")\n  //   .attr(\"dominant-baseline\", \"central\")\n  //   .attr(\"font-family\", \"FontAwesome\")\n  //   .attr(\"font-size\", \"30px\")\n  //   .text(function () {\n  //     if (params.viz.is_expand === false) {\n  //       // expand button\n  //       return \"\\uf0b2\";\n  //     } else {\n  //       // menu button\n  //       return \"\\uf0c9\";\n  //     }\n  //   })\n  //   .attr(\"y\", \"25px\")\n  //   .attr(\"x\", \"25px\")\n  //   .style(\"cursor\", \"pointer\")\n  //   .style(\"opacity\", expand_opacity)\n  //   .on(\"mouseover\", function () {\n  //     d3.select(this).style(\"opacity\", 0.75);\n  //   })\n  //   .on(\"mouseout\", function () {\n  //     d3.select(this).style(\"opacity\", expand_opacity);\n  //   })\n  //   .on(\"click\", function () {\n  //     // expand view\n  //     if (params.viz.is_expand === false) {\n  //       d3.select(this).text(function () {\n  //         // menu button\n  //         return \"\\uf0c9\";\n  //       });\n  //       params.viz.is_expand = true;\n  //       d3.selectAll(params.root + \" .borders\").style(\"fill\", \"white\");\n  //       // d3.select(params.root+' .footer_section').style('display', 'none');\n  //       d3.select(params.root + \" .sidebar_wrapper\").style(\"display\", \"none\");\n  //       // contract view\n  //     } else {\n  //       d3.select(this).text(function () {\n  //         // expand button\n  //         return \"\\uf0b2\";\n  //       });\n  //       params.viz.is_expand = false;\n  //       d3.selectAll(params.root + \" .borders\").style(\"fill\", \"#eee\");\n  //       // d3.select(params.root+' .footer_section').style('display', 'block');\n  //       d3.select(params.root + \" .viz_wrapper\").style(\"width\", \"100px\");\n  //       d3.select(params.root + \" .sidebar_wrapper\").style(\"display\", \"block\");\n  //     }\n  //     // // resize parent div\n  //     // set_viz_wrapper_size(params);\n  //     d3.select(params.viz.viz_svg).style(\"opacity\", 0.5);\n  //     var wait_time = 500;\n  //     if (params.viz.run_trans == true) {\n  //       wait_time = 2500;\n  //     }\n  //     setTimeout(resize_viz, wait_time, cgm);\n  //   });\n  // // }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/initialize_resizing.js","var two_translate_zoom = require('./two_translate_zoom');\n\nmodule.exports = function ini_doubleclick(cgm) {\n  var params = cgm.params;\n  // disable double-click zoom\n  d3.selectAll(params.viz.zoom_element).on('dblclick.zoom', null);\n\n  d3.select(params.viz.zoom_element).on('dblclick', function () {\n    two_translate_zoom(cgm, 0, 0, 1);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/ini_doubleclick.js","var cat_tooltip_text = require('./cat_tooltip_text');\nvar d3_tip_custom = require('../tooltip/d3_tip_custom');\nvar reset_cat_opacity = require('./reset_cat_opacity');\nvar ini_cat_opacity = require('./ini_cat_opacity');\n// var click_filter_cats = require('./click_filter_cats');\nvar get_cat_names = require('../categories/get_cat_names');\nvar each = require('underscore/cjs/each');\nvar $ = require('jquery');\n\nmodule.exports = function make_col_cat(cgm) {\n  var params = cgm.params;\n\n  // make or reuse outer container\n  if (d3.select(params.root + ' .col_cat_outer_container').empty()) {\n    d3.select(params.root + ' .col_container')\n      .append('g')\n      .attr('class', 'col_cat_outer_container')\n      .attr('transform', function () {\n        var inst_offset = params.viz.norm_labels.width.col + 2;\n        return 'translate(0,' + inst_offset + ')';\n      })\n      .append('g')\n      .attr('class', 'col_cat_container');\n  } else {\n    d3.select(params.root + ' .col_container')\n      .select('col_cat_outer_container')\n      .attr('transform', function () {\n        var inst_offset = params.viz.norm_labels.width.col + 2;\n        return 'translate(0,' + inst_offset + ')';\n      });\n  }\n\n  // remove old col_cat_tips\n  d3.selectAll(params.viz.root_tips + '_col_cat_tip').remove();\n\n  // d3-tooltip\n  var cat_tip = d3_tip_custom()\n    .attr('class', function () {\n      var root_tip_selector = params.viz.root_tips.replace('.', '');\n      var class_string =\n        root_tip_selector + ' d3-tip ' + root_tip_selector + '_col_cat_tip';\n      return class_string;\n    })\n    .direction('s')\n    .offset([5, 0])\n    .style('display', 'none')\n    .html(function (d) {\n      return cat_tooltip_text(params, d, this, 'col');\n    });\n\n  // append groups - each will hold classification rects\n  d3.select(params.root + ' .col_cat_container')\n    .selectAll('g')\n    .data(params.network_data.col_nodes, function (d) {\n      return d.name;\n    })\n    .enter()\n    .append('g')\n    .attr('class', 'col_cat_group')\n    .attr('transform', function (d) {\n      var inst_index = (params.network_data.col_nodes_names || []).indexOf(\n        d.name\n      );\n      // return 'translate(' + params.viz.x_scale(d.col_index) + ',0)';\n      return 'translate(' + params.viz.x_scale(inst_index) + ',0)';\n    });\n\n  d3.select(params.root + ' .col_cat_container')\n    .selectAll('.col_cat_group')\n    .call(cat_tip);\n\n  // add category rects\n  d3.selectAll(params.root + ' .col_cat_group').each(function () {\n    var inst_selection = this;\n    var cat_rect;\n\n    each(params.viz.all_cats.col, function (inst_cat) {\n      var inst_num = parseInt(inst_cat.split('-')[1], 10);\n      var cat_rect_class = 'col_cat_rect_' + String(inst_num);\n\n      if (\n        d3\n          .select(inst_selection)\n          .select('.' + cat_rect_class)\n          .empty()\n      ) {\n        cat_rect = d3\n          .select(inst_selection)\n          .append('rect')\n          .attr('class', cat_rect_class)\n          .attr('cat', inst_cat)\n          .attr('transform', function () {\n            var cat_room =\n              params.viz.cat_room.symbol_width + params.viz.cat_room.separation;\n            var inst_shift = inst_num * cat_room;\n            return 'translate(0,' + inst_shift + ')';\n          })\n          .on('click', function (d) {\n            if (d3.select(this).classed('cat_strings')) {\n              var found_names = get_cat_names(params, d, this, 'col');\n\n              $(params.root + ' .dendro_info').modal('toggle');\n              var group_string = found_names.join(', ');\n              d3.select(params.root + ' .dendro_info input').attr(\n                'value',\n                group_string\n              );\n            }\n          });\n      } else {\n        cat_rect = d3.select(inst_selection).select('.' + cat_rect_class);\n      }\n\n      cat_rect\n        .attr('width', params.viz.x_scale.rangeBand())\n        .attr('height', params.viz.cat_room.symbol_width)\n        .style('fill', function (d) {\n          var cat_name = d[inst_cat];\n          var inst_color = params.viz.cat_colors.col[inst_cat][cat_name];\n          return inst_color;\n        })\n        .on('mouseover', cat_tip.show)\n        .on('mouseout', function () {\n          cat_tip.hide(this);\n          reset_cat_opacity(params);\n          d3.select(this).classed('hovering', false);\n\n          d3.selectAll('.d3-tip').style('display', 'none');\n        });\n\n      ini_cat_opacity(params.viz, 'col', cat_rect, inst_cat);\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/make_col_cat.js","var get_cat_title = require('../categories/get_cat_title');\n\nmodule.exports = function cat_tooltip_text(\n  params,\n  inst_data,\n  inst_selection,\n  inst_rc\n) {\n  d3.selectAll(params.viz.root_tips + '_col_cat_tip').style('display', 'block');\n\n  d3.selectAll(params.viz.root_tips + '_row_cat_tip').style('display', 'block');\n\n  // category index\n  var inst_cat = d3.select(inst_selection).attr('cat');\n  var cat_title = get_cat_title(params.viz, inst_cat, inst_rc);\n  var cat_name = inst_data[inst_cat];\n\n  if (typeof cat_name === 'string') {\n    if (cat_name.indexOf(': ') >= 0) {\n      cat_name = cat_name.split(': ')[1];\n    }\n  }\n\n  /* old category string */\n  // var cat_string = cat_title + ': '+ cat_name;\n\n  /* new string with click instructions */\n  var cat_string =\n    '<div>' +\n    cat_title +\n    ': ' +\n    cat_name +\n    '</div> <div> <br>Click for Category Menu </div>';\n\n  d3.select(inst_selection).classed('hovering', true);\n\n  setTimeout(highlight_categories, 500);\n\n  return cat_string;\n\n  function highlight_categories() {\n    var run_highlighting = false;\n\n    if (d3.select(inst_selection).classed('hovering')) {\n      var node_types = [inst_rc];\n\n      if (params.viz.sim_mat) {\n        node_types = ['row', 'col'];\n      }\n\n      node_types.forEach(function (tmp_rc) {\n        // only highlight string categories that are not 'false' categories\n        if (typeof cat_name === 'string') {\n          if (cat_name.indexOf('Not ') < 0 && cat_name != 'false') {\n            run_highlighting = true;\n          }\n        }\n\n        if (run_highlighting) {\n          d3.selectAll(params.root + ' .' + tmp_rc + '_cat_group')\n            .selectAll('rect')\n            .style('opacity', function (d) {\n              var inst_opacity = d3.select(this).style('opacity');\n\n              if (\n                d3.select(this).classed('cat_strings') &&\n                d3.select(this).classed('filtered_cat') === false\n              ) {\n                var tmp_name;\n                var tmp_cat = d3.select(this).attr('cat');\n\n                if (d[tmp_cat].indexOf(': ') >= 0) {\n                  tmp_name = d[tmp_cat].split(': ')[1];\n                } else {\n                  tmp_name = d[tmp_cat];\n                }\n\n                if (tmp_cat === inst_cat && tmp_name === cat_name) {\n                  inst_opacity = params.viz.cat_colors.active_opacity;\n                } else {\n                  inst_opacity = params.viz.cat_colors.opacity / 4;\n                }\n              }\n\n              return inst_opacity;\n            });\n        }\n      });\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/cat_tooltip_text.js","module.exports = function reset_cat_opacity(params) {\n  ['row', 'col'].forEach(function (inst_rc) {\n    d3.selectAll(params.root + ' .' + inst_rc + '_cat_group')\n      .selectAll('rect')\n      .style('opacity', function () {\n        var inst_opacity = d3.select(this).style('opacity');\n\n        if (\n          d3.select(this).classed('cat_strings') &&\n          d3.select(this).classed('filtered_cat') === false\n        ) {\n          inst_opacity = params.viz.cat_colors.opacity;\n        }\n\n        return inst_opacity;\n      });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/reset_cat_opacity.js","module.exports = function ini_cat_opacity(\n  viz,\n  inst_rc,\n  cat_rect,\n  inst_cat,\n  updating = false\n) {\n  // debugger;\n\n  var super_string = ': ';\n  var inst_type = viz.cat_info[inst_rc][inst_cat].type;\n\n  // set opacity based on string or value cats\n  if (inst_type === 'cat_strings') {\n    // optionally have categories transition in\n    if (updating) {\n      cat_rect\n        .classed('cat_strings', true)\n        .style('opacity', 0)\n        .transition()\n        .duration(1000)\n        .style('opacity', viz.cat_colors.opacity);\n    } else {\n      // opacity is fixed\n      cat_rect\n        .classed('cat_strings', true)\n        .style('opacity', viz.cat_colors.opacity);\n    }\n  } else {\n    // opacity varies based on value\n    cat_rect\n      .classed('cat_values', true)\n      .style('opacity', function (d) {\n        var unprocessed_val = d[inst_cat];\n\n        var cat_value = get_cat_value(unprocessed_val);\n\n        return viz.cat_info[inst_rc][inst_cat].cat_scale(Math.abs(cat_value));\n      })\n      .style('fill', function (d) {\n        var inst_color;\n\n        var cat_value = get_cat_value(d[inst_cat]);\n\n        // get positive and negative colors\n        if (cat_value > 0) {\n          inst_color = viz.cat_value_colors[0];\n        } else {\n          inst_color = viz.cat_value_colors[1];\n        }\n\n        return inst_color;\n      });\n  }\n\n  function get_cat_value(unprocessed_value) {\n    if (typeof unprocessed_value === 'string') {\n      if (unprocessed_value.indexOf(super_string) > -1) {\n        unprocessed_value = unprocessed_value.split(super_string)[1];\n      }\n    }\n\n    var cat_value = parseFloat(unprocessed_value);\n\n    return cat_value;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/ini_cat_opacity.js","var utils = require('../Utils_clust');\nvar filter = require('underscore/cjs/each');\n\nmodule.exports = function get_cat_names(\n  params,\n  inst_data,\n  inst_selection,\n  inst_rc\n) {\n  // category index\n  var inst_cat = d3.select(inst_selection).attr('cat');\n  var cat_name = inst_data[inst_cat];\n  var tmp_nodes = params.network_data[inst_rc + '_nodes'];\n\n  var found_nodes = filter(tmp_nodes, function (d) {\n    return d[inst_cat] == cat_name;\n  });\n\n  var found_names = utils.pluck(found_nodes, 'name');\n\n  return found_names;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/get_cat_names.js","var cat_tooltip_text = require('./cat_tooltip_text');\nvar d3_tip_custom = require('../tooltip/d3_tip_custom');\nvar reset_cat_opacity = require('./reset_cat_opacity');\nvar ini_cat_opacity = require('./ini_cat_opacity');\n// var click_filter_cats = require('./click_filter_cats');\nvar get_cat_names = require('../categories/get_cat_names');\nvar each = require('underscore/cjs/each');\nvar $ = require('jquery');\n\nmodule.exports = function make_row_cat(cgm, updating = false) {\n  var params = cgm.params;\n\n  // make or reuse outer container\n  if (d3.select(params.root + ' .row_cat_outer_container').empty()) {\n    d3.select(params.root + ' .row_container')\n      .append('g')\n      .attr('class', 'row_cat_outer_container')\n      .attr(\n        'transform',\n        'translate(' + params.viz.norm_labels.width.row + ',0)'\n      )\n      .append('g')\n      .attr('class', 'row_cat_container');\n  } else {\n    d3.select(params.root + ' .row_container')\n      .select('row_cat_outer_container')\n      .attr(\n        'transform',\n        'translate(' + params.viz.norm_labels.width.row + ',0)'\n      );\n  }\n\n  // white background\n  if (\n    d3\n      .select(params.root + ' .row_cat_container')\n      .select('.white_bars')\n      .empty()\n  ) {\n    d3.select(params.root + ' .row_cat_container')\n      .append('rect')\n      .attr('class', 'white_bars')\n      .attr('fill', params.viz.background_color)\n      .attr('width', params.viz.cat_room.row + 'px')\n      .attr('height', function () {\n        var inst_height = params.viz.clust.dim.height;\n        return inst_height;\n      });\n  } else {\n    d3.select(params.root + ' .row_cat_container')\n      .select('.white_bars')\n      .attr('fill', params.viz.background_color)\n      .attr('width', params.viz.cat_room.row + 'px')\n      .attr('height', function () {\n        var inst_height = params.viz.clust.dim.height;\n        return inst_height;\n      });\n  }\n\n  // remove old col_cat_tips\n  d3.selectAll(params.viz.root_tips + '_row_cat_tip').remove();\n\n  // d3-tooltip\n  var cat_tip = d3_tip_custom()\n    .attr('class', function () {\n      var root_tip_selector = params.viz.root_tips.replace('.', '');\n      var class_string =\n        root_tip_selector + ' d3-tip ' + root_tip_selector + '_row_cat_tip';\n      return class_string;\n    })\n    .direction('e')\n    .offset([5, 0])\n    .style('display', 'none')\n    .html(function (d) {\n      return cat_tooltip_text(params, d, this, 'row');\n    });\n\n  // groups that hold classification triangle and colorbar rect\n  d3.select(params.root + ' .row_cat_container')\n    .selectAll('g')\n    .data(params.network_data.row_nodes, function (d) {\n      return d.name;\n    })\n    .enter()\n    .append('g')\n    .attr('class', 'row_cat_group')\n    .attr('transform', function (d) {\n      var inst_index = (params.network_data.row_nodes_names || []).indexOf(\n        d.name\n      );\n      return 'translate(0, ' + params.viz.y_scale(inst_index) + ')';\n    });\n\n  d3.select(params.root + ' .row_cat_container')\n    .selectAll('.row_cat_group')\n    .call(cat_tip);\n\n  var cat_rect;\n  var inst_selection;\n\n  d3.selectAll(params.root + ' .row_cat_group rect').remove();\n\n  if (params.viz.show_categories.row) {\n    d3.selectAll(params.root + ' .row_cat_group').each(function () {\n      inst_selection = this;\n\n      each(params.viz.all_cats.row, function (inst_cat) {\n        var inst_num = parseInt(inst_cat.split('-')[1], 10);\n        var cat_rect_class = 'row_cat_rect_' + String(inst_num);\n\n        if (\n          d3\n            .select(inst_selection)\n            .select('.' + cat_rect_class)\n            .empty()\n        ) {\n          cat_rect = d3\n            .select(inst_selection)\n            .append('rect')\n            .attr('class', cat_rect_class)\n            .attr('cat', inst_cat);\n        } else {\n          cat_rect = d3.select(inst_selection).select('.' + cat_rect_class);\n        }\n\n        cat_rect\n          .attr('width', params.viz.cat_room.symbol_width)\n          .attr('height', params.viz.y_scale.rangeBand())\n          .style('fill', function (d) {\n            var cat_name = d[inst_cat];\n\n            // if (cat_name.indexOf(': ') >= 0){\n            //   cat_name = cat_name.split(': ')[1];\n            // }\n\n            // console.log(cat_name)\n\n            var inst_color = params.viz.cat_colors.row[inst_cat][cat_name];\n\n            // console.log('inst_color: ' + String(inst_color));\n            return inst_color;\n          })\n          .attr('x', function () {\n            var inst_offset =\n              params.viz.cat_room.symbol_width + params.viz.uni_margin / 2;\n            return inst_offset + 'px';\n          })\n          .attr('transform', function () {\n            var cat_room =\n              params.viz.cat_room.symbol_width + params.viz.cat_room.separation;\n            var inst_shift = inst_num * cat_room;\n            return 'translate(' + inst_shift + ',0)';\n          })\n          .on('click', function (d) {\n            if (d3.select(this).classed('cat_strings')) {\n              var found_names = get_cat_names(params, d, this, 'row');\n\n              $(params.root + ' .dendro_info').modal('toggle');\n              var group_string = found_names.join(', ');\n              d3.select(params.root + ' .dendro_info input').attr(\n                'value',\n                group_string\n              );\n            }\n          })\n          .on('mouseover', cat_tip.show)\n          .on('mouseout', function () {\n            cat_tip.hide(this);\n            reset_cat_opacity(params);\n            d3.select(this).classed('hovering', false);\n\n            d3.selectAll('.d3-tip').style('display', 'none');\n          });\n\n        ini_cat_opacity(params.viz, 'row', cat_rect, inst_cat, updating);\n      });\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/categories/make_row_cat.js","var make_dendro_triangles = require('./make_dendro_triangles');\n\nmodule.exports = function make_row_dendro(cgm) {\n  var params = cgm.params;\n\n  var spillover_width = params.viz.dendro_room.row + params.viz.uni_margin;\n\n  // position row_dendro_outer_container\n  var x_offset = params.viz.clust.margin.left + params.viz.clust.dim.width;\n  var y_offset = params.viz.clust.margin.top;\n\n  // make or reuse outer container\n  if (d3.select(params.root + ' .row_dendro_outer_container').empty()) {\n    d3.select(params.root + ' .viz_svg')\n      .append('g')\n      .attr('class', 'row_dendro_outer_container')\n      .attr('transform', 'translate(' + x_offset + ',' + y_offset + ')');\n\n    d3.select(params.root + ' .row_dendro_outer_container')\n      .append('rect')\n      .classed('row_dendro_spillover', true)\n      .attr('fill', params.viz.background_color)\n      .attr('width', spillover_width + 'px')\n      .attr('height', params.viz.svg_dim.height);\n\n    d3.select(params.root + ' .row_dendro_outer_container')\n      .append('g')\n      .attr('class', 'row_dendro_container')\n      .attr('transform', 'translate(' + params.viz.uni_margin / 2 + ',0)');\n  } else {\n    d3.select(params.root + ' .viz_svg')\n      .select('row_dendro_outer_container')\n      .attr('transform', 'translate(' + x_offset + ',' + y_offset + ')');\n\n    d3.select(params.root + ' .row_dendro_outer_container')\n      .select('.row_dendro_spillover')\n      .attr('width', spillover_width + 'px')\n      .attr('height', params.viz.svg_dim.height);\n  }\n\n  if (cgm.config.show_dendrogram) {\n    make_dendro_triangles(cgm, 'row', false);\n  }\n\n  if (params.viz.inst_order.col != 'clust') {\n    d3.selectAll(params.root + ' .row_dendro_group').remove();\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/make_row_dendro.js","var make_dendro_triangles = require('./make_dendro_triangles');\n\nmodule.exports = function make_col_dendro(cgm) {\n  var params = cgm.params;\n\n  // position col_dendro_outer_container\n  var x_offset = params.viz.clust.margin.left;\n  var y_offset = params.viz.clust.margin.top + params.viz.clust.dim.height;\n  var spillover_height = params.viz.dendro_room.col + params.viz.uni_margin;\n\n  // make or reuse outer container\n  if (d3.select(params.root + ' .col_dendro_outer_container').empty()) {\n    d3.select(params.root + ' .viz_svg')\n      .append('g')\n      .attr('class', 'col_dendro_outer_container')\n      .attr('transform', 'translate(' + x_offset + ',' + y_offset + ')');\n\n    d3.select(params.root + ' .col_dendro_outer_container')\n      .append('rect')\n      .classed('col_dendro_spillover', true)\n      .attr('fill', params.viz.background_color)\n      .attr('width', params.viz.svg_dim.width)\n      .attr('height', spillover_height + 'px');\n\n    d3.select(params.root + ' .col_dendro_outer_container')\n      .append('g')\n      .attr('class', 'col_dendro_container')\n      .attr('transform', 'translate(0,' + params.viz.uni_margin / 2 + ')');\n\n    d3.select(params.root + ' .col_dendro_outer_container')\n      .append('rect')\n      .classed('col_dendro_spillover_top', true)\n      .attr('fill', params.viz.background_color)\n      .attr('width', params.viz.svg_dim.width)\n      .attr('height', params.viz.svg_dim.height)\n      .attr('transform', 'translate(0,' + params.viz.dendro_room.col + ')');\n  } else {\n    d3.select(params.root + ' .viz_svg')\n      .select('col_dendro_outer_container')\n      .attr('transform', 'translate(' + x_offset + ',' + y_offset + ')');\n\n    d3.select(params.root + ' .col_dendro_outer_container')\n      .select('.col_dendro_spillover')\n      .attr('width', params.viz.svg_dim.width)\n      .attr('height', spillover_height + 'px');\n  }\n\n  if (cgm.config.show_dendrogram) {\n    make_dendro_triangles(cgm, 'col', false);\n  }\n\n  if (params.viz.inst_order.row != 'clust') {\n    d3.selectAll(params.root + ' .col_dendro_group').remove();\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/make_col_dendro.js","var build_single_dendro_slider = require('./build_single_dendro_slider');\n\nmodule.exports = function build_dendro_sliders(cgm) {\n  build_single_dendro_slider(cgm, 'row');\n  build_single_dendro_slider(cgm, 'col');\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/build_dendro_sliders.js","var change_groups = require('./change_groups');\nvar position_dendro_slider = require('./position_dendro_slider');\n\nmodule.exports = function build_single_dendro_slider(cgm, inst_rc) {\n  var slider_length = 100;\n\n  var drag = d3.behavior\n    .drag()\n    .on('drag', dragging)\n    .on('dragend', function () {\n      cgm.params.is_slider_drag = false;\n    });\n\n  var slider_group = d3\n    .select(cgm.params.root + ' .viz_svg')\n    .append('g')\n    .classed(inst_rc + '_slider_group', true);\n\n  position_dendro_slider(cgm, inst_rc);\n\n  var rect_height = slider_length + 20;\n  var rect_width = 30;\n  slider_group\n    .append('rect')\n    .classed(inst_rc + '_slider_background', true)\n    .attr('height', rect_height + 'px')\n    .attr('width', rect_width + 'px')\n    .attr('fill', cgm.params.viz.background_color)\n    .attr('transform', function () {\n      var translate_string = 'translate(-10, -5)';\n      return translate_string;\n    })\n    .style('opacity', 0);\n\n  slider_group\n    .append('line')\n    .style('stroke-width', slider_length / 7 + 'px')\n    .style('stroke', 'black')\n    .style('stroke-linecap', 'round')\n    .style('opacity', 0.0)\n    .attr('y1', 0)\n    .attr('y2', function () {\n      return slider_length - 2;\n    })\n    .on('click', click_dendro_slider);\n\n  var offset_triangle = -slider_length / 40;\n  slider_group\n    .append('path')\n    .style('fill', 'black')\n    .attr('transform', 'translate(' + offset_triangle + ', 0)')\n    .attr('d', function () {\n      // up triangle\n      var start_x = 0;\n      var start_y = 0;\n\n      var mid_x = 0;\n      var mid_y = slider_length;\n\n      var final_x = slider_length / 10;\n      var final_y = 0;\n\n      var output_string =\n        'M' +\n        start_x +\n        ',' +\n        start_y +\n        ' L' +\n        mid_x +\n        ', ' +\n        mid_y +\n        ' L' +\n        final_x +\n        ',' +\n        final_y +\n        ' Z';\n\n      return output_string;\n    })\n    .style('opacity', 0.35)\n    .on('click', click_dendro_slider);\n\n  var default_opacity = 0.35;\n  var high_opacity = 0.6;\n  slider_group\n    .append('circle')\n    .classed(inst_rc + '_group_circle', true)\n    .attr('r', slider_length * 0.08)\n    .attr('transform', function () {\n      return 'translate(0, ' + slider_length / 2 + ')';\n    })\n    .style('fill', 'blue')\n    .style('opacity', default_opacity)\n    .on('mouseover', function () {\n      d3.select(this).style('opacity', high_opacity);\n    })\n    .on('mouseout', function () {\n      d3.select(this).style('opacity', default_opacity);\n    })\n    .call(drag);\n\n  function dragging() {\n    cgm.params.is_slider_drag = true;\n\n    // d[0] = d3.event.x;\n    var slider_pos = d3.event.y;\n\n    if (slider_pos < 0) {\n      slider_pos = 0;\n    }\n\n    if (slider_pos > slider_length) {\n      slider_pos = slider_length;\n    }\n\n    if (this.nextSibling) {\n      this.parentNode.appendChild(this);\n    }\n\n    slider_pos = d3.round(slider_pos, -1);\n\n    var slider_value = 10 - slider_pos / 10;\n\n    d3.select(this).attr('transform', 'translate(0, ' + slider_pos + ')');\n\n    change_groups(cgm, inst_rc, slider_value);\n  }\n\n  function click_dendro_slider() {\n    var clicked_line_position = d3.mouse(this);\n\n    var rel_pos = d3.round(clicked_line_position[1], -1);\n\n    d3.select(cgm.params.root + ' .' + inst_rc + '_group_circle').attr(\n      'transform',\n      'translate(0, ' + rel_pos + ')'\n    );\n\n    var slider_value = 10 - rel_pos / 10;\n\n    change_groups(cgm, inst_rc, slider_value);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/build_single_dendro_slider.js","var make_dendro_triangles = require('./make_dendro_triangles');\n\n/* Changes the groupings (x- and y-axis color bars).\n */\nmodule.exports = function (cgm, inst_rc, inst_index) {\n  var params = cgm.params;\n\n  if (inst_rc === 'row') {\n    params.group_level.row = inst_index;\n  } else if (inst_rc === 'col') {\n    params.group_level.col = inst_index;\n  }\n\n  var is_change_group = true;\n\n  make_dendro_triangles(cgm, inst_rc, is_change_group);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/change_groups.js","module.exports = function position_dendro_slider(cgm, inst_rc = 'row') {\n  var viz = cgm.params.viz;\n  var tmp_left;\n  var tmp_top;\n  if (inst_rc === 'row') {\n    // row dendrogram\n    ///////////////////////\n\n    // keep slider near clustergram\n    var max_room = viz.svg_dim.width - 3 * viz.uni_margin;\n\n    // position close to row dendrogram trapezoids\n    tmp_left =\n      viz.clust.margin.left +\n      viz.clust.dim.width +\n      5.25 * viz.dendro_room.row +\n      2;\n\n    if (tmp_left > max_room) {\n      tmp_left = max_room;\n    }\n\n    // tmp_top =  viz.clust.margin.top + 3 * viz.uni_margin - 50;\n    // 135 is a magic number that moves the slider down to make room for the\n    // reordering tree (use 75 when enabling reclustering icon)\n    tmp_top = viz.clust.margin.top + 3 * viz.uni_margin + 30;\n  } else {\n    // column dendrogram\n    ///////////////////////\n    tmp_left = 2 * viz.uni_margin;\n    // tmp_top =  viz.svg_dim.height - 2.5 * viz.uni_margin;\n    tmp_top =\n      viz.clust.margin.top +\n      viz.clust.dim.height +\n      viz.dendro_room.col -\n      2 * viz.uni_margin;\n  }\n\n  // reposiiton slider\n  d3.select(cgm.params.root + ' .' + inst_rc + '_slider_group')\n    .attr('transform', function () {\n      var inst_translation;\n      if (inst_rc === 'row') {\n        tmp_left = tmp_left + 0.8 * viz.dendro_room.row;\n        inst_translation = 'translate(' + tmp_left + ',' + tmp_top + ')';\n      } else {\n        inst_translation =\n          'translate(' + tmp_left + ',' + tmp_top + '), rotate(-90)';\n      }\n      return inst_translation;\n    })\n    .style('opacity', 1);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/dendrogram/position_dendro_slider.js","var make_dendro_crop_buttons = require('../dendrogram/make_dendro_crop_buttons');\n\nmodule.exports = function make_row_dendro_spillover(cgm) {\n  var viz = cgm.params.viz;\n\n  // hide spillover from right\n  var tmp_left =\n    viz.clust.margin.left +\n    viz.clust.dim.width +\n    viz.uni_margin +\n    viz.dendro_room.row;\n\n  var r_spill_container = d3\n    .select(viz.viz_svg)\n    .append('g')\n    .classed('right_spillover_container', true)\n    .attr('transform', function () {\n      return 'translate(' + tmp_left + ', 0)';\n    });\n\n  var tmp_top = viz.norm_labels.margin.top + viz.norm_labels.width.col;\n\n  r_spill_container\n    .append('rect')\n    .attr('fill', viz.background_color) //!! prog_colors\n    .attr('width', 10 * viz.clust.dim.width)\n    .attr('height', viz.svg_dim.height + 'px')\n    .attr('class', 'white_bars')\n    .attr('class', 'right_spillover')\n    .attr('transform', function () {\n      return 'translate( 0,' + tmp_top + ')';\n    });\n\n  var x_offset = 0;\n  var y_offset = viz.clust.margin.top;\n  r_spill_container\n    .append('g')\n    .classed('row_dendro_icons_container', true)\n    .attr('transform', 'translate(' + x_offset + ',' + y_offset + ')')\n    .append('g')\n    .classed('row_dendro_icons_group', true);\n\n  if (cgm.config.show_dendrogram) {\n    make_dendro_crop_buttons(cgm, 'row');\n  }\n\n  // hide spillover from top of row dendrogram\n  x_offset = viz.clust.margin.left + viz.clust.dim.width;\n  y_offset = tmp_top;\n\n  var tmp_width = viz.dendro_room.row + viz.uni_margin;\n  var tmp_height = viz.cat_room.col + viz.uni_margin;\n  d3.select(viz.viz_svg)\n    .append('rect')\n    .attr('fill', viz.background_color)\n    .attr('width', tmp_width)\n    .attr('height', tmp_height)\n    .attr('transform', function () {\n      return 'translate(' + x_offset + ',' + y_offset + ')';\n    })\n    .classed('white_bars', true)\n    .classed('dendro_row_spillover', true);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/spillover/make_row_dendro_spillover.js","var utils = require('../Utils_clust');\nvar run_zoom = require('../zoom/run_zoom');\nvar ini_doubleclick = require('../zoom/ini_doubleclick');\nvar reset_zoom = require('../zoom/reset_zoom');\nvar resize_dendro = require('./resize_dendro');\nvar resize_super_labels = require('./resize_super_labels');\nvar resize_spillover = require('./resize_spillover');\nvar resize_borders = require('./resize_borders');\nvar resize_row_labels = require('./resize_row_labels');\nvar resize_highlights = require('./resize_highlights');\nvar resize_row_viz = require('./resize_row_viz');\nvar resize_col_labels = require('./resize_col_labels');\nvar resize_col_text = require('./resize_col_text');\nvar resize_col_triangle = require('./resize_col_triangle');\nvar resize_col_hlight = require('./resize_col_hlight');\nvar recalc_params_for_resize = require('./recalc_params_for_resize');\nvar resize_row_tiles = require('./resize_row_tiles');\nvar resize_label_bars = require('./resize_label_bars');\nvar label_constrain_and_trim = require('../labels/label_constrain_and_trim');\nvar make_dendro_triangles = require('../dendrogram/make_dendro_triangles');\nvar toggle_dendro_view = require('../dendrogram/toggle_dendro_view');\nvar show_visible_area = require('../zoom/show_visible_area');\nvar calc_viz_dimensions = require('../params/calc_viz_dimensions');\nvar position_play_button = require('../demo/position_play_button');\nvar make_row_cat_super_labels = require('../labels/make_row_cat_super_labels');\nvar ini_cat_reorder = require('../reorder/ini_cat_reorder');\nvar position_dendro_slider = require('../dendrogram/position_dendro_slider');\nvar position_tree_icon = require('../menus/position_tree_icon');\nvar position_filter_icon = require('../menus/position_filter_icon');\nvar position_tree_menu = require('../menus/position_tree_menu');\nvar ini_zoom_info = require('../zoom/ini_zoom_info');\nvar grid_lines_viz = require('../matrix/grid_lines_viz');\nvar each = require('underscore/cjs/each');\n\nmodule.exports = function resize_viz(cgm) {\n  var params = cgm.params;\n\n  var cont_dim = calc_viz_dimensions(params);\n\n  d3.select(params.root + ' .play_button');\n  // .style('opacity', 0.2);\n\n  d3.select(params.root + ' .sidebar_wrapper').style(\n    'height',\n    cont_dim.height + 'px'\n  );\n\n  d3.select(params.viz.viz_wrapper)\n    // .style('float', 'left')\n    .style('margin-top', cont_dim.top + 'px')\n    .style('width', cont_dim.width + 'px')\n    .style('height', cont_dim.height + 'px');\n\n  params = recalc_params_for_resize(params);\n\n  params.zoom_info = ini_zoom_info();\n\n  reset_zoom(params);\n\n  var svg_group = d3.select(params.viz.viz_svg);\n\n  // redefine x and y positions\n  each(params.network_data.links, function (d) {\n    d.x = params.viz.x_scale(d.target);\n    d.y = params.viz.y_scale(d.source);\n  });\n\n  // disable zoom while transitioning\n  svg_group.on('.zoom', null);\n\n  params.zoom_behavior\n    .scaleExtent([1, params.viz.square_zoom * params.viz.zoom_ratio.x])\n    .on('zoom', function () {\n      run_zoom(cgm);\n    });\n\n  // reenable zoom after transition\n  if (params.viz.do_zoom) {\n    svg_group.call(params.zoom_behavior);\n  }\n\n  // prevent normal double click zoom etc\n  ini_doubleclick(cgm);\n\n  svg_group\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', params.viz.svg_dim.height);\n\n  svg_group\n    .select('.super_background')\n    .style('width', params.viz.svg_dim.width)\n    .style('height', params.viz.svg_dim.height);\n\n  svg_group\n    .select('.grey_background')\n    .attr('width', params.viz.clust.dim.width)\n    .attr('height', params.viz.clust.dim.height);\n\n  setTimeout(position_play_button, 100, params);\n\n  var row_nodes = params.network_data.row_nodes;\n  var row_nodes_names = utils.pluck(row_nodes, 'name') || [];\n\n  resize_row_tiles(params, svg_group);\n\n  svg_group\n    .selectAll('.highlighting_rect')\n    .attr('width', params.viz.x_scale.rangeBand() * 0.8)\n    .attr('height', params.viz.y_scale.rangeBand() * 0.8);\n\n  resize_highlights(params);\n\n  // resize row labels\n  ///////////////////////////\n\n  resize_row_labels(params, svg_group);\n  resize_row_viz(params, svg_group);\n\n  // change the size of the highlighting rects\n  svg_group.selectAll('.row_label_group').each(function () {\n    var bbox = d3.select(this).select('text')[0][0].getBBox();\n    d3.select(this)\n      .select('rect')\n      .attr('x', bbox.x)\n      .attr('y', 0)\n      .attr('width', bbox.width)\n      .attr('height', params.viz.rect_height)\n      .style('fill', 'yellow')\n      .style('opacity', function (d) {\n        var inst_opacity = 0;\n        // highlight target genes\n        if (d.target === 1) {\n          inst_opacity = 1;\n        }\n        return inst_opacity;\n      });\n  });\n\n  // necessary to properly position row labels vertically\n  svg_group\n    .selectAll('.row_label_group')\n    .select('text')\n    .attr(\n      'y',\n      params.viz.rect_height * 0.5 + params.labels.default_fs_row * 0.35\n    );\n\n  if (utils.has(params.network_data.row_nodes[0], 'value')) {\n    resize_label_bars(cgm, svg_group);\n  }\n\n  svg_group.selectAll('.row_cat_group').attr('transform', function (d) {\n    var inst_index = row_nodes_names.indexOf(d.name);\n    return 'translate(0, ' + params.viz.y_scale(inst_index) + ')';\n  });\n\n  svg_group\n    .selectAll('.row_cat_group')\n    .select('path')\n    .attr('d', function () {\n      var origin_x = params.viz.cat_room.symbol_width - 1;\n      var origin_y = 0;\n      var mid_x = 1;\n      var mid_y = params.viz.rect_height / 2;\n      var final_x = params.viz.cat_room.symbol_width - 1;\n      var final_y = params.viz.rect_height;\n      var output_string =\n        'M ' +\n        origin_x +\n        ',' +\n        origin_y +\n        ' L ' +\n        mid_x +\n        ',' +\n        mid_y +\n        ' L ' +\n        final_x +\n        ',' +\n        final_y +\n        ' Z';\n      return output_string;\n    });\n\n  var is_resize = true;\n  if (params.viz.show_dendrogram) {\n    make_dendro_triangles(cgm, 'row', is_resize);\n    make_dendro_triangles(cgm, 'col', is_resize);\n    resize_dendro(params, svg_group);\n\n    toggle_dendro_view(cgm, 'row', 0);\n    toggle_dendro_view(cgm, 'col', 0);\n  } else {\n    resize_dendro(params, svg_group);\n  }\n\n  resize_col_labels(params, svg_group);\n  resize_col_text(params, svg_group);\n  resize_col_triangle(params, svg_group);\n  resize_col_hlight(params, svg_group);\n\n  resize_super_labels(params, svg_group);\n  resize_spillover(params.viz, svg_group);\n\n  grid_lines_viz(params);\n\n  resize_borders(params, svg_group);\n\n  // reset zoom and translate\n  params.zoom_behavior\n    .scale(1)\n    .translate([params.viz.clust.margin.left, params.viz.clust.margin.top]);\n\n  label_constrain_and_trim(params);\n\n  // reposition matrix\n  d3.select(params.root + ' .clust_container').attr(\n    'transform',\n    'translate(' +\n      params.viz.clust.margin.left +\n      ',' +\n      params.viz.clust.margin.top +\n      ')'\n  );\n\n  // removed, this was causing bugs\n  if (cgm.params.viz.ds_level === -1) {\n    show_visible_area(cgm);\n  }\n\n  make_row_cat_super_labels(cgm);\n\n  d3.select(params.viz.viz_svg).style('opacity', 1);\n\n  ini_cat_reorder(cgm);\n\n  d3.select(cgm.params.root + ' .row_slider_group').style('opacity', 0);\n  d3.select(cgm.params.root + ' .col_slider_group').style('opacity', 0);\n\n  setTimeout(position_dendro_slider, 500, cgm, 'row');\n  setTimeout(position_dendro_slider, 500, cgm, 'col');\n  setTimeout(position_tree_icon, 500, cgm);\n  setTimeout(position_tree_menu, 500, cgm);\n  setTimeout(position_filter_icon, 500, cgm);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_viz.js","var run_transformation = require('./run_transformation');\nvar zoom_rules_y = require('./zoom_rules_y');\nvar zoom_rules_x = require('./zoom_rules_x');\n\nmodule.exports = function zoomed(cgm) {\n  var params = cgm.params;\n\n  var zoom_info = {};\n  zoom_info.zoom_x = d3.event.scale;\n  zoom_info.zoom_y = d3.event.scale;\n\n  // subtract away the margin to easily calculate pan_room etc.\n  zoom_info.trans_x =\n    params.zoom_behavior.translate()[0] - params.viz.clust.margin.left;\n  zoom_info.trans_y =\n    params.zoom_behavior.translate()[1] - params.viz.clust.margin.top;\n\n  d3.selectAll(params.viz.root_tips).style('display', 'none');\n\n  // transfer zoom_info to params\n  params.zoom_info = zoom_rules_y(params, zoom_info);\n  params.zoom_info = zoom_rules_x(params, zoom_info);\n\n  // do not run transformation if moving slider\n  if (params.is_slider_drag === false && params.is_cropping === false) {\n    // reset translate vector - add back margins to trans_x and trans_y\n    var new_x = params.zoom_info.trans_x + params.viz.clust.margin.left;\n    var new_y = params.zoom_info.trans_y + params.viz.clust.margin.top;\n\n    params.zoom_behavior.translate([new_x, new_y]);\n    cgm.params = params;\n\n    run_transformation(cgm);\n  }\n\n  dispatchEvent(new CustomEvent('ON_VIZ_RESIZE'));\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/run_zoom.js","var constrain_font_size = require('./constrain_font_size');\nvar show_visible_area = require('./show_visible_area');\nvar resize_label_val_bars = require('./resize_label_val_bars');\nvar zoom_crop_triangles = require('./zoom_crop_triangles');\nvar get_previous_zoom = require('./get_previous_zoom');\nvar run_when_zoom_stopped = require('./run_when_zoom_stopped');\nvar check_zoom_stop_status = require('./check_zoom_stop_status');\n\nmodule.exports = function run_transformation(cgm) {\n  var params = cgm.params;\n\n  var zoom_info = params.zoom_info;\n\n  var prev_zoom = get_previous_zoom(params);\n\n  d3.select(params.root + ' .clust_group').attr(\n    'transform',\n    'translate(' +\n      [zoom_info.trans_x, zoom_info.trans_y] +\n      ') scale(' +\n      zoom_info.zoom_x +\n      ',' +\n      zoom_info.zoom_y +\n      ')'\n  );\n\n  d3.select(params.root + ' .row_label_zoom_container').attr(\n    'transform',\n    'translate(' + [0, zoom_info.trans_y] + ') scale(' + zoom_info.zoom_y + ')'\n  );\n\n  d3.select(params.root + ' .col_zoom_container').attr(\n    'transform',\n    'translate(' + [zoom_info.trans_x, 0] + ') scale(' + zoom_info.zoom_x + ')'\n  );\n\n  d3.select(params.root + ' .row_cat_container').attr(\n    'transform',\n    'translate(' +\n      [0, zoom_info.trans_y] +\n      ') scale( 1,' +\n      zoom_info.zoom_y +\n      ')'\n  );\n\n  d3.select(params.root + ' .row_dendro_container').attr(\n    'transform',\n    'translate(' +\n      [params.viz.uni_margin / 2, zoom_info.trans_y] +\n      ') ' +\n      'scale( 1,' +\n      zoom_info.zoom_y +\n      ')'\n  );\n\n  d3.select(params.root + ' .row_dendro_icons_group').attr(\n    'transform',\n    function () {\n      var inst_y = zoom_info.trans_y;\n      var inst_translate = 'translate(' + [0, inst_y] + ') ';\n      var inst_zoom = 'scale(1, ' + zoom_info.zoom_y + ')';\n      var transform_string = inst_translate + inst_zoom;\n      return transform_string;\n    }\n  );\n\n  d3.select(params.root + ' .col_dendro_icons_group').attr(\n    'transform',\n    function () {\n      var inst_x = zoom_info.trans_x;\n      var inst_translate = 'translate(' + [inst_x, 0] + ')';\n      var inst_zoom = 'scale(' + zoom_info.zoom_x + ', 1)';\n      var transform_string = inst_translate + inst_zoom;\n      return transform_string;\n    }\n  );\n\n  zoom_crop_triangles(params, zoom_info, 'row');\n  zoom_crop_triangles(params, zoom_info, 'col');\n\n  d3.select(params.root + ' .col_cat_container').attr(\n    'transform',\n    'translate(' +\n      [zoom_info.trans_x, 0] +\n      ') scale(' +\n      zoom_info.zoom_x +\n      ',1)'\n  );\n\n  d3.select(params.root + ' .col_dendro_container').attr(\n    'transform',\n    'translate(' +\n      [zoom_info.trans_x, params.viz.uni_margin / 2] +\n      ') scale(' +\n      zoom_info.zoom_x +\n      ',1)'\n  );\n\n  resize_label_val_bars(params, zoom_info);\n\n  d3.select(params.root + ' .viz_svg').attr('is_zoom', function () {\n    var inst_zoom = Number(\n      d3.select(params.root + ' .viz_svg').attr('is_zoom')\n    );\n    d3.select(params.root + ' .viz_svg').attr('stopped_zoom', 1);\n    return inst_zoom + 1;\n  });\n\n  // this function runs with a slight delay and tells the visualization that\n  // this particular zoom event is over, reducing the total number of zoom\n  // events that need to finish\n  var not_zooming = function () {\n    d3.select(params.root + ' .viz_svg').attr('is_zoom', function () {\n      var inst_zoom = Number(\n        d3.select(params.root + ' .viz_svg').attr('is_zoom')\n      );\n      return inst_zoom - 1;\n    });\n  };\n\n  constrain_font_size(params);\n\n  if (zoom_info.zoom_y <= prev_zoom.zoom_y) {\n    var zooming_out = false;\n    if (zoom_info.zoom_y < prev_zoom.zoom_y) {\n      zooming_out = true;\n    }\n\n    // zooming has not stopped and zooming out is true\n    var zooming_stopped = false;\n    show_visible_area(cgm, zooming_stopped, zooming_out);\n  }\n\n  setTimeout(not_zooming, 50);\n  setTimeout(check_if_zooming_has_stopped, 100, cgm);\n\n  function check_if_zooming_has_stopped(cgm) {\n    var params = cgm.params;\n\n    var stop_attributes = check_zoom_stop_status(params);\n\n    if (stop_attributes === true) {\n      // wait and double check that zooming has stopped\n      setTimeout(run_when_zoom_stopped, 50, cgm);\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/run_transformation.js","var utils = require('../Utils_clust');\n\nmodule.exports = function resize_label_val_bars(params) {\n  var zoom_info = params.zoom_info;\n\n  // resize label bars if necessary\n  if (utils.has(params.network_data.row_nodes[0], 'value')) {\n    d3.selectAll(params.root + ' .row_bars')\n      .attr('width', function (d) {\n        var inst_value = 0;\n        inst_value =\n          params.labels.bar_scale_row(Math.abs(d.value)) / zoom_info.zoom_y;\n        return inst_value;\n      })\n      .attr('x', function (d) {\n        var inst_value = 0;\n        inst_value =\n          -params.labels.bar_scale_row(Math.abs(d.value)) / zoom_info.zoom_y;\n        return inst_value;\n      });\n  }\n\n  if (utils.has(params.network_data.col_nodes[0], 'value')) {\n    d3.selectAll(params.root + ' .col_bars').attr('width', function (d) {\n      var inst_value = 0;\n      if (d.value > 0) {\n        inst_value = params.labels.bar_scale_col(d.value) / zoom_info.zoom_x;\n      }\n      return inst_value;\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/resize_label_val_bars.js","var constrain_font_size = require('./constrain_font_size');\nvar trim_text = require('./trim_text');\nvar num_visible_labels = require('./num_visible_labels');\nvar toggle_grid_lines = require('../matrix/toggle_grid_lines');\nvar show_visible_area = require('./show_visible_area');\nvar check_zoom_stop_status = require('./check_zoom_stop_status');\n\nmodule.exports = function run_when_zoom_stopped(cgm) {\n  var params = cgm.params;\n\n  var stop_attributes = check_zoom_stop_status(params);\n\n  if (stop_attributes === true) {\n    // ///////////////////////////////////////////////\n    // // zooming has stopped\n    // ///////////////////////////////////////////////\n    // console.log('\\nZOOMING HAS ACTUALLY STOPPED\\n============================');\n    // console.log(params.zoom_info.zoom_y)\n\n    ['row', 'col'].forEach(function (inst_rc) {\n      d3.selectAll(params.root + ' .' + inst_rc + '_label_group')\n        .select('text')\n        .style('opacity', 1);\n\n      d3.selectAll(params.root + ' .' + inst_rc + '_cat_group')\n        .select('path')\n        .style('display', 'block');\n    });\n\n    show_visible_area(cgm, true);\n\n    d3.selectAll(params.viz.root_tips).style('display', 'block');\n\n    d3.selectAll(params.root + ' .row_label_group')\n      .select('text')\n      .style('display', 'none');\n    d3.selectAll(params.root + ' .row_label_group')\n      .select('text')\n      .style('display', 'block');\n\n    d3.select(params.root + ' .viz_svg').attr('stopped_zoom', 0);\n\n    d3.selectAll(params.root + ' .row_label_group')\n      .select('text')\n      .style('display', 'block');\n    d3.selectAll(params.root + ' .col_label_group')\n      .select('text')\n      .style('display', 'block');\n\n    toggle_grid_lines(params);\n\n    // reset x_offset\n    cgm.params.viz.x_offset = 0;\n\n    var max_labels_to_trim = 150;\n    // probably do not need\n    /////////////////////////\n    ['row', 'col'].forEach(function (inst_rc) {\n      var inst_num_visible = num_visible_labels(params, inst_rc);\n\n      if (inst_num_visible < max_labels_to_trim) {\n        d3.selectAll(params.root + ' .' + inst_rc + '_label_group').each(\n          function () {\n            trim_text(params, this, inst_rc);\n          }\n        );\n      }\n    });\n\n    text_patch();\n\n    constrain_font_size(params);\n\n    // this makes sure that the text is visible after zooming and trimming\n    // there is buggy behavior in chrome when zooming into large matrices\n    // I'm running it twice in quick succession\n    setTimeout(text_patch, 100);\n  }\n\n  function text_patch() {\n    ['row', 'col'].forEach(function (inst_rc) {\n      d3.selectAll(params.root + ' .' + inst_rc + '_label_group')\n        .filter(function () {\n          return d3.select(this).style('display') != 'none';\n        })\n        .select('text')\n        .style('font-size', function () {\n          var inst_fs = Number(\n            d3.select(this).style('font-size').replace('px', '')\n          );\n          return inst_fs;\n        });\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/run_when_zoom_stopped.js","module.exports = function num_visible_labels(params, inst_rc) {\n  // counting the number of visible labels, probably not necessary\n\n  var num_visible;\n  if (inst_rc === 'row') {\n    // initialize at high number\n    num_visible = 10000;\n\n    // only count visible rows if no downsampling\n    if (params.viz.ds_level === -1) {\n      num_visible = d3.selectAll(params.root + ' .row')[0].length;\n    }\n  } else if (inst_rc === 'col') {\n    num_visible = d3\n      .selectAll(params.root + ' .' + inst_rc + '_label_text')\n      .filter(function () {\n        return d3.select(this).style('display') != 'none';\n      })[0].length;\n  }\n\n  return num_visible;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/num_visible_labels.js","module.exports = function check_zoom_stop_status(params) {\n  var inst_zoom = Number(d3.select(params.root + ' .viz_svg').attr('is_zoom'));\n\n  var check_stop = Number(\n    d3.select(params.root + ' .viz_svg').attr('stopped_zoom')\n  );\n\n  var stop_attributes = false;\n  if (inst_zoom === 0 && check_stop != 0) {\n    stop_attributes = true;\n  }\n\n  return stop_attributes;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/check_zoom_stop_status.js","module.exports = function zoom_rules_y(params, zoom_info) {\n  var viz = params.viz;\n  // zoom in the x direction before zooming in the y direction\n  if (viz.zoom_ratio.y > 1) {\n    if (zoom_info.zoom_y < viz.zoom_ratio.y) {\n      zoom_info.trans_y = 0;\n      zoom_info.zoom_y = 1;\n    } else {\n      zoom_info.zoom_y = zoom_info.zoom_y / viz.zoom_ratio.y;\n    }\n  }\n\n  // calculate panning room available in the y direction\n  zoom_info.pan_room_y = (zoom_info.zoom_y - 1) * viz.clust.dim.height;\n\n  // console.log( 'pan_room_y: ' +  String(zoom_info.pan_room_y) + ' ' + String(-zoom_info.trans_y))\n\n  // no positive panning or panning more than pan_room\n  if (zoom_info.trans_y >= 0) {\n    zoom_info.trans_y = 0;\n    // console.log('y no positive panning\\n\\n')\n  } else if (zoom_info.trans_y <= -zoom_info.pan_room_y) {\n    zoom_info.trans_y = -zoom_info.pan_room_y;\n    // console.log('y restrict pan room \\n\\n')\n  }\n\n  return zoom_info;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/zoom_rules_y.js","module.exports = function zoom_rules_x(params, zoom_info) {\n  var viz = params.viz;\n\n  // zoom in the y direction before zooming in the x direction\n  if (viz.zoom_ratio.x > 1) {\n    if (zoom_info.zoom_x < viz.zoom_ratio.x) {\n      // remove this\n      // zoom_info.trans_x = - params.viz.clust.margin.left;\n\n      zoom_info.zoom_x = 1;\n    } else {\n      zoom_info.zoom_x = zoom_info.zoom_x / viz.zoom_ratio.x;\n\n      // console.log('********* zoom_x: ' + String(zoom_info.zoom_x))\n\n      // zoom_info.trans_x = zoom_info.trans_x + params.viz.x_offset;\n      // zoom_info.trans_x = zoom_info.trans_x * (params.zoom_info.zoom_x/params.zoom_info.zoom_y);\n    }\n  }\n\n  // calculate panning room available in the x direction\n  zoom_info.pan_room_x = (zoom_info.zoom_x - 1) * viz.clust.dim.width;\n\n  // console.log( 'pan_room_x: ' +  String(zoom_info.pan_room_x) + ' trans_x: ' + String(-zoom_info.trans_x))\n\n  // no positive panning or panning more than pan_room\n  if (zoom_info.trans_x > 0) {\n    zoom_info.trans_x = 0;\n    // console.log('no positive panning\\n\\n')\n  } else if (zoom_info.trans_x <= -zoom_info.pan_room_x) {\n    zoom_info.trans_x = -zoom_info.pan_room_x;\n    // console.log('******* restrict pan room\\n\\n')\n  }\n\n  return zoom_info;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/zoom_rules_x.js","module.exports = function (params) {\n  // reset zoom\n  //////////////////////////////\n  var zoom_y = 1;\n  // var zoom_x = 1;\n  var pan_dx = 0;\n  var pan_dy = 0;\n\n  var half_height = params.viz.clust.dim.height / 2;\n  var center_y = -(zoom_y - 1) * half_height;\n\n  d3.select(params.root + ' .clust_group').attr(\n    'transform',\n    'translate(' +\n      [0, 0 + center_y] +\n      ')' +\n      ' scale(' +\n      1 +\n      ',' +\n      zoom_y +\n      ')' +\n      'translate(' +\n      [pan_dx, pan_dy] +\n      ')'\n  );\n\n  d3.select(params.root + ' .row_label_zoom_container').attr(\n    'transform',\n    'translate(' +\n      [0, center_y] +\n      ')' +\n      ' scale(' +\n      zoom_y +\n      ',' +\n      zoom_y +\n      ')' +\n      'translate(' +\n      [0, pan_dy] +\n      ')'\n  );\n\n  d3.select(params.root + ' .row_cat_container').attr(\n    'transform',\n    'translate(' +\n      [0, center_y] +\n      ')' +\n      ' scale(' +\n      1 +\n      ',' +\n      zoom_y +\n      ')' +\n      'translate(' +\n      [0, pan_dy] +\n      ')'\n  );\n\n  d3.select(params.root + ' .row_dendro_container').attr(\n    'transform',\n    'translate(' +\n      [0, center_y] +\n      ')' +\n      ' scale(' +\n      zoom_y +\n      ',' +\n      zoom_y +\n      ')' +\n      'translate(' +\n      [params.viz.uni_margin / 2, pan_dy] +\n      ')'\n  );\n\n  d3.select(params.root + ' .col_zoom_container').attr(\n    'transform',\n    ' scale(' + 1 + ',' + 1 + ')' + 'translate(' + [pan_dx, 0] + ')'\n  );\n\n  d3.select(params.root + ' .col_cat_container').attr(\n    'transform',\n    ' scale(' + 1 + ',' + 1 + ')' + 'translate(' + [pan_dx, 0] + ')'\n  );\n\n  d3.select(params.root + ' .col_dendro_container').attr(\n    'transform',\n    ' scale(' +\n      1 +\n      ',' +\n      1 +\n      ')' +\n      'translate(' +\n      [pan_dx, params.viz.uni_margin / 2] +\n      ')'\n  );\n\n  // reset crop button zooming\n  d3.select(params.root + ' .row_dendro_icons_group').attr(\n    'transform',\n    function () {\n      return 'translate(0,0) scale(1)';\n    }\n  );\n\n  d3.select(params.root + ' .row_dendro_icons_group')\n    .selectAll('path')\n    .attr('transform', function (d) {\n      var inst_x = 7;\n      var inst_y = d.pos_mid;\n      return 'translate(' + inst_x + ',' + inst_y + ') ' + 'scale(1, 1)';\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/zoom/reset_zoom.js","module.exports = function resize_dendro(params, svg_group, delay_info = false) {\n  // resize dendrogram\n  ///////////////////\n\n  var delays = {};\n\n  if (delay_info === false) {\n    delays.run_transition = false;\n  } else {\n    delays = delay_info;\n  }\n\n  var duration = params.viz.duration;\n  var col_nodes = params.network_data.col_nodes;\n  var col_nodes_names = params.network_data.col_nodes_names || [];\n\n  var dendro_group;\n  if (delays.run_transition) {\n    dendro_group = svg_group\n      .transition()\n      .delay(delays.update)\n      .duration(duration);\n\n    svg_group\n      .selectAll('.col_cat_group')\n      // data binding needed for loss/gain of columns\n      .data(col_nodes, function (d) {\n        return d.name;\n      })\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('transform', function (d) {\n        var inst_index = col_nodes_names.indexOf(d.name);\n        return 'translate(' + params.viz.x_scale(inst_index) + ',0)';\n      });\n\n    svg_group\n      .selectAll('.col_dendro_group')\n      // data binding needed for loss/gain of columns\n      .data(col_nodes, function (d) {\n        return d.name;\n      })\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('transform', function (d) {\n        var inst_index = col_nodes_names.indexOf(d.name);\n        return 'translate(' + params.viz.x_scale(inst_index) + ',0)';\n      });\n  } else {\n    dendro_group = svg_group;\n\n    svg_group\n      .selectAll('.col_cat_group')\n      // data binding needed for loss/gain of columns\n      .data(col_nodes, function (d) {\n        return d.name;\n      })\n      .attr('transform', function (d) {\n        var inst_index = col_nodes_names.indexOf(d.name);\n        return 'translate(' + params.viz.x_scale(inst_index) + ',0)';\n      });\n\n    d3.select(params.root)\n      .selectAll('.col_dendro_group')\n      // data binding needed for loss/gain of columns\n      .data(col_nodes, function (d) {\n        return d.name;\n      })\n      .attr('transform', function (d) {\n        var inst_index = col_nodes_names.indexOf(d.name);\n        return 'translate(' + params.viz.x_scale(inst_index) + ',0)';\n      });\n  }\n\n  var i;\n  var inst_class;\n\n  ['row', 'col'].forEach(function (inst_rc) {\n    var num_cats = params.viz.all_cats[inst_rc].length;\n\n    for (i = 0; i < num_cats; i++) {\n      inst_class = '.' + inst_rc + '_cat_rect_' + String(i);\n\n      if (inst_rc === 'row') {\n        dendro_group\n          .selectAll(inst_class)\n          .attr('height', params.viz.y_scale.rangeBand());\n      } else {\n        dendro_group\n          .selectAll(inst_class)\n          .attr('width', params.viz.x_scale.rangeBand());\n      }\n    }\n  });\n\n  // position row_dendro_outer_container\n  var x_offset = params.viz.clust.margin.left + params.viz.clust.dim.width;\n  var y_offset = params.viz.clust.margin.top;\n  var spillover_width = params.viz.dendro_room.row + params.viz.uni_margin;\n\n  d3.select(params.root + ' .viz_svg')\n    .select('row_dendro_outer_container')\n    .attr('transform', 'translate(' + x_offset + ',' + y_offset + ')');\n\n  d3.select(params.root + ' .row_dendro_outer_container')\n    .select('.row_dendro_spillover')\n    .attr('width', spillover_width + 'px')\n    .attr('height', params.viz.svg_dim.height);\n\n  x_offset = params.viz.clust.margin.left;\n  y_offset = params.viz.clust.margin.top + params.viz.clust.dim.height;\n  var spillover_height = params.viz.dendro_room.col + params.viz.uni_margin;\n\n  d3.select(params.root + ' .col_dendro_outer_container')\n    .select('.col_dendro_spillover')\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', spillover_height + 'px');\n\n  d3.select(params.root + ' .col_dendro_outer_container')\n    .select('.col_dendro_spillover_top')\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', params.viz.svg_dim.height)\n    .attr('transform', 'translate(0,' + params.viz.dendro_room.col + ')');\n\n  x_offset = params.viz.clust.margin.left;\n  y_offset = 0;\n  d3.select(params.root + ' .col_dendro_icons_container').attr(\n    'transform',\n    'translate(' + x_offset + ',' + y_offset + ')'\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_dendro.js","module.exports = function resize_super_labels(\n  params,\n  ini_svg_group,\n  delay_info = false\n) {\n  var delays = {};\n  var duration = params.viz.duration;\n  var svg_group;\n\n  if (delay_info === false) {\n    delays.run_transition = false;\n  } else {\n    delays = delay_info;\n  }\n\n  if (delays.run_transition) {\n    svg_group = ini_svg_group\n      .transition()\n      .delay(delays.update)\n      .duration(duration);\n  } else {\n    svg_group = ini_svg_group;\n  }\n\n  svg_group\n    .select('.super_col_bkg')\n    .attr('height', params.viz.super_labels.dim.width + 'px')\n    .attr(\n      'transform',\n      'translate(' +\n        params.viz.clust.margin.left +\n        ',' +\n        params.viz.grey_border_width +\n        ')'\n    );\n\n  // super col title\n  svg_group.select('.super_col').attr('transform', function () {\n    var inst_x =\n      params.viz.clust.dim.width / 2 + params.viz.norm_labels.width.row;\n    var inst_y = params.viz.super_labels.dim.width;\n    return 'translate(' + inst_x + ',' + inst_y + ')';\n  });\n\n  svg_group\n    .select('.super_row_bkg')\n    .attr('width', params.viz.super_labels.dim.width + 'px')\n    .attr('transform', 'translate(' + params.viz.grey_border_width + ',0)');\n\n  svg_group.select('.super_row').attr('transform', function () {\n    var inst_x = params.viz.super_labels.dim.width;\n    var inst_y =\n      params.viz.clust.dim.height / 2 + params.viz.norm_labels.width.col;\n    return 'translate(' + inst_x + ',' + inst_y + ')';\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_super_labels.js","module.exports = function resize_spillover(\n  viz,\n  ini_svg_group,\n  delay_info = false\n) {\n  var delays = {};\n  var duration = viz.duration;\n  var svg_group;\n\n  if (delay_info === false) {\n    delays.run_transition = false;\n  } else {\n    delays = delay_info;\n  }\n\n  if (delays.run_transition) {\n    svg_group = ini_svg_group\n      .transition()\n      .delay(delays.update)\n      .duration(duration);\n  } else {\n    svg_group = ini_svg_group;\n  }\n\n  svg_group\n    .select(viz.root + ' .right_slant_triangle')\n    .attr(\n      'transform',\n      'translate(' + viz.clust.dim.width + ',' + viz.norm_labels.width.col + ')'\n    );\n\n  svg_group\n    .select(viz.root + ' .left_slant_triangle')\n    .attr('transform', 'translate(-1,' + viz.norm_labels.width.col + ')');\n\n  var rect_height = viz.clust.margin.top + viz.uni_margin / 5;\n  svg_group\n    .select(viz.root + ' .top_left_white')\n    .attr('width', viz.clust.margin.left)\n    .attr('height', rect_height);\n\n  var tmp_left =\n    viz.clust.margin.left +\n    viz.clust.dim.width +\n    viz.uni_margin +\n    viz.dendro_room.row;\n  var tmp_top = viz.norm_labels.margin.top + viz.norm_labels.width.col;\n\n  svg_group\n    .select(viz.root + ' .right_spillover_container')\n    .attr('transform', function () {\n      return 'translate(' + tmp_left + ', 0)';\n    });\n\n  tmp_top = viz.norm_labels.margin.top + viz.norm_labels.width.col;\n\n  svg_group\n    .select(viz.root + ' .right_spillover_container rect')\n    .attr('transform', function () {\n      return 'translate( 0,' + tmp_top + ')';\n    });\n\n  svg_group\n    .select(viz.root + ' .right_spillover')\n    .attr('height', viz.svg_dim.height + 'px');\n\n  // resize dendro spillovers\n  var x_offset = viz.clust.margin.left + viz.clust.dim.width;\n  var y_offset = tmp_top;\n  var tmp_width = viz.dendro_room.row + viz.uni_margin;\n  var tmp_height = viz.cat_room.col + viz.uni_margin;\n  d3.select(viz.root + ' .dendro_row_spillover')\n    .attr('width', tmp_width)\n    .attr('height', tmp_height)\n    .attr('transform', function () {\n      return 'translate(' + x_offset + ',' + y_offset + ')';\n    });\n\n  // hide spillover left top of col dendrogram\n  x_offset = 0;\n  y_offset = viz.clust.margin.top + viz.clust.dim.height;\n  tmp_width = viz.clust.margin.left;\n  tmp_height = viz.clust.dim.height * 10;\n\n  svg_group\n    .select('.dendro_col_spillover')\n    .attr('width', tmp_width)\n    .attr('height', tmp_height)\n    .attr('transform', function () {\n      return 'translate(' + x_offset + ',' + y_offset + ')';\n    });\n\n  x_offset = viz.clust.margin.left + viz.clust.dim.width;\n  y_offset = viz.clust.margin.top + viz.clust.dim.height;\n  tmp_width = viz.cat_room.col + viz.clust.dim.width;\n  tmp_height = viz.cat_room.row + viz.uni_margin;\n\n  svg_group\n    .select('.dendro_corner_spillover')\n    .attr('width', tmp_width)\n    .attr('height', tmp_height)\n    .attr('transform', function () {\n      return 'translate(' + x_offset + ',' + y_offset + ')';\n    });\n\n  x_offset = viz.clust.margin.left + viz.clust.dim.width + viz.uni_margin;\n  y_offset =\n    viz.norm_labels.margin.top +\n    viz.norm_labels.width.col +\n    2.5 * viz.uni_margin;\n  var extra_x_room = 2.75;\n  var extra_y_room = 1.2;\n\n  // reposition category superlabels\n  if (viz.show_categories.col) {\n    d3.selectAll(viz.root + ' .col_cat_super').attr('transform', function (d) {\n      var inst_cat = parseInt(d.split('-')[1], 10);\n      var inst_y =\n        y_offset + extra_y_room * viz.cat_room.symbol_width * inst_cat;\n      return 'translate(' + x_offset + ',' + inst_y + ')';\n    });\n  }\n\n  if (viz.show_categories.row) {\n    d3.select(viz.root + ' .row_cat_label_container').attr(\n      'transform',\n      function () {\n        x_offset =\n          viz.norm_labels.margin.left +\n          viz.norm_labels.width.row +\n          viz.cat_room.symbol_width +\n          extra_x_room * viz.uni_margin;\n        y_offset = viz.clust.margin.top - viz.uni_margin;\n        return 'translate(' + x_offset + ',' + y_offset + ') rotate(-90)';\n      }\n    );\n  }\n\n  // white border bottom - prevent clustergram from hitting border\n  if (viz.show_dendrogram) {\n    y_offset =\n      viz.clust.margin.top +\n      viz.clust.dim.height +\n      viz.dendro_room.col -\n      2 * viz.uni_margin;\n  } else {\n    y_offset = viz.clust.margin.top + viz.clust.dim.height;\n  }\n\n  d3.select(viz.root + ' .bottom_spillover_container').attr(\n    'transform',\n    function () {\n      // shift up enough to show the entire border width\n      return 'translate(0,' + y_offset + ')';\n    }\n  );\n\n  svg_group\n    .select(viz.root + ' .bottom_spillover')\n    .attr('width', viz.svg_dim.width)\n    .attr('height', 2 * viz.svg_dim.height);\n\n  var inst_height = viz.cat_room.col + 1.5 * viz.uni_margin;\n  // white rect to cover excess labels\n  d3.select(viz.viz_svg + ' .top_right_white')\n    .attr('fill', viz.background_color)\n    .attr('width', 2 * viz.clust.dim.width)\n    .attr('height', inst_height)\n    .attr('transform', function () {\n      var tmp_left = viz.clust.margin.left + viz.clust.dim.width;\n      var tmp_top =\n        viz.norm_labels.width.col + viz.norm_labels.margin.top - viz.uni_margin;\n      return 'translate(' + tmp_left + ', ' + tmp_top + ')';\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_spillover.js","module.exports = function resize_borders(params, svg_group) {\n  // left border\n  svg_group\n    .select('.left_border')\n    .attr('width', params.viz.grey_border_width)\n    .attr('height', params.viz.svg_dim.height)\n    .attr('transform', 'translate(0,0)');\n\n  // right border\n  svg_group\n    .select('.right_border')\n    .attr('width', params.viz.grey_border_width)\n    .attr('height', params.viz.svg_dim.height)\n    .attr('transform', function () {\n      var inst_offset = params.viz.svg_dim.width - params.viz.grey_border_width;\n      return 'translate(' + inst_offset + ',0)';\n    });\n\n  // top border\n  svg_group\n    .select('.top_border')\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', params.viz.grey_border_width)\n    .attr('transform', function () {\n      var inst_offset = 0;\n      return 'translate(' + inst_offset + ',0)';\n    });\n\n  // bottom border\n  svg_group\n    .select('.bottom_border')\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', params.viz.grey_border_width)\n    .attr('transform', function () {\n      var inst_offset =\n        params.viz.svg_dim.height - params.viz.grey_border_width;\n      return 'translate(0,' + inst_offset + ')';\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_borders.js","module.exports = function resize_row_labels(\n  params,\n  ini_svg_group,\n  delay_info = false\n) {\n  var delays = {};\n  var duration = params.viz.duration;\n  var svg_group;\n\n  var row_nodes = params.network_data.row_nodes;\n  var row_nodes_names = params.network_data.row_nodes_names || [];\n\n  if (delay_info === false) {\n    delays.run_transition = false;\n  } else {\n    delays = delay_info;\n  }\n\n  if (delays.run_transition) {\n    ini_svg_group\n      .selectAll('.row_label_group')\n      // data bind necessary for loss/gain of rows\n      .data(row_nodes, function (d) {\n        return d.name;\n      })\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n      })\n      .attr(\n        'y',\n        params.viz.rect_height * 0.5 + params.labels.default_fs_row * 0.35\n      );\n\n    svg_group = ini_svg_group\n      .transition()\n      .delay(delays.update)\n      .duration(duration);\n  } else {\n    ini_svg_group\n      .selectAll('.row_label_group')\n      // data bind necessary for loss/gain of rows\n      .data(row_nodes, function (d) {\n        return d.name;\n      })\n      .attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0,' + params.viz.y_scale(inst_index) + ')';\n      })\n      .attr(\n        'y',\n        params.viz.rect_height * 0.5 + params.labels.default_fs_row * 0.35\n      );\n\n    svg_group = ini_svg_group;\n  }\n\n  svg_group\n    .select(params.root + ' .row_container')\n    .attr(\n      'transform',\n      'translate(' +\n        params.viz.norm_labels.margin.left +\n        ',' +\n        params.viz.clust.margin.top +\n        ')'\n    );\n\n  svg_group\n    .select(params.root + ' .row_container')\n    .select('.white_bars')\n    .attr('width', params.viz.label_background.row)\n    .attr('height', 30 * params.viz.clust.dim.height + 'px');\n\n  svg_group\n    .select(params.root + ' .row_container')\n    .select('.row_label_container')\n    .attr('transform', 'translate(' + params.viz.norm_labels.width.row + ',0)');\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_row_labels.js","module.exports = function resize_highlights(params) {\n  // reposition tile highlight\n  ////////////////////////////////\n\n  var rel_width_hlight = 6;\n  // var opacity_hlight = 0.85;\n  var hlight_width = rel_width_hlight * params.viz.border_width.x;\n  var hlight_height = rel_width_hlight * params.viz.border_width.y;\n\n  // top highlight\n  d3.select(params.root + ' .top_hlight')\n    .attr('width', params.viz.rect_width)\n    .attr('height', hlight_height)\n    .attr('transform', function () {\n      return (\n        'translate(' + params.viz.x_scale(params.matrix.click_hlight_x) + ',0)'\n      );\n    });\n\n  // left highlight\n  d3.select(params.root + ' .left_hlight')\n    .attr('width', hlight_width)\n    .attr('height', params.viz.rect_width - hlight_height * 0.99)\n    .attr('transform', function () {\n      return (\n        'translate(' +\n        params.viz.x_scale(params.matrix.click_hlight_x) +\n        ',' +\n        hlight_height * 0.99 +\n        ')'\n      );\n    });\n\n  // right highlight\n  d3.select(params.root + ' .right_hlight')\n    .attr('width', hlight_width)\n    .attr('height', params.viz.rect_height - hlight_height * 0.99)\n    .attr('transform', function () {\n      var tmp_translate =\n        params.viz.x_scale(params.matrix.click_hlight_x) +\n        params.viz.rect_width -\n        hlight_width;\n      return 'translate(' + tmp_translate + ',' + hlight_height * 0.99 + ')';\n    });\n\n  // bottom highlight\n  d3.select(params.root + ' .bottom_hlight')\n    .attr('width', function () {\n      return params.viz.rect_width - 1.98 * hlight_width;\n    })\n    .attr('height', hlight_height)\n    .attr('transform', function () {\n      var tmp_translate_x =\n        params.viz.x_scale(params.matrix.click_hlight_x) + hlight_width * 0.99;\n      var tmp_translate_y = params.viz.rect_height - hlight_height;\n      return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n    });\n\n  // resize row highlight\n  /////////////////////////\n  d3.select(params.root + ' .row_top_hlight')\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', hlight_height);\n\n  d3.select(params.root + ' .row_bottom_hlight')\n    .attr('width', params.viz.svg_dim.width)\n    .attr('height', hlight_height)\n    .attr('transform', function () {\n      var tmp_translate_y = params.viz.rect_height - hlight_height;\n      return 'translate(0,' + tmp_translate_y + ')';\n    });\n\n  // resize col highlight\n  /////////////////////////\n  d3.select(params.root + ' .col_top_hlight')\n    .attr('width', params.viz.clust.dim.height)\n    .attr('height', hlight_width)\n    .attr('transform', function () {\n      var tmp_translate_y = 0;\n      var tmp_translate_x = -(\n        params.viz.clust.dim.height +\n        params.viz.cat_room.col +\n        params.viz.uni_margin\n      );\n      return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n    });\n\n  d3.select(params.root + ' .col_bottom_hlight')\n    .attr('width', params.viz.clust.dim.height)\n    .attr('height', hlight_width)\n    .attr('transform', function () {\n      var tmp_translate_y = params.viz.rect_width - hlight_width;\n      var tmp_translate_x = -(\n        params.viz.clust.dim.height +\n        params.viz.cat_room.col +\n        params.viz.uni_margin\n      );\n      return 'translate(' + tmp_translate_x + ',' + tmp_translate_y + ')';\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_highlights.js","module.exports = function resize_row_viz(\n  params,\n  ini_svg_group,\n  delay_info = false\n) {\n  var delays = {};\n  var duration = params.viz.duration;\n  var svg_group;\n\n  if (delay_info === false) {\n    delays.run_transition = false;\n  } else {\n    delays = delay_info;\n  }\n\n  if (delays.run_transition) {\n    svg_group = ini_svg_group\n      .transition()\n      .delay(delays.update)\n      .duration(duration);\n  } else {\n    svg_group = ini_svg_group;\n  }\n\n  svg_group\n    .select('.row_cat_outer_container')\n    .attr('transform', 'translate(' + params.viz.norm_labels.width.row + ',0)')\n    .select('white_bars')\n    .attr('width', params.viz.cat_room.row + 'px')\n    .attr('height', function () {\n      var inst_height = params.viz.clust.dim.height;\n      return inst_height;\n    });\n\n  var x_offset = params.viz.clust.margin.left + params.viz.clust.dim.width;\n  var y_offset = params.viz.clust.margin.top;\n  svg_group\n    .select('.row_dendro_outer_container')\n    .attr('transform', 'translate(' + x_offset + ',' + y_offset + ')');\n\n  // !! tmp resize col dendro\n  x_offset = params.viz.clust.margin.left;\n  y_offset = params.viz.clust.margin.top + params.viz.clust.dim.height;\n\n  svg_group\n    .select(' .col_dendro_outer_container')\n    .attr('transform', function () {\n      return 'translate(' + x_offset + ',' + y_offset + ')';\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_row_viz.js","module.exports = function (params, ini_svg_group, delay_info = false) {\n  var delays = {};\n  var duration = params.viz.duration;\n  var svg_group;\n\n  var col_nodes = params.network_data.col_nodes;\n  var col_nodes_names = params.network_data.col_nodes_names || [];\n\n  if (delay_info === false) {\n    delays.run_transition = false;\n  } else {\n    delays = delay_info;\n  }\n\n  if (delays.run_transition) {\n    svg_group = ini_svg_group\n      .transition()\n      .delay(delays.update)\n      .duration(duration);\n\n    ini_svg_group\n      .selectAll('.col_label_text')\n      .data(col_nodes, function (d) {\n        return d.name;\n      })\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('transform', function (d) {\n        var inst_index = col_nodes_names.indexOf(d.name);\n        return (\n          'translate(' + params.viz.x_scale(inst_index) + ', 0) rotate(-90)'\n        );\n      });\n  } else {\n    svg_group = ini_svg_group;\n\n    ini_svg_group\n      .selectAll('.col_label_text')\n      .data(col_nodes, function (d) {\n        return d.name;\n      })\n      .attr('transform', function (d) {\n        var inst_index = col_nodes_names.indexOf(d.name);\n        return (\n          'translate(' + params.viz.x_scale(inst_index) + ', 0) rotate(-90)'\n        );\n      });\n  }\n\n  // offset click group column label\n  var x_offset_click =\n    params.viz.x_scale.rangeBand() / 2 + params.viz.border_width.x;\n\n  svg_group\n    .select(params.root + ' .col_container')\n    .attr(\n      'transform',\n      'translate(' +\n        params.viz.clust.margin.left +\n        ',' +\n        params.viz.norm_labels.margin.top +\n        ')'\n    );\n\n  svg_group\n    .select(params.root + ' .col_container')\n    .select('.white_bars')\n    .attr('width', 30 * params.viz.clust.dim.width + 'px')\n    .attr('height', params.viz.label_background.col);\n\n  svg_group\n    .select(params.root + ' .col_container')\n    .select('.col_label_outer_container')\n    .attr('transform', 'translate(0,' + params.viz.norm_labels.width.col + ')');\n\n  svg_group\n    .selectAll('.col_label_group')\n    .attr(\n      'transform',\n      'translate(' +\n        params.viz.x_scale.rangeBand() / 2 +\n        ',' +\n        x_offset_click +\n        ') rotate(45)'\n    );\n\n  svg_group\n    .selectAll('.col_label_group')\n    .select('text')\n    .attr('y', params.viz.x_scale.rangeBand() * 0.6)\n    .attr('dx', 2 * params.viz.border_width.x);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_col_labels.js","var utils = require('../Utils_clust');\n\nmodule.exports = function resize_col_text(params, svg_group) {\n  svg_group\n    .selectAll('.col_label_group')\n    .select('text')\n    .style('font-size', params.labels.default_fs_col + 'px')\n    .text(function (d) {\n      return utils.normal_name(d);\n    });\n\n  svg_group.selectAll('.col_label_group').each(function () {\n    d3.select(this).select('text')[0][0].getBBox();\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_col_text.js","var col_viz_aid_triangle = require('../labels/col_viz_aid_triangle');\n\nmodule.exports = function resize_col_triangle(\n  params,\n  ini_svg_group,\n  delay_info = false\n) {\n  // resize column triangle\n  var ini_triangle_group = ini_svg_group\n    .selectAll('.col_label_group')\n    .select('path');\n\n  var delays = {};\n  var duration = params.viz.duration;\n\n  if (delay_info === false) {\n    delays.run_transition = false;\n  } else {\n    delays = delay_info;\n  }\n\n  var triangle_group;\n  if (delays.run_transition) {\n    triangle_group = ini_triangle_group\n      .transition()\n      .delay(delays.update)\n      .duration(duration);\n  } else {\n    triangle_group = ini_triangle_group;\n  }\n\n  triangle_group\n    .attr('d', function () {\n      return col_viz_aid_triangle(params);\n    })\n    .attr('fill', '#eee');\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_col_triangle.js","var utils = require('../Utils_clust');\n\nmodule.exports = function resize_col_hlight(\n  params,\n  svg_group,\n  delay_info = false\n) {\n  var delays = {};\n  // var duration = params.viz.duration;\n\n  if (delay_info === false) {\n    delays.run_transition = false;\n  } else {\n    delays = delay_info;\n  }\n\n  if (utils.has(params.network_data.col_nodes[0], 'value')) {\n    svg_group\n      .selectAll('.col_bars')\n      .data(params.network_data.col_nodes, function (d) {\n        return d.name;\n      })\n      .attr('width', function (d) {\n        var inst_value = 0;\n\n        if (d.value > 0) {\n          inst_value = params.labels.bar_scale_col(d.value);\n        }\n        return inst_value;\n      })\n      // rotate labels - reduce width if rotating\n      .attr('height', params.viz.rect_width * 0.66);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_col_hlight.js","var get_svg_dim = require('../params/get_svg_dim');\nvar calc_clust_height = require('../params/calc_clust_height');\nvar calc_clust_width = require('../params/calc_clust_width');\nvar calc_default_fs = require('../params/calc_default_fs');\nvar calc_zoom_switching = require('../zoom/calc_zoom_switching');\nvar each = require('underscore/cjs/each');\n\nmodule.exports = function recalc_params_for_resize(params) {\n  // Resetting some visualization parameters\n  params = get_svg_dim(params);\n  params.viz = calc_clust_width(params.viz);\n  params.viz = calc_clust_height(params.viz);\n\n  if (params.sim_mat) {\n    if (params.viz.clust.dim.width <= params.viz.clust.dim.height) {\n      params.viz.clust.dim.height = params.viz.clust.dim.width;\n    } else {\n      params.viz.clust.dim.width = params.viz.clust.dim.height;\n    }\n  }\n\n  params.viz = calc_zoom_switching(params.viz);\n\n  // redefine x_scale and y_scale rangeBands\n  params.viz.x_scale.rangeBands([0, params.viz.clust.dim.width]);\n  params.viz.y_scale.rangeBands([0, params.viz.clust.dim.height]);\n\n  // redefine border width\n  params.viz.border_width.x =\n    params.viz.x_scale.rangeBand() / params.viz.border_fraction;\n  params.viz.border_width.y =\n    params.viz.y_scale.rangeBand() / params.viz.border_fraction;\n\n  params.viz.rect_width =\n    params.viz.x_scale.rangeBand() - params.viz.border_width.x;\n  params.viz.rect_height =\n    params.viz.y_scale.rangeBand() - params.viz.border_width.y;\n\n  // for downsampling\n  if (params.viz.ds != null) {\n    for (var i; i < params.viz.ds.length; i++) {\n      params.viz.ds[i].rect_height =\n        params.viz.ds[i].y_scale.rangeBand() - params.viz.border_width.y;\n    }\n  }\n\n  // recalc downsampled y_scale if necessary\n  if (params.viz.ds_num_levels > 0) {\n    each(params.viz.ds, function (inst_ds) {\n      // y_scale\n      /////////////////////////\n      inst_ds.y_scale = d3.scale\n        .ordinal()\n        .rangeBands([0, params.viz.clust.dim.height]);\n      inst_ds.y_scale.domain(d3.range(inst_ds.num_rows + 1));\n\n      inst_ds.rect_height =\n        inst_ds.y_scale.rangeBand() - params.viz.border_width.y;\n    });\n  }\n\n  // redefine zoom extent\n  params.viz.square_zoom =\n    params.viz.norm_labels.width.col / (params.viz.rect_width / 2);\n\n  // the default font sizes are set here\n  params = calc_default_fs(params);\n\n  return params;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/recalc_params_for_resize.js","var draw_up_tile = require('../enter/draw_up_tile');\nvar draw_dn_tile = require('../enter/draw_dn_tile');\nvar fine_position_tile = require('../matrix/fine_position_tile');\n\nmodule.exports = function resize_row_tiles(params, svg_group) {\n  var row_nodes_names = params.network_data.row_nodes_names || [];\n\n  if (params.viz.ds_level === -1) {\n    // no downsampling\n    ///////////////////////\n\n    // resize rows\n    svg_group.selectAll('.row').attr('transform', function (d) {\n      var tmp_index = row_nodes_names.indexOf(d.name);\n      var inst_y = params.viz.y_scale(tmp_index);\n      return 'translate(0,' + inst_y + ')';\n    });\n\n    // resize tiles\n    svg_group\n      .selectAll('.row')\n      .selectAll('.tile')\n      .attr('transform', function (d) {\n        return fine_position_tile(params, d);\n      })\n      .attr('width', params.viz.rect_width)\n      .attr('height', params.viz.rect_height);\n\n    // resize tile_up\n    svg_group\n      .selectAll('.row')\n      .selectAll('.tile_up')\n      .attr('d', function () {\n        return draw_up_tile(params);\n      })\n      .attr('transform', function (d) {\n        return fine_position_tile(params, d);\n      });\n\n    // resize tile_dn\n    svg_group\n      .selectAll('.row')\n      .selectAll('.tile_dn')\n      .attr('d', function () {\n        return draw_dn_tile(params);\n      })\n      .attr('transform', function (d) {\n        return fine_position_tile(params, d);\n      });\n  } else {\n    // downsampling\n    /////////////////////////\n\n    var ds_level = params.viz.ds_level;\n    var row_class = '.ds' + String(ds_level) + '_row';\n    var ds_rect_height = params.viz.ds[ds_level].rect_height;\n\n    svg_group.selectAll(row_class).attr('transform', function (d) {\n      var inst_y = params.viz.ds[ds_level].y_scale(d.row_index);\n      return 'translate(0,' + inst_y + ')';\n    });\n\n    // reset ds-tiles\n    svg_group\n      .selectAll(row_class)\n      .selectAll('.tile')\n      .attr('transform', function (d) {\n        return fine_position_tile(params, d);\n      })\n      .attr('width', params.viz.rect_width)\n      .attr('height', ds_rect_height);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_row_tiles.js","var calc_val_max = require('../params/calc_val_max');\n\nmodule.exports = function resize_label_bars(cgm, svg_group) {\n  var params = cgm.params;\n\n  params = calc_val_max(params);\n\n  svg_group\n    .selectAll('.row_bars')\n    // .transition().delay(delays.update).duration(duration)\n    .attr('width', function (d) {\n      var inst_value = 0;\n      inst_value = params.labels.bar_scale_row(Math.abs(d.value));\n      return inst_value;\n    })\n    .attr('x', function (d) {\n      var inst_value = 0;\n      inst_value = -params.labels.bar_scale_row(Math.abs(d.value));\n      return inst_value;\n    })\n    .attr('height', params.viz.y_scale.rangeBand());\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_label_bars.js","module.exports = function position_play_button(params) {\n  var clust_transform = d3\n    .select(params.root + ' .clust_container')\n    .attr('transform');\n\n  var clust_x = Number(clust_transform.split('(')[1].split(',')[0]);\n  var clust_y = Number(clust_transform.split(',')[1].replace(')', ''));\n  var trans_x = clust_x + params.viz.clust.dim.width / 2;\n  var trans_y = clust_y + params.viz.clust.dim.height / 2;\n\n  d3.select(params.root + ' .play_button').attr('transform', function () {\n    return 'translate(' + trans_x + ',' + trans_y + ')';\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/position_play_button.js","module.exports = function position_tree_icon(cgm) {\n  var viz = cgm.params.viz;\n  var tmp_left;\n  var tmp_top;\n\n  // keep slider near clustergram\n  var max_room = viz.svg_dim.width - 3 * viz.uni_margin;\n\n  // position close to row dendrogram trapezoids\n  tmp_left =\n    viz.clust.margin.left + viz.clust.dim.width + 5.25 * viz.dendro_room.row;\n\n  if (tmp_left > max_room) {\n    tmp_left = max_room;\n  }\n\n  // tmp_top =  viz.clust.margin.top + 3 * viz.uni_margin - 50;\n  tmp_top = viz.clust.margin.top + 3 * viz.uni_margin + 90;\n\n  // reposition tree icon\n  d3.select(cgm.params.root + ' .' + 'tree_icon')\n    .attr('transform', function () {\n      var inst_translation;\n      tmp_top = tmp_top - 75;\n      inst_translation = 'translate(' + tmp_left + ',' + tmp_top + ')';\n      return inst_translation;\n    })\n    .style('opacity', 1);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/menus/position_tree_icon.js","module.exports = function position_filter_icon(cgm) {\n  var viz = cgm.params.viz;\n  var tmp_left;\n  var tmp_top;\n\n  // keep slider near clustergram\n  var max_room = viz.svg_dim.width - 3 * viz.uni_margin;\n\n  // position close to row dendrogram trapezoids\n  tmp_left =\n    viz.clust.margin.left + viz.clust.dim.width + 4 * viz.dendro_room.row + 7;\n\n  if (tmp_left > max_room) {\n    tmp_left = max_room;\n  }\n\n  // tmp_top =  viz.clust.margin.top + 3 * viz.uni_margin - 50;\n  tmp_top = viz.clust.margin.top + 3 * viz.uni_margin + 152;\n\n  // reposition tree icon\n  d3.select(cgm.params.root + ' .' + 'filter_icon')\n    .attr('transform', function () {\n      var inst_translation;\n      tmp_top = tmp_top - 75;\n      inst_translation = 'translate(' + tmp_left + ',' + tmp_top + ')';\n      return inst_translation;\n    })\n    .style('opacity', 1);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/menus/position_filter_icon.js","module.exports = function position_tree_menu(cgm) {\n  var params = cgm.params;\n\n  if (d3.select(params.root + ' .tree_menu').empty() === false) {\n    var menu_width = cgm.params.viz.tree_menu_width;\n\n    d3.select(params.root + ' .tree_menu').attr('transform', function () {\n      var shift = {};\n      shift.x =\n        params.viz.clust.dim.width +\n        params.viz.clust.margin.left -\n        menu_width +\n        30;\n      shift.y = params.viz.clust.margin.top + 15;\n      return 'translate(' + shift.x + ', ' + shift.y + ')';\n    });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/menus/position_tree_menu.js","module.exports = function grid_lines_viz(params, duration = 0) {\n  var delay = 0;\n  if (duration > 0) {\n    delay = 2000;\n  }\n\n  var horz_lines = d3.selectAll(params.root + ' .horz_lines');\n  var vert_lines = d3.selectAll(params.root + ' .vert_lines');\n\n  horz_lines\n    .style('opacity', 0)\n    .attr('transform', function (d) {\n      var inst_index = d.row_index;\n      var inst_trans = params.viz.y_scale(inst_index);\n      return 'translate(  0,' + inst_trans + ') rotate(0)';\n    })\n    .transition()\n    .duration(duration)\n    .delay(delay)\n    .style('opacity', 1);\n\n  horz_lines\n    .append('line')\n    .attr('x1', 0)\n    .attr('x2', params.viz.clust.dim.width)\n    .style('stroke-width', function () {\n      var inst_width = params.viz.border_width.y;\n      return inst_width + 'px';\n    });\n\n  vert_lines\n    .style('opacity', 0)\n    .attr('transform', function (d) {\n      var inst_index = d.col_index;\n      var inst_trans = params.viz.x_scale(inst_index);\n      return 'translate(' + inst_trans + ') rotate(-90)';\n    })\n    .transition()\n    .duration(duration)\n    .delay(delay)\n    .style('opacity', 1);\n\n  vert_lines\n    .append('line')\n    .attr('x1', 0)\n    .attr('x2', -params.viz.clust.dim.height)\n    .style('stroke-width', function () {\n      var inst_width = params.viz.border_width.x;\n      return inst_width + 'px';\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/grid_lines_viz.js","/* eslint-disable */\n\nvar run_segment = require('./run_segment');\nvar play_intro = require('./play_intro');\nvar play_zoom = require('./play_zoom');\nvar play_reset_zoom = require('./play_reset_zoom');\nvar play_reorder_row = require('./play_reorder_row');\nvar play_reorder_buttons = require('./play_reorder_buttons');\nvar play_search = require('./play_search');\nvar play_filter = require('./play_filter');\nvar quick_cluster = require('./quick_cluster');\nvar play_groups = require('./play_groups');\nvar play_categories = require('./play_categories');\nvar play_conclusion = require('./play_conclusion');\nvar toggle_play_button = require('./toggle_play_button');\nvar play_menu_button = require('./play_menu_button');\nvar $ = require('jquery');\n\nmodule.exports = function play_demo() {\n  var cgm = this;\n  var params = cgm.params;\n\n  if (d3.select(params.root + ' .running_demo').empty()) {\n    // prevent more than one demo from running at once\n    d3.select(params.root + ' .play_button').classed('running_demo', true);\n\n    toggle_play_button(params, false);\n\n    // prevent user interaction while playing\n    $.blockUI({\n      css: {\n        border: 'none',\n        padding: '15px',\n        backgroundColor: '#000',\n        '-webkit-border-radius': '10px',\n        '-moz-border-radius': '10px',\n        opacity: 0,\n        color: '#fff',\n        cursor: 'default'\n      }\n    });\n\n    d3.selectAll('.blockUI').style('opacity', 0);\n\n    // intro text\n    var inst_time = 750;\n\n    if (cgm.params.viz.is_expand === false) {\n      inst_time = run_segment(params, inst_time, quick_cluster);\n      inst_time = inst_time - 1500;\n    }\n\n    // clustergram interaction\n    ///////////////////////////////////\n    inst_time = run_segment(params, inst_time, play_intro);\n    inst_time = run_segment(params, inst_time, play_zoom);\n    inst_time = run_segment(cgm, inst_time, play_reset_zoom);\n    inst_time = run_segment(params, inst_time, play_categories);\n    inst_time = run_segment(params, inst_time, play_reorder_row);\n\n    // sidebar interaction\n    ///////////////////////////////////\n    inst_time = run_segment(params, inst_time, play_menu_button);\n    inst_time = run_segment(params, inst_time, play_groups);\n    inst_time = run_segment(params, inst_time, play_reorder_buttons);\n    inst_time = run_segment(params, inst_time, play_search);\n    inst_time = run_segment(cgm, inst_time, play_filter);\n\n    // conclusion\n    ///////////////////////////////////\n    inst_time = run_segment(params, inst_time, quick_cluster);\n    inst_time = run_segment(params, inst_time, play_conclusion);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_demo.js","module.exports = function run_segment(segment_data, inst_time, inst_segment) {\n  /* eslint-disable */\n\n  var timer = setTimeout(inst_segment().run, inst_time, segment_data);\n\n  // set up kill demo that will stop setTimeouts\n  //////////////////////////////////////////////////\n  // if (clear_timer){\n  //   clearTimeout(timer);\n  // }\n\n  var inst_duration = inst_segment().get_duration();\n  inst_time = inst_time + inst_duration;\n\n  return inst_time;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/run_segment.js","var demo_text = require('./demo_text');\n\nmodule.exports = function play_intro() {\n  var speed_up = 1;\n\n  function run(params) {\n    var text_1 =\n      'Clustergrammer allows users to generate\\ninteractive and ' +\n      'sharable visualizations\\nby uploading a matrix';\n    var text_2 =\n      \"This demo will quickly overview some\\nof Clustergrammer's \" +\n      'interactive features';\n\n    setTimeout(demo_text, 0, params, text_1, 4500 / speed_up);\n    setTimeout(demo_text, 4500 / speed_up, params, text_2, 4500 / speed_up);\n  }\n\n  function get_duration() {\n    return 10000 / speed_up;\n  }\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_intro.js","module.exports = function demo_text(params, text, read_duration) {\n  var split_text = text.split('\\n');\n\n  if (split_text.length < 3) {\n    split_text.push('');\n  }\n\n  d3.select(params.root + ' .demo_group')\n    .style('opacity', 0)\n    .transition()\n    .duration(250)\n    .style('opacity', 1)\n    .transition()\n    .duration(250)\n    .delay(read_duration)\n    .style('opacity', 0);\n\n  for (var i = 0; i < split_text.length; i++) {\n    var inst_text_num = i + 1;\n\n    // make text box\n    //////////////////\n    var inst_text_obj = d3\n      .select(params.root + ' .demo_group')\n      .select('#text_' + inst_text_num)\n      .text(split_text[i]);\n    var bbox = inst_text_obj[0][0].getBBox();\n\n    var box_opacity = 0.9;\n\n    var tmp_fs = Number(\n      d3\n        .select('.demo_group')\n        .select('text')\n        .style('font-size')\n        .replace('px', '')\n    );\n    var shift_height = tmp_fs * 1.3;\n\n    d3.select(params.root + ' .demo_group')\n      .select('.rect_' + inst_text_num)\n      .style('fill', 'white')\n      .attr('width', bbox.width + 20)\n      .attr('height', bbox.height)\n      .attr('x', -10)\n      .attr('y', bbox.y + i * shift_height)\n      .style('opacity', box_opacity);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/demo_text.js","var demo_text = require('./demo_text');\nvar two_translate_zoom = require('../zoom/two_translate_zoom');\n\nmodule.exports = function play_zoom() {\n  function run(cgm) {\n    var params = cgm.params;\n    var text = 'Zoom and pan by\\nscrolling and dragging';\n    demo_text(params, text, 4000);\n\n    setTimeout(two_translate_zoom, 1500, cgm, 0, 0, 4);\n  }\n\n  function get_duration() {\n    return 4000;\n  }\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_zoom.js","var demo_text = require('./demo_text');\nvar two_translate_zoom = require('../zoom/two_translate_zoom');\nvar sim_click = require('./sim_click');\n\nmodule.exports = function play_reset_zoom() {\n  function run(cgm) {\n    var params = cgm.params;\n\n    var text = 'Reset zoom by double-clicking\\n';\n    demo_text(params, text, 4000);\n\n    setTimeout(sim_click, 2000, params, 'double', 300, 300);\n    setTimeout(two_translate_zoom, 2400, cgm, 0, 0, 1);\n  }\n\n  function get_duration() {\n    return 4500;\n  }\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_reset_zoom.js","module.exports = function sim_click(params, single_double, pos_x, pos_y) {\n  var click_duration = 200;\n\n  var click_circle = d3\n    .select(params.root + ' .viz_svg')\n    .append('circle')\n    .attr('cx', pos_x)\n    .attr('cy', pos_y)\n    .attr('r', 25)\n    .style('stroke', 'black')\n    .style('stroke-width', '3px')\n    .style('fill', '#007f00')\n    .style('opacity', 0.5);\n\n  if (single_double === 'double') {\n    click_circle\n      .transition()\n      .duration(click_duration)\n      .style('opacity', 0.0)\n      .transition()\n      .duration(50)\n      .style('opacity', 0.5)\n      .transition()\n      .duration(click_duration)\n      .style('opacity', 0.0)\n      .remove();\n  } else {\n    click_circle\n      .transition()\n      .duration(click_duration)\n      .style('opacity', 0.0)\n      .transition()\n      .duration(250)\n      .remove();\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/sim_click.js","var demo_text = require('./demo_text');\nvar sim_click = require('./sim_click');\nvar $ = require('jquery');\n\nmodule.exports = function play_reorder_row() {\n  /* eslint-disable */\n\n  function run(params) {\n    var text =\n      'Reorder the matrix based on a single\\nrow or column by double-clicking a\\nlabel';\n    demo_text(params, text, 7000);\n\n    var inst_element = get_row_element(params, 'EGFR');\n\n    var group_trans = d3.select(inst_element).attr('transform');\n\n    var container_trans = d3\n      .select(params.root + ' .clust_container')\n      .attr('transform')\n      .split(',')[1]\n      .replace(')', '');\n\n    var x_trans = params.viz.norm_labels.width.row * 0.9;\n\n    var row_trans = group_trans.split(',')[1].replace(')', '');\n    var y_trans = String(\n      Number(row_trans) + Number(container_trans) + params.viz.rect_height / 2\n    );\n\n    var wait_click = 4000;\n    setTimeout(sim_click, wait_click, params, 'double', x_trans, y_trans);\n    var wait_reorder = wait_click + 300;\n    setTimeout(fire_double_click_row, wait_reorder, params, inst_element);\n  }\n\n  function get_duration() {\n    return 8000;\n  }\n\n  function get_row_element(params, inst_row) {\n    var inst_element = d3\n      .selectAll(params.root + ' .row_label_group')\n      .filter(function () {\n        var inst_data = this.__data__;\n        return inst_data.name == inst_row;\n      })[0][0];\n\n    return inst_element;\n  }\n\n  function fire_double_click_row(params, inst_element) {\n    $(inst_element).d3DblClick();\n  }\n\n  // allows doubleclicking on d3 element\n  $.fn.d3DblClick = function () {\n    this.each(function (i, e) {\n      var evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent(\n        'dblclick',\n        true,\n        true,\n        window,\n        0,\n        0,\n        0,\n        0,\n        0,\n        false,\n        false,\n        false,\n        false,\n        0,\n        null\n      );\n      e.dispatchEvent(evt);\n    });\n  };\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_reorder_row.js","var demo_text = require('./demo_text');\nvar highlight_sidebar_element = require('./highlight_sidebar_element');\nvar $ = require('jquery');\n\nmodule.exports = function play_reorder_buttons() {\n  /* eslint-disable */\n\n  function run(params) {\n    var text =\n      'Reorder all rows and columns\\nby clicking the reorder\\n buttons';\n    demo_text(params, text, 9000);\n\n    setTimeout(highlight_sidebar_element, 3000, params, 'toggle_col_order');\n    setTimeout(click_reorder_button, 3500, params, 'col', 'rank');\n\n    setTimeout(highlight_sidebar_element, 7000, params, 'toggle_row_order');\n    setTimeout(click_reorder_button, 7500, params, 'row', 'rank');\n  }\n\n  function get_duration() {\n    return 11000;\n  }\n\n  function click_reorder_button(params, inst_rc, inst_order) {\n    var inst_button = d3\n      .selectAll('.toggle_' + inst_rc + '_order .btn')\n      .filter(function () {\n        return this.__data__ == inst_order;\n      })[0];\n\n    $(inst_button).click();\n  }\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_reorder_buttons.js","module.exports = function highlight_sidebar_element(\n  params,\n  highlight_class,\n  duration = 4000\n) {\n  if (highlight_class.indexOf('slider') < 0) {\n    d3.select(params.root + ' .' + highlight_class)\n      .style('background', '#007f00')\n      .style('box-shadow', '0px 0px 10px 5px #007f00')\n      .transition()\n      .duration(1)\n      .delay(duration)\n      .style('background', '#FFFFFF')\n      .style('box-shadow', 'none');\n  } else {\n    d3.select(params.root + ' .' + highlight_class)\n      .style('box-shadow', '0px 0px 10px 5px #007f00')\n      .transition()\n      .duration(1)\n      .delay(duration)\n      .style('box-shadow', 'none');\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/highlight_sidebar_element.js","var demo_text = require('./demo_text');\nvar highlight_sidebar_element = require('./highlight_sidebar_element');\nvar two_translate_zoom = require('../zoom/two_translate_zoom');\nvar $ = require('jquery');\n\nmodule.exports = function play_search() {\n  function run(cgm) {\n    var params = cgm.params;\n    var text = 'Search for rows using\\nthe search box';\n    demo_text(params, text, 5000);\n\n    var ini_delay = 2500;\n    setTimeout(\n      highlight_sidebar_element,\n      ini_delay,\n      params,\n      'gene_search_container'\n    );\n\n    // manually mimic typing and autocomplete\n    setTimeout(type_out_search, ini_delay + 1000, params, 'E');\n    setTimeout(type_out_search, ini_delay + 1500, params, 'EG');\n    setTimeout(type_out_search, ini_delay + 2000, params, 'EGF');\n    setTimeout(type_out_search, ini_delay + 2500, params, 'EGFR');\n\n    setTimeout(run_search, 5500, params);\n\n    setTimeout(two_translate_zoom, 7500, cgm, 0, 0, 1);\n  }\n\n  function get_duration() {\n    return 10000;\n  }\n\n  function type_out_search(params, inst_string) {\n    $(params.root + ' .gene_search_box').val(inst_string);\n    $(params.root + ' .gene_search_box').autocomplete('search', inst_string);\n  }\n\n  function run_search(params) {\n    $(params.root + ' .submit_gene_button').click();\n    $(params.root + ' .gene_search_box').autocomplete('search', '');\n  }\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_search.js","var demo_text = require('./demo_text');\nvar highlight_sidebar_element = require('./highlight_sidebar_element');\nvar update_viz_with_view = require('../network/update_viz_with_view');\nvar $ = require('jquery');\n\nmodule.exports = function play_filter() {\n  function run(cgm) {\n    var params = cgm.params;\n\n    var text = 'Filter rows based on sum or\\nvariance using the sliders';\n    demo_text(params, text, 4000);\n\n    var filter_type = 'N_row_sum';\n\n    setTimeout(\n      highlight_sidebar_element,\n      5000,\n      params,\n      'slider_' + filter_type,\n      13000\n    );\n\n    text = 'Filter: Top 20 rows by sum';\n    setTimeout(demo_text, 5000, params, text, 4000);\n    setTimeout(run_update, 5300, cgm, filter_type, 20, 1);\n\n    text = 'Filter: Top 10 rows by sum';\n    setTimeout(demo_text, 10000, params, text, 4000);\n    setTimeout(run_update, 10300, cgm, filter_type, 10, 2);\n\n    text = 'Filter: All rows';\n    setTimeout(demo_text, 15000, params, text, 4000);\n    setTimeout(run_update, 15300, cgm, filter_type, 'all', 0);\n  }\n\n  function get_duration() {\n    return 19500;\n  }\n\n  function run_update(cgm, filter_type, filter_value, filter_index) {\n    var params = cgm.params;\n\n    var requested_view = {};\n    requested_view[filter_type] = filter_value;\n    update_viz_with_view(cgm, requested_view);\n\n    // quick fix for slider\n    $(params.root + ' .slider_' + filter_type).slider('value', filter_index);\n\n    var unit_name;\n    if (filter_type === 'N_row_sum') {\n      unit_name = 'sum';\n    } else {\n      unit_name = 'variance';\n    }\n\n    d3.select(params.root + ' .title_' + filter_type).text(\n      'Top rows ' + unit_name + ': ' + filter_value\n    );\n  }\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_filter.js","var make_network_using_view = require('./make_network_using_view');\nvar disable_sidebar = require('../sidebar/disable_sidebar');\nvar update_viz_with_network = require('../update/update_viz_with_network');\n\nmodule.exports = function update_viz_with_view(cgm, requested_view) {\n  disable_sidebar(cgm.params);\n\n  // make new_network_data by filtering the original network data\n  var new_network_data = make_network_using_view(\n    cgm.config,\n    cgm.params,\n    requested_view\n  );\n\n  // reset crop button\n  d3.select(cgm.params.root + ' .crop_button')\n    .style('color', '#337ab7')\n    .classed('fa-crop', true)\n    .classed('fa-undo', false)\n    .classed('active_cropping', false);\n\n  // reset dendrogram filtering when updating with a new view\n  // e.g. with the row filter sliders\n  ['row', 'col'].forEach(function (inst_rc) {\n    // set class to reflect that no filtering was ran\n    d3.select(cgm.params.root + ' .' + inst_rc + '_dendro_icons_group').classed(\n      'ran_filter',\n      false\n    );\n\n    // display all crop buttons when cropping has not been done\n    d3.select(\n      cgm.params.root + ' .' + inst_rc + '_dendro_icons_container'\n    ).style('display', 'block');\n  });\n\n  update_viz_with_network(cgm, new_network_data);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/network/update_viz_with_view.js","module.exports = function disable_sidebar(params) {\n  d3.selectAll(params.root + ' .btn').attr('disabled', true);\n  d3.select(params.viz.viz_svg).style('opacity', 0.7);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/sidebar/disable_sidebar.js","var make_params = require('../params/make_params');\nvar define_enter_exit_delays = require('../network/define_enter_exit_delays');\nvar enter_exit_update = require('../enter/enter_exit_update');\nvar initialize_resizing = require('../initialize_resizing');\nvar make_col_cat = require('../categories/make_col_cat');\nvar make_row_cat = require('../categories/make_row_cat');\nvar make_row_dendro = require('../dendrogram/make_row_dendro');\nvar make_col_dendro = require('../dendrogram/make_col_dendro');\n// var ini_sidebar = require('../sidebar/ini_sidebar');\nvar enable_sidebar = require('../sidebar/enable_sidebar');\nvar ini_doubleclick = require('../zoom/ini_doubleclick');\nvar update_reorder_buttons = require('../reorder/update_reorder_buttons');\nvar make_row_cat_super_labels = require('../labels/make_row_cat_super_labels');\nvar modify_row_node_cats = require('./modify_row_node_cats');\nvar run_zoom = require('../zoom/run_zoom');\nvar ds_enter_exit_update = require('../enter/ds_enter_exit_update');\nvar make_cat_params = require('../params/make_cat_params');\nvar $ = require('jquery');\n\nmodule.exports = function update_viz_with_network(cgm, new_network_data) {\n  // set runnning_update class, prevents multiple update from running at once\n  d3.select(cgm.params.viz.viz_svg).classed('running_update', true);\n\n  // remove downsampled rows always\n  d3.selectAll(\n    cgm.params.root + ' .ds' + String(cgm.params.viz.ds_level) + '_row'\n  ).remove();\n\n  // run optional callback function\n  if (cgm.params.matrix_update_callback != null) {\n    cgm.params.matrix_update_callback();\n  }\n\n  // copy persistent parameters\n  var inst_distance_metric = cgm.params.matrix.distance_metric;\n  var inst_linkage_type = cgm.params.matrix.linkage_type;\n  var inst_filter_state = cgm.params.matrix.filter_state;\n  var inst_normalization_state = cgm.params.matrix.normalization_state;\n\n  var inst_group_level = cgm.params.group_level;\n  var inst_crop_fitler = cgm.params.crop_filter_nodes;\n\n  // make tmp config to make new params\n  var tmp_config = $.extend(true, {}, cgm.config);\n\n  var new_row_cats = null;\n\n  // bring in 'new' category data\n  if (cgm.params.new_row_cats != null) {\n    modify_row_node_cats(cgm.params.new_row_cats, new_network_data.row_nodes);\n    new_row_cats = cgm.params.new_row_cats;\n    cgm.params.new_row_cats = new_row_cats;\n    // do not preserve the updated (row) cats\n    var predefined_cat_colors = true;\n    cgm.params.viz = make_cat_params(\n      cgm.params,\n      cgm.params.viz,\n      predefined_cat_colors\n    );\n  }\n\n  tmp_config.network_data = new_network_data;\n  tmp_config.inst_order = cgm.params.viz.inst_order;\n  tmp_config.input_domain = cgm.params.matrix.opacity_scale.domain()[1];\n\n  update_reorder_buttons(tmp_config, cgm.params);\n\n  // tmp_config.ini_expand = false;\n  tmp_config.ini_view = null;\n  tmp_config.current_col_cat = cgm.params.current_col_cat;\n\n  // disabled, causing problems when cropping\n  // always preserve category colors when updating\n  tmp_config.cat_colors = cgm.params.viz.cat_colors;\n\n  var new_params = make_params(tmp_config);\n\n  // this function is sensitive to further updates, so run here\n  var delays = define_enter_exit_delays(cgm.params, new_params);\n\n  // pass the newly calcluated params back to the cgm object\n  cgm.params = new_params;\n\n  // set up zoom\n  cgm.params.zoom_behavior = d3.behavior\n    .zoom()\n    .scaleExtent([1, cgm.params.viz.square_zoom * cgm.params.viz.zoom_ratio.x])\n    .on('zoom', function () {\n      run_zoom(cgm);\n    });\n\n  // Persistent Parameters\n  /////////////////////////\n  cgm.params.matrix.distance_metric = inst_distance_metric;\n  cgm.params.matrix.linkage_type = inst_linkage_type;\n  cgm.params.matrix.filter_state = inst_filter_state;\n  cgm.params.matrix.normalization_state = inst_normalization_state;\n\n  // have persistent group levels while updating\n  cgm.params.group_level = inst_group_level;\n\n  // have persistent crop_filter_nodes while updating\n  cgm.params.crop_filter_nodes = inst_crop_fitler;\n\n  // only run enter-exit-updates if there is no downsampling\n  if (cgm.params.viz.ds_num_levels === 0) {\n    // new_network_data is necessary\n    enter_exit_update(cgm, new_network_data, delays);\n  } else {\n    ds_enter_exit_update(cgm);\n  }\n\n  // reduce opacity during update\n  d3.select(cgm.params.viz.viz_svg).style('opacity', 0.7);\n\n  make_row_cat(cgm);\n  make_row_cat_super_labels(cgm);\n\n  if (cgm.params.viz.show_categories.col) {\n    make_col_cat(cgm);\n  }\n\n  make_row_dendro(cgm);\n  make_col_dendro(cgm);\n\n  initialize_resizing(cgm);\n\n  d3.select(cgm.params.viz.viz_svg).call(cgm.params.zoom_behavior);\n\n  ini_doubleclick(cgm);\n\n  // customization\n  // ini_sidebar(cgm);\n\n  cgm.params.viz.run_trans = true;\n\n  // d3.selectAll(cgm.params.viz.root_tips)\n  //   .style('opacity',0);\n\n  setTimeout(enable_sidebar, 2500, cgm.params);\n\n  // remove all dendro shadows\n  setTimeout(remove_shadows, 50);\n  setTimeout(remove_shadows, 100);\n  setTimeout(remove_shadows, 500);\n  setTimeout(remove_shadows, 1000);\n  setTimeout(remove_shadows, 1500);\n\n  function remove_shadows() {\n    d3.selectAll('.dendro_shadow').remove();\n  }\n\n  function finish_update() {\n    d3.select(cgm.params.viz.viz_svg)\n      .transition()\n      .duration(250)\n      .style('opacity', 1.0);\n\n    setTimeout(finish_update_class, 1000);\n  }\n\n  setTimeout(finish_update, delays.enter);\n\n  function finish_update_class() {\n    d3.select(cgm.params.viz.viz_svg).classed('running_update', false);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/update/update_viz_with_network.js","var map = require('underscore/cjs/map');\nvar difference = require('underscore/cjs/difference');\n\nmodule.exports = function (old_params, params) {\n  // exit, update, enter\n\n  // check if exit or enter or both are required\n  var old_row_nodes = old_params.network_data.row_nodes;\n  var old_col_nodes = old_params.network_data.col_nodes;\n  var old_row = map(old_row_nodes, function (d) {\n    return d.name;\n  });\n  var old_col = map(old_col_nodes, function (d) {\n    return d.name;\n  });\n  var all_old_nodes = old_row.concat(old_col);\n\n  var row_nodes = params.network_data.row_nodes;\n  var col_nodes = params.network_data.col_nodes;\n  var row = map(row_nodes, function (d) {\n    return d.name;\n  });\n  var col = map(col_nodes, function (d) {\n    return d.name;\n  });\n  var all_nodes = row.concat(col);\n\n  var exit_nodes = difference(all_old_nodes, all_nodes).length;\n  var enter_nodes = difference(all_nodes, all_old_nodes).length;\n\n  var delays = {};\n\n  if (exit_nodes > 0) {\n    delays.update = 1000;\n  } else {\n    delays.update = 0;\n  }\n\n  if (enter_nodes > 0) {\n    delays.enter = 1000;\n  } else {\n    delays.enter = 0;\n  }\n\n  delays.enter = delays.enter + delays.update;\n\n  delays.run_transition = true;\n\n  var old_num_links = old_params.network_data.links.length;\n  var new_num_links = params.network_data.links.length;\n  var cutoff_num_links = 0.5 * params.matrix.def_large_matrix;\n\n  if (old_num_links > cutoff_num_links || new_num_links > cutoff_num_links) {\n    delays.run_transition = false;\n    delays.update = 0;\n    delays.enter = 0;\n  }\n\n  return delays;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/network/define_enter_exit_delays.js","var _cb = require('./_cb.js');\nvar _isArrayLike = require('./_isArrayLike.js');\nvar keys = require('./keys.js');\n\n// Return the results of applying the iteratee to each element.\nfunction map(obj, iteratee, context) {\n  iteratee = _cb(iteratee, context);\n  var _keys = !_isArrayLike(obj) && keys(obj),\n      length = (_keys || obj).length,\n      results = Array(length);\n  for (var index = 0; index < length; index++) {\n    var currentKey = _keys ? _keys[index] : index;\n    results[index] = iteratee(obj[currentKey], currentKey, obj);\n  }\n  return results;\n}\n\nmodule.exports = map;\n\n\n\n// WEBPACK FOOTER //\n// node_modules/underscore/cjs/map.js","var reset_size_after_update = require('../reset_size/reset_size_after_update');\nvar make_row_label_container = require('../labels/make_row_label_container');\nvar make_col_label_container = require('../labels/make_col_label_container');\nvar eeu_existing_row = require('./eeu_existing_row');\nvar exit_components = require('../exit/exit_components');\nvar draw_gridlines = require('../matrix/draw_gridlines');\nvar enter_row_groups = require('../enter/enter_row_groups');\nvar resize_containers = require('../reset_size/resize_containers');\nvar label_constrain_and_trim = require('../labels/label_constrain_and_trim');\nvar d3_tip_custom = require('../tooltip/d3_tip_custom');\n\nmodule.exports = function enter_exit_update(cgm, network_data, delays) {\n  var params = cgm.params;\n\n  // remove old tooltips\n  d3.selectAll(params.viz.root_tips).remove();\n\n  // d3-tooltip - for tiles\n  var tip = d3_tip_custom()\n    .attr('class', function () {\n      var root_tip_selector = params.viz.root_tips.replace('.', '');\n      var class_string =\n        root_tip_selector + ' d3-tip ' + root_tip_selector + '_tile_tip';\n      return class_string;\n    })\n    .direction('nw')\n    .offset([0, 0])\n    .style('display', 'none')\n    .html(function (d) {\n      var inst_value = String(d.value.toFixed(3));\n      var tooltip_string;\n\n      if (params.keep_orig) {\n        var orig_value = String(d.value_orig.toFixed(3));\n        tooltip_string =\n          '<p>' +\n          d.row_name +\n          ' and ' +\n          d.col_name +\n          '</p>' +\n          '<p> normalized value: ' +\n          inst_value +\n          '</p>' +\n          '<div> original value: ' +\n          orig_value +\n          '</div>';\n      } else {\n        tooltip_string =\n          '<p>' +\n          d.row_name +\n          ' and ' +\n          d.col_name +\n          '</p>' +\n          '<div> value: ' +\n          inst_value +\n          '</div>';\n      }\n\n      return tooltip_string;\n    });\n\n  d3.select(params.root + ' .clust_group').call(tip);\n\n  // necessary for repositioning clust, col and col-cat containers\n  resize_containers(params);\n\n  var duration = 1000;\n\n  // make global so that names can be accessed\n  var row_nodes = network_data.row_nodes;\n  var col_nodes = network_data.col_nodes;\n  var links = network_data.links;\n\n  //\n  var tile_data = links;\n\n  // add name to links for object constancy\n  for (var i = 0; i < tile_data.length; i++) {\n    var d = tile_data[i];\n    tile_data[i].name =\n      row_nodes[d.source].name + '_' + col_nodes[d.target].name;\n  }\n\n  // move rows\n  var move_rows = d3\n    .select(params.root + ' .clust_group')\n    .selectAll('.row')\n    .data(params.matrix.matrix, function (d) {\n      return d.name;\n    });\n\n  if (delays.run_transition) {\n    move_rows\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('transform', function (d) {\n        var tmp_index = d.row_index;\n        return 'translate(0,' + params.viz.y_scale(tmp_index) + ')';\n      });\n  } else {\n    move_rows.attr('transform', function (d) {\n      var tmp_index = d.row_index;\n      return 'translate(0,' + params.viz.y_scale(tmp_index) + ')';\n    });\n  }\n\n  // update existing rows - enter, exit, update tiles in existing row\n  d3.select(params.root + ' .clust_group')\n    .selectAll('.row')\n    .each(function (d) {\n      // TODO add tip back to arguments\n      var inst_selection = this;\n      eeu_existing_row(params, d, delays, duration, inst_selection, tip);\n    });\n\n  d3.selectAll(params.root + ' .horz_lines').remove();\n  d3.selectAll(params.root + ' .vert_lines').remove();\n\n  // exit\n  ////////////\n  exit_components(params, delays, duration);\n\n  // resize clust components using appropriate delays\n  reset_size_after_update(cgm, duration, delays);\n\n  // enter new elements\n  //////////////////////////\n  enter_row_groups(params, delays, duration, tip);\n\n  // update existing rows\n  make_row_label_container(cgm, duration);\n  make_col_label_container(cgm, duration);\n\n  draw_gridlines(params, delays, duration);\n\n  setTimeout(label_constrain_and_trim, 2000, params);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/enter_exit_update.js","var utils = require('../Utils_clust');\nvar calc_clust_height = require('../params/calc_clust_height');\nvar get_svg_dim = require('../params/get_svg_dim');\nvar calc_clust_width = require('../params/calc_clust_width');\nvar reset_zoom = require('../zoom/reset_zoom');\nvar resize_dendro = require('./resize_dendro');\nvar resize_super_labels = require('./resize_super_labels');\nvar resize_spillover = require('./resize_spillover');\nvar resize_row_labels = require('./resize_row_labels');\nvar resize_row_viz = require('./resize_row_viz');\nvar resize_col_labels = require('./resize_col_labels');\nvar resize_col_text = require('./resize_col_text');\nvar resize_col_triangle = require('./resize_col_triangle');\nvar resize_col_hlight = require('./resize_col_hlight');\nvar resize_label_bars = require('./resize_label_bars');\nvar calc_default_fs = require('../params/calc_default_fs');\nvar calc_zoom_switching = require('../zoom/calc_zoom_switching');\n// var show_visible_area = require('../zoom/show_visible_area');\nvar ini_zoom_info = require('../zoom/ini_zoom_info');\n\nmodule.exports = function reset_size_after_update(\n  cgm,\n  duration = 0,\n  delays = null\n) {\n  if (delays === null) {\n    delays = {};\n    delays.enter = 0;\n    delays.update = 0;\n    delays.run_transition = false;\n  }\n\n  var params = cgm.params;\n\n  var row_nodes = cgm.params.network_data.row_nodes;\n\n  params.zoom_info = ini_zoom_info();\n\n  // // not sure if this is necessary\n  // ////////////////////////////\n  // show_visible_area(params);\n  // // quick fix for column filtering\n  // setTimeout(show_visible_area, 2200, cgm);\n\n  var row_nodes_names = params.network_data.row_nodes_names || [];\n\n  reset_zoom(params);\n\n  // Resetting some visualization parameters\n  params = get_svg_dim(params);\n  params.viz = calc_clust_width(params.viz);\n  params.viz = calc_clust_height(params.viz);\n\n  if (params.sim_mat) {\n    if (params.viz.clust.dim.width <= params.viz.clust.dim.height) {\n      params.viz.clust.dim.height = params.viz.clust.dim.width;\n    } else {\n      params.viz.clust.dim.width = params.viz.clust.dim.height;\n    }\n  }\n\n  params.viz = calc_zoom_switching(params.viz);\n\n  // redefine x_scale and y_scale rangeBands\n  params.viz.x_scale.rangeBands([0, params.viz.clust.dim.width]);\n  params.viz.y_scale.rangeBands([0, params.viz.clust.dim.height]);\n\n  // redefine zoom extent\n  params.viz.square_zoom =\n    params.viz.norm_labels.width.col / (params.viz.x_scale.rangeBand() / 2);\n  params.zoom_behavior.scaleExtent([\n    1,\n    params.viz.square_zoom * params.viz.zoom_ratio.x\n  ]);\n\n  // redefine border width\n  params.viz.border_width.x =\n    params.viz.x_scale.rangeBand() / params.viz.border_fraction;\n  params.viz.border_width.y =\n    params.viz.y_scale.rangeBand() / params.viz.border_fraction;\n\n  params = calc_default_fs(params);\n\n  // resize the svg\n  ///////////////////////\n  var svg_group = d3.select(params.viz.viz_wrapper).select('svg');\n\n  svg_group\n    .select(params.root + ' .grey_background')\n    .transition()\n    .delay(delays.update)\n    .duration(duration)\n    .attr('width', params.viz.clust.dim.width)\n    .attr('height', params.viz.clust.dim.height);\n\n  resize_row_labels(params, svg_group, delays);\n\n  // do not delay the font size change since this will break the bounding box calc\n  svg_group\n    .selectAll('.row_label_group')\n    .select('text')\n    .style('font-size', params.labels.default_fs_row + 'px')\n    .text(function (d) {\n      return utils.normal_name(d);\n    });\n\n  // change the size of the highlighting rects\n  svg_group.selectAll('.row_label_group').each(function () {\n    var bbox = d3.select(this).select('text')[0][0].getBBox();\n    d3.select(this)\n      .select('rect')\n      .attr('x', bbox.x)\n      .attr('y', 0)\n      .attr('width', bbox.width)\n      .attr('height', params.viz.y_scale.rangeBand())\n      .style('fill', 'yellow')\n      .style('opacity', function (d) {\n        var inst_opacity = 0;\n        // highlight target genes\n        if (d.target === 1) {\n          inst_opacity = 1;\n        }\n        return inst_opacity;\n      });\n  });\n\n  resize_row_viz(params, svg_group, delays);\n\n  if (delays.run_transition) {\n    // positioning row text after row text size may have been reduced\n    svg_group\n      .selectAll('.row_label_group')\n      .select('text')\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr(\n        'y',\n        params.viz.rect_height * 0.5 + params.labels.default_fs_row * 0.35\n      );\n\n    svg_group\n      .selectAll('.row_cat_group')\n      .data(row_nodes, function (d) {\n        return d.name;\n      })\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0, ' + params.viz.y_scale(inst_index) + ')';\n      });\n\n    svg_group\n      .selectAll('.row_cat_group')\n      .select('path')\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('d', function () {\n        var origin_x = params.viz.cat_room.symbol_width - 1;\n        var origin_y = 0;\n        var mid_x = 1;\n        var mid_y = params.viz.y_scale.rangeBand() / 2;\n        var final_x = params.viz.cat_room.symbol_width - 1;\n        var final_y = params.viz.y_scale.rangeBand();\n        var output_string =\n          'M ' +\n          origin_x +\n          ',' +\n          origin_y +\n          ' L ' +\n          mid_x +\n          ',' +\n          mid_y +\n          ' L ' +\n          final_x +\n          ',' +\n          final_y +\n          ' Z';\n        return output_string;\n      });\n\n    svg_group\n      .selectAll('.row_dendro_group')\n      .data(row_nodes, function (d) {\n        return d.name;\n      })\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0, ' + params.viz.y_scale(inst_index) + ')';\n      });\n  } else {\n    // positioning row text after row text size may have been reduced\n    svg_group\n      .selectAll('.row_label_group')\n      .select('text')\n      .attr(\n        'y',\n        params.viz.rect_height * 0.5 + params.labels.default_fs_row * 0.35\n      );\n\n    svg_group\n      .selectAll('.row_cat_group')\n      .data(row_nodes, function (d) {\n        return d.name;\n      })\n      .attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0, ' + params.viz.y_scale(inst_index) + ')';\n      });\n\n    svg_group\n      .selectAll('.row_cat_group')\n      .select('path')\n      .attr('d', function () {\n        var origin_x = params.viz.cat_room.symbol_width - 1;\n        var origin_y = 0;\n        var mid_x = 1;\n        var mid_y = params.viz.y_scale.rangeBand() / 2;\n        var final_x = params.viz.cat_room.symbol_width - 1;\n        var final_y = params.viz.y_scale.rangeBand();\n        var output_string =\n          'M ' +\n          origin_x +\n          ',' +\n          origin_y +\n          ' L ' +\n          mid_x +\n          ',' +\n          mid_y +\n          ' L ' +\n          final_x +\n          ',' +\n          final_y +\n          ' Z';\n        return output_string;\n      });\n\n    svg_group\n      .selectAll('.row_dendro_group')\n      .data(row_nodes, function (d) {\n        return d.name;\n      })\n      .attr('transform', function (d) {\n        var inst_index = row_nodes_names.indexOf(d.name);\n        return 'translate(0, ' + params.viz.y_scale(inst_index) + ')';\n      });\n  }\n\n  if (utils.has(params.network_data.row_nodes[0], 'value')) {\n    resize_label_bars(cgm, svg_group);\n  }\n\n  // resize col labels\n  ///////////////////////\n  // reduce width of rotated rects\n\n  resize_col_labels(params, svg_group, delays);\n  resize_col_text(params, svg_group);\n  resize_col_triangle(params, svg_group, delays);\n\n  resize_col_hlight(params, svg_group, delays);\n\n  resize_dendro(params, svg_group, delays);\n  resize_super_labels(params, svg_group, delays);\n  resize_spillover(params.viz, svg_group, delays);\n\n  // reset zoom and translate\n  params.zoom_behavior\n    .scale(1)\n    .translate([params.viz.clust.margin.left, params.viz.clust.margin.top]);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/reset_size_after_update.js","var exit_existing_row = require('../exit/exit_existing_row');\nvar enter_existing_row = require('./enter_existing_row');\nvar update_split_tiles = require('../update/update_split_tiles');\nvar mouseover_tile = require('../matrix/mouseover_tile');\nvar mouseout_tile = require('../matrix/mouseout_tile');\nvar fine_position_tile = require('../matrix/fine_position_tile');\nvar filter = require('underscore/cjs/filter');\nvar contains = require('underscore/cjs/contains');\n\n// TODO add tip back to arguments\nmodule.exports = function eeu_existing_row(\n  params,\n  ini_inp_row_data,\n  delays,\n  duration,\n  row_selection,\n  tip\n) {\n  var inp_row_data = ini_inp_row_data.row_data;\n\n  // remove zero values from\n  var row_values = filter(inp_row_data, function (num) {\n    return num.value != 0;\n  });\n\n  // bind data to tiles\n  var cur_row_tiles = d3\n    .select(row_selection)\n    .selectAll('.tile')\n    .data(row_values, function (d) {\n      return d.col_name;\n    });\n\n  exit_existing_row(params, delays, cur_row_tiles, inp_row_data, row_selection);\n\n  ///////////////////////////\n  // Update\n  ///////////////////////////\n\n  // update tiles in x direction\n  var update_row_tiles = cur_row_tiles\n    .on('mouseover', function (...args) {\n      mouseover_tile(params, this, tip, args);\n    })\n    .on('mouseout', function mouseout() {\n      mouseout_tile(params, this, tip);\n    })\n    .on('click', function () {\n      console.log('click');\n    });\n\n  var col_nodes_names = params.network_data.col_nodes_names;\n\n  if (delays.run_transition) {\n    update_row_tiles\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('width', params.viz.rect_width)\n      .attr('height', params.viz.rect_height)\n      .attr('transform', function (d) {\n        if (contains(col_nodes_names, d.col_name)) {\n          return fine_position_tile(params, d);\n        } else {\n          return 'translate(0,0)';\n        }\n      });\n  } else {\n    update_row_tiles\n      .attr('width', params.viz.rect_width)\n      .attr('height', params.viz.rect_height)\n      .attr('transform', function (d) {\n        if (contains(col_nodes_names, d.col_name)) {\n          return fine_position_tile(params, d);\n        } else {\n          return 'translate(0,0)';\n        }\n      });\n  }\n\n  if (params.matrix.tile_type == 'updn') {\n    update_split_tiles(\n      params,\n      inp_row_data,\n      row_selection,\n      delays,\n      duration,\n      cur_row_tiles,\n      tip\n    );\n  }\n\n  enter_existing_row(params, delays, duration, cur_row_tiles, tip);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/eeu_existing_row.js","var filter = require('underscore/cjs/filter');\n\nmodule.exports = function exit_existing_row(\n  params,\n  delays,\n  cur_row_tiles,\n  inp_row_data,\n  row_selection\n) {\n  if (delays.run_transition) {\n    cur_row_tiles\n      .exit()\n      .transition()\n      .duration(300)\n      .attr('fill-opacity', 0)\n      .remove();\n  } else {\n    cur_row_tiles.exit().attr('fill-opacity', 0).remove();\n  }\n\n  if (params.matrix.tile_type == 'updn') {\n    // value split\n    var row_split_data = filter(inp_row_data, function (num) {\n      return num.value_up != 0 || num.value_dn != 0;\n    });\n\n    // tile_up\n    var cur_tiles_up = d3\n      .select(row_selection)\n      .selectAll('.tile_up')\n      .data(row_split_data, function (d) {\n        return d.col_name;\n      });\n\n    if (delays.run_transition) {\n      cur_tiles_up.exit().transition().duration(300).attr('fill', '0').remove();\n    } else {\n      cur_tiles_up.exit().attr('fill', 0).remove();\n    }\n\n    // tile_dn\n    var cur_tiles_dn = d3\n      .select(row_selection)\n      .selectAll('.tile_dn')\n      .data(row_split_data, function (d) {\n        return d.col_name;\n      });\n\n    if (delays.run_transition) {\n      cur_tiles_dn.exit().transition().duration(300).attr('fill', 0).remove();\n    } else {\n      cur_tiles_dn.exit().attr('fill', 0).remove();\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/exit/exit_existing_row.js","var mouseover_tile = require('../matrix/mouseover_tile');\nvar mouseout_tile = require('../matrix/mouseout_tile');\nvar fine_position_tile = require('../matrix/fine_position_tile');\n\nmodule.exports = function enter_existing_row(\n  params,\n  delays,\n  duration,\n  cur_row_tiles,\n  tip\n) {\n  // enter new tiles\n  var new_tiles = cur_row_tiles\n    .enter()\n    .append('rect')\n    .attr('class', 'tile row_tile')\n    .attr('width', params.viz.rect_width)\n    .attr('height', params.viz.rect_height)\n    .on('mouseover', function (...args) {\n      mouseover_tile(params, this, tip, args);\n    })\n    .on('mouseout', function mouseout() {\n      mouseout_tile(params, this, tip);\n    })\n    .on('click', function () {\n      console.log('click');\n    })\n    .attr('fill-opacity', 0)\n    .attr('transform', function (d) {\n      return fine_position_tile(params, d);\n    });\n\n  if (delays.run_transition) {\n    new_tiles\n      .transition()\n      .delay(delays.enter)\n      .duration(duration)\n      .style('fill', function (d) {\n        return d.value > 0\n          ? params.matrix.tile_colors[0]\n          : params.matrix.tile_colors[1];\n      })\n      .attr('fill-opacity', function (d) {\n        var output_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n        return output_opacity;\n      });\n  } else {\n    new_tiles\n      .style('fill', function (d) {\n        return d.value > 0\n          ? params.matrix.tile_colors[0]\n          : params.matrix.tile_colors[1];\n      })\n      .attr('fill-opacity', function (d) {\n        var output_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n        return output_opacity;\n      });\n  }\n\n  // remove new tiles if necessary\n  new_tiles.each(function (d) {\n    if (Math.abs(d.value_up) > 0 && Math.abs(d.value_dn) > 0) {\n      d3.select(this).remove();\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/enter_existing_row.js","var draw_up_tile = require('../enter/draw_up_tile');\nvar draw_dn_tile = require('../enter/draw_dn_tile');\nvar mouseover_tile = require('../matrix/mouseover_tile');\nvar mouseout_tile = require('../matrix/mouseout_tile');\nvar fine_position_tile = require('../matrix/fine_position_tile');\nvar filter = require('underscore/cjs/filter');\n\nmodule.exports = function update_split_tiles(\n  params,\n  inp_row_data,\n  row_selection,\n  delays,\n  duration,\n  cur_row_tiles,\n  tip\n) {\n  // value split\n  var row_split_data = filter(inp_row_data, function (num) {\n    return num.value_up != 0 || num.value_dn != 0;\n  });\n\n  // tile_up\n  var cur_tiles_up = d3\n    .select(row_selection)\n    .selectAll('.tile_up')\n    .data(row_split_data, function (d) {\n      return d.col_name;\n    });\n\n  // update split tiles_up\n  var update_tiles_up = cur_tiles_up\n    .on('mouseover', function (...args) {\n      mouseover_tile(params, this, tip, args);\n    })\n    .on('mouseout', function mouseout() {\n      mouseout_tile(params, this, tip);\n    })\n    .on('click', function () {\n      console.log('click');\n    });\n\n  if (delays.run_transition) {\n    update_tiles_up\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('d', function () {\n        return draw_up_tile(params);\n      })\n      .attr('transform', function (d) {\n        return fine_position_tile(params, d);\n      });\n  } else {\n    update_tiles_up\n      .attr('d', function () {\n        return draw_up_tile(params);\n      })\n      .attr('transform', function (d) {\n        return fine_position_tile(params, d);\n      });\n  }\n\n  // tile_dn\n  var cur_tiles_dn = d3\n    .select(row_selection)\n    .selectAll('.tile_dn')\n    .data(row_split_data, function (d) {\n      return d.col_name;\n    });\n\n  // update split tiles_dn\n  var update_tiles_dn = cur_tiles_dn\n    .on('mouseover', function (...args) {\n      mouseover_tile(params, this, tip, args);\n    })\n    .on('mouseout', function mouseout() {\n      mouseout_tile(params, this, tip);\n    })\n    .on('click', function () {\n      console.log('click');\n    });\n\n  if (delays.run_transition) {\n    update_tiles_dn\n      .transition()\n      .delay(delays.update)\n      .duration(duration)\n      .attr('d', function () {\n        return draw_dn_tile(params);\n      })\n      .attr('transform', function (d) {\n        return fine_position_tile(params, d);\n      });\n  } else {\n    update_tiles_dn\n      .attr('d', function () {\n        return draw_dn_tile(params);\n      })\n      .attr('transform', function (d) {\n        return fine_position_tile(params, d);\n      });\n  }\n\n  // remove tiles when splitting is done\n  cur_row_tiles.selectAll('.tile').each(function (d) {\n    if (Math.abs(d.value_up) > 0 && Math.abs(d.value_dn) > 0) {\n      d3.select(this).remove();\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/update/update_split_tiles.js","module.exports = function exit_components(params, delays, duration) {\n  var row_nodes = params.network_data.row_nodes;\n  var col_nodes = params.network_data.col_nodes;\n\n  // remove entire rows\n  var exiting_rows = d3\n    .select(params.root + ' .clust_group')\n    .selectAll('.row')\n    .data(params.matrix.matrix, function (d) {\n      return d.name;\n    })\n    .exit();\n\n  if (delays.run_transition) {\n    exiting_rows.transition().duration(duration).style('opacity', 0).remove();\n  } else {\n    exiting_rows.style('opacity', 0).remove();\n  }\n\n  // remove row labels\n  d3.selectAll(params.root + ' .row_label_group')\n    .data(row_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n\n  // remove column labels\n  d3.selectAll(params.root + ' .col_label_group')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n\n  // remove row triangles and colorbars\n  d3.selectAll(params.root + ' .row_cat_group')\n    .data(row_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n\n  // remove row triangles and colorbars\n  d3.selectAll(params.root + ' .row_dendro_group')\n    .data(row_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n\n  d3.selectAll(params.root + ' .col_label_text')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n\n  d3.selectAll(params.root + ' .horz_lines')\n    .data(row_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n\n  d3.selectAll(params.root + ' .vert_lines')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n\n  // remove dendrogram\n  d3.selectAll(params.root + ' .col_cat_group')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n\n  d3.selectAll(params.root + ' .col_dendro_group')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .transition()\n    .duration(duration)\n    .style('opacity', 0)\n    .remove();\n};\n\n\n\n// WEBPACK FOOTER //\n// src/exit/exit_components.js","var enter_new_rows = require('./enter_new_rows');\n\nmodule.exports = function enter_row_groups(params, delays, duration, tip) {\n  // enter new rows\n  var new_row_groups = d3\n    .select(params.root + ' .clust_group')\n    .selectAll('.row')\n    .data(params.matrix.matrix, function (d) {\n      return d.name;\n    })\n    .enter()\n    .append('g')\n    .classed('row', true)\n    .attr('transform', function (d) {\n      return 'translate(0,' + params.viz.y_scale(d.row_index) + ')';\n    });\n\n  new_row_groups.each(function (d) {\n    enter_new_rows(params, d, delays, duration, tip, this);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/enter_row_groups.js","var enter_split_tiles = require('./enter_split_tiles');\nvar mouseover_tile = require('../matrix/mouseover_tile');\nvar mouseout_tile = require('../matrix/mouseout_tile');\nvar fine_position_tile = require('../matrix/fine_position_tile');\nvar filter = require('underscore/cjs/filter');\n\n// make each row in the clustergram\nmodule.exports = function enter_new_rows(\n  params,\n  ini_inp_row_data,\n  delays,\n  duration,\n  tip,\n  row_selection\n) {\n  var inp_row_data = ini_inp_row_data.row_data;\n\n  // remove zero values to make visualization faster\n  var row_data = filter(inp_row_data, function (num) {\n    return num.value !== 0;\n  });\n\n  // update tiles\n  ////////////////////////////////////////////\n  var tile = d3\n    .select(row_selection)\n    .selectAll('rect')\n    .data(row_data, function (d) {\n      return d.col_name;\n    })\n    .enter()\n    .append('rect')\n    .attr('class', 'tile row_tile')\n    .attr('width', params.viz.rect_width)\n    .attr('height', params.viz.rect_height)\n    // switch the color based on up/dn value\n    .style('fill', function (d) {\n      return d.value > 0\n        ? params.matrix.tile_colors[0]\n        : params.matrix.tile_colors[1];\n    })\n    .on('mouseover', function (...args) {\n      mouseover_tile(params, this, tip, args);\n    })\n    .on('mouseout', function mouseout() {\n      mouseout_tile(params, this, tip);\n    })\n    .on('click', function () {\n      console.log('click');\n    });\n\n  tile\n    .style('fill-opacity', 0)\n    .transition()\n    .delay(delays.enter)\n    .duration(duration)\n    .style('fill-opacity', function (d) {\n      // calculate output opacity using the opacity scale\n      var output_opacity = params.matrix.opacity_scale(Math.abs(d.value));\n      return output_opacity;\n    });\n\n  tile.attr('transform', function (d) {\n    return fine_position_tile(params, d);\n  });\n\n  if (params.matrix.tile_type == 'updn') {\n    enter_split_tiles(\n      params,\n      inp_row_data,\n      row_selection,\n      tip,\n      delays,\n      duration,\n      tile\n    );\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/enter_new_rows.js","var draw_up_tile = require('./draw_up_tile');\nvar draw_dn_tile = require('./draw_dn_tile');\nvar fine_position_tile = require('../matrix/fine_position_tile');\nvar filter = require('underscore/cjs/filter');\n\nmodule.exports = function enter_split_tiles(\n  params,\n  inp_row_data,\n  row_selection,\n  tip,\n  delays,\n  duration,\n  tile\n) {\n  // value split\n  var row_split_data = filter(inp_row_data, function (num) {\n    return num.value_up != 0 || num.value_dn != 0;\n  });\n\n  // tile_up\n  var new_tiles_up = d3\n    .select(row_selection)\n    .selectAll('.tile_up')\n    .data(row_split_data, function (d) {\n      return d.col_name;\n    })\n    .enter()\n    .append('path')\n    .attr('class', 'tile_up')\n    .attr('d', function () {\n      return draw_up_tile(params);\n    })\n    .attr('transform', function (d) {\n      return fine_position_tile(params, d);\n    })\n    .style('fill', function () {\n      return params.matrix.tile_colors[0];\n    })\n    .on('mouseover', function (p) {\n      // highlight row - set text to active if\n      d3.selectAll(params.root + ' .row_label_group text').classed(\n        'active',\n        function (d) {\n          return p.row_name === d.name;\n        }\n      );\n\n      d3.selectAll(params.root + ' .col_label_text text').classed(\n        'active',\n        function (d) {\n          return p.col_name === d.name;\n        }\n      );\n      if (params.matrix.show_tile_tooltips) {\n        tip.show(p);\n      }\n    })\n    .on('mouseout', function () {\n      d3.selectAll(params.root + ' text').classed('active', false);\n      if (params.matrix.show_tile_tooltips) {\n        tip.hide();\n      }\n    });\n\n  new_tiles_up\n    .style('fill-opacity', 0)\n    .transition()\n    .delay(delays.enter)\n    .duration(duration)\n    .style('fill-opacity', function (d) {\n      var inst_opacity = 0;\n      if (Math.abs(d.value_dn) > 0) {\n        inst_opacity = params.matrix.opacity_scale(Math.abs(d.value_up));\n      }\n      return inst_opacity;\n    });\n\n  // tile_dn\n  var new_tiles_dn = d3\n    .select(row_selection)\n    .selectAll('.tile_dn')\n    .data(row_split_data, function (d) {\n      return d.col_name;\n    })\n    .enter()\n    .append('path')\n    .attr('class', 'tile_dn')\n    .attr('d', function () {\n      return draw_dn_tile(params);\n    })\n    .attr('transform', function (d) {\n      return fine_position_tile(params, d);\n    })\n    .style('fill', function () {\n      return params.matrix.tile_colors[1];\n    })\n    .on('mouseover', function (p) {\n      // highlight row - set text to active if\n      d3.selectAll(params.root + ' .row_label_group text').classed(\n        'active',\n        function (d) {\n          return p.row_name === d.name;\n        }\n      );\n\n      d3.selectAll(params.root + ' .col_label_text text').classed(\n        'active',\n        function (d) {\n          return p.col_name === d.name;\n        }\n      );\n      if (params.matrix.show_tile_tooltips) {\n        tip.show(p);\n      }\n    })\n    .on('mouseout', function () {\n      d3.selectAll(params.root + ' text').classed('active', false);\n      if (params.matrix.show_tile_tooltips) {\n        tip.hide();\n      }\n    });\n\n  new_tiles_dn\n    .style('fill-opacity', 0)\n    .transition()\n    .delay(delays.enter)\n    .duration(duration)\n    .style('fill-opacity', function (d) {\n      var inst_opacity = 0;\n      if (Math.abs(d.value_up) > 0) {\n        inst_opacity = params.matrix.opacity_scale(Math.abs(d.value_dn));\n      }\n      return inst_opacity;\n    });\n\n  // remove tiles when splitting is done\n  tile.each(function (d) {\n    if (Math.abs(d.value_up) > 0 && Math.abs(d.value_dn) > 0) {\n      d3.select(this).remove();\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/enter_split_tiles.js","module.exports = function resize_containers(params) {\n  // reposition matrix\n  d3.select(params.root + ' .clust_container').attr(\n    'transform',\n    'translate(' +\n      params.viz.clust.margin.left +\n      ',' +\n      params.viz.clust.margin.top +\n      ')'\n  );\n\n  // reposition col container\n  d3.select(params.root + ' .col_label_outer_container').attr(\n    'transform',\n    'translate(0,' + params.viz.norm_labels.width.col + ')'\n  );\n\n  // reposition col_viz container\n  d3.select(params.root + ' .col_cat_outer_container').attr(\n    'transform',\n    function () {\n      var inst_offset = params.viz.norm_labels.width.col + 2;\n      return 'translate(0,' + inst_offset + ')';\n    }\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reset_size/resize_containers.js","module.exports = function enable_sidebar(params) {\n  /* only enable dendrogram sliders if there has been no dendro_filtering */\n\n  // only enable reordering if params.dendro_filter.row === false\n  if (params.dendro_filter.row === false) {\n    // orders are switched!\n    if (params.viz.inst_order.col === 'clust') {\n      d3.select(params.root + ' .row_slider_group')\n        .style('opacity', 1)\n        .style('pointer-events', 'all');\n    }\n  }\n\n  d3.selectAll(params.root + ' .toggle_row_order .btn').attr('disabled', null);\n\n  if (params.dendro_filter.col === false) {\n    // orders are switched!\n    if (params.viz.inst_order.row === 'clust') {\n      d3.select(params.root + ' .col_slider_group')\n        .style('opacity', 1)\n        .style('pointer-events', 'all');\n    }\n  }\n\n  d3.selectAll(params.root + ' .toggle_col_order .btn').attr('disabled', null);\n\n  d3.selectAll(params.root + ' .gene_search_button .btn').attr(\n    'disabled',\n    null\n  );\n\n  params.viz.run_trans = false;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/sidebar/enable_sidebar.js","module.exports = function update_reorder_buttons(tmp_config, params) {\n  ['row', 'col'].forEach(function (inst_rc) {\n    var other_rc;\n    if (inst_rc === 'row') {\n      other_rc = 'col';\n    } else {\n      other_rc = 'row';\n    }\n\n    d3.selectAll(params.root + ' .toggle_' + other_rc + '_order .btn')\n      .filter(function () {\n        return d3.select(this).attr('name') === tmp_config.inst_order[inst_rc];\n      })\n      .classed('active', true);\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/reorder/update_reorder_buttons.js","var remove_node_cats = require('./remove_node_cats');\nvar utils = require('../Utils_clust');\nvar each = require('underscore/cjs/each');\nvar contains = require('underscore/cjs/contains');\n\nmodule.exports = function modify_row_node_cats(\n  cat_data,\n  inst_nodes,\n  strip_names = false\n) {\n  // console.log('MODIFY ROW NODE CATS')\n  // console.log('CAT_DATA')\n  // console.log(cat_data)\n\n  var cat_type_num = 0;\n  var inst_index = 0;\n  var inst_cat_title;\n  var inst_cats;\n  var inst_members;\n  var inst_name;\n  var inst_category;\n  var inst_cat_name;\n  var inst_full_cat;\n  var inst_cat_num;\n\n  // loop through row nodes\n  //////////////////////////\n  each(inst_nodes, function (inst_node) {\n    inst_name = inst_node.name;\n\n    // not sure if this is needed\n    // inst_name = inst_name.toUpperCase();\n\n    if (strip_names === true) {\n      // only consider first part of inst_name\n      ////////////////////////////////////////////\n      // may improve this\n      if (inst_name.indexOf(' ')) {\n        inst_name = inst_name.split(' ')[0];\n      } else if (inst_name.indexOf('_')) {\n        inst_name = inst_name.split('_')[0];\n      }\n    }\n\n    cat_type_num = 0;\n\n    remove_node_cats(inst_node);\n\n    // loop through each category type\n    each(cat_data, function (inst_cat_data) {\n      inst_cat_title = inst_cat_data.cat_title;\n      inst_cats = inst_cat_data.cats;\n\n      // initialize with no category\n      inst_category = 'false';\n      inst_index = -1;\n\n      inst_cat_num = 0;\n\n      // loop through each category in the category-type\n      each(inst_cats, function (inst_cat) {\n        inst_cat_name = inst_cat.cat_name;\n        inst_members = inst_cat.members;\n\n        // add category if node is a member\n        if (contains(inst_members, inst_name)) {\n          inst_category = inst_cat_name;\n          inst_index = inst_cat_num;\n        }\n\n        inst_cat_num = inst_cat_num + 1;\n      });\n\n      if (utils.has(inst_cat_data, 'pval')) {\n        var inst_pval = inst_cat_data.pval.toExponential();\n        inst_full_cat =\n          inst_cat_title +\n          ': ' +\n          inst_category +\n          '<p> Pval ' +\n          String(inst_pval) +\n          '</p>';\n      } else {\n        if (inst_cat_title.indexOf('cat-') === -1) {\n          inst_full_cat = inst_cat_title + ': ' + inst_category;\n        } else {\n          inst_full_cat = inst_category;\n        }\n      }\n\n      inst_node['cat-' + String(cat_type_num)] = inst_full_cat;\n      inst_node['cat_' + String(cat_type_num) + '_index'] = inst_index;\n\n      cat_type_num = cat_type_num + 1;\n    });\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/update/modify_row_node_cats.js","module.exports = function remove_node_cats(inst_node) {\n  var all_props = Object.keys(inst_node || {});\n\n  all_props.forEach(function (inst_prop) {\n    if (inst_prop.indexOf('cat-') > -1) {\n      delete inst_node[inst_prop];\n    }\n\n    if (inst_prop.indexOf('cat_') > -1) {\n      delete inst_node[inst_prop];\n    }\n  });\n};\n\n\n\n// WEBPACK FOOTER //\n// src/update/remove_node_cats.js","var reset_size_after_update = require('../reset_size/reset_size_after_update');\nvar make_col_label_container = require('../labels/make_col_label_container');\nvar show_visible_area = require('../zoom/show_visible_area');\nvar resize_containers = require('../reset_size/resize_containers');\n\nmodule.exports = function ds_enter_exit_update(cgm) {\n  // console.log('======== ds_enter_exit_update ===============');\n\n  // remove row labels, remove non-downsampled rows, and add downsampled rows\n  d3.selectAll(cgm.params.root + ' .row_cat_group').remove();\n  d3.selectAll(cgm.params.root + ' .row_label_group').remove();\n  d3.selectAll(cgm.params.root + ' .row').remove();\n\n  // no need to re-calculate the downsampled layers\n  // calc_downsampled_levels(params);\n  var zooming_stopped = true;\n  var zooming_out = true;\n  var make_all_rows = true;\n\n  // show_visible_area is also run with two_translate_zoom, but at that point\n  // the parameters were not updated and two_translate_zoom if only run\n  // if needed to reset zoom\n  show_visible_area(cgm, zooming_stopped, zooming_out, make_all_rows);\n\n  make_col_label_container(cgm);\n\n  var col_nodes = cgm.params.network_data.col_nodes;\n\n  // remove column labels\n  d3.selectAll(cgm.params.root + ' .col_label_group')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .style('opacity', 0)\n    .remove();\n\n  d3.selectAll(cgm.params.root + ' .col_label_text')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .style('opacity', 0)\n    .remove();\n\n  d3.selectAll(cgm.params.root + ' .col_cat_group')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .style('opacity', 0)\n    .remove();\n\n  d3.selectAll(cgm.params.root + ' .col_dendro_group')\n    .data(col_nodes, function (d) {\n      return d.name;\n    })\n    .exit()\n    .style('opacity', 0)\n    .remove();\n\n  // necessary for repositioning clust, col and col-cat containers\n  resize_containers(cgm.params);\n\n  // seeing if this fixes resizing issue\n  var delays = {};\n  delays.enter = 0;\n  delays.update = 0;\n  delays.run_transition = false;\n  var duration = 0;\n  reset_size_after_update(cgm, duration, delays);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/enter/ds_enter_exit_update.js","var sim_click = require('./sim_click');\nvar $ = require('jquery');\n\nmodule.exports = function quick_cluster() {\n  /* eslint-disable */\n\n  function run(params) {\n    var x_trans = Number(\n      d3\n        .select(params.root + ' .expand_button')\n        .attr('x')\n        .replace('px', '')\n    );\n    var y_trans = Number(\n      d3\n        .select(params.root + ' .expand_button')\n        .attr('y')\n        .replace('px', '')\n    );\n\n    var wait_click = 0;\n    var wait_real_click = 400;\n    setTimeout(sim_click, wait_click, params, 'single', x_trans, y_trans);\n    setTimeout(click_menu_button, wait_real_click, params);\n\n    setTimeout(reset_cluster_order, 1500, params);\n  }\n\n  function get_duration() {\n    return 3500;\n  }\n\n  function click_menu_button(params) {\n    $(params.root + ' .expand_button').d3Click();\n  }\n\n  function reset_cluster_order(params) {\n    click_reorder_button(params, 'row', 'clust');\n    click_reorder_button(params, 'col', 'clust');\n  }\n\n  function click_reorder_button(params, inst_rc, inst_order) {\n    var inst_button = d3\n      .selectAll('.toggle_' + inst_rc + '_order .btn')\n      .filter(function () {\n        return this.__data__ == inst_order;\n      })[0];\n\n    $(inst_button).click();\n  }\n\n  // allows doubleclicking on d3 element\n  $.fn.d3Click = function () {\n    this.each(function (i, e) {\n      var evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent(\n        'click',\n        true,\n        true,\n        window,\n        0,\n        0,\n        0,\n        0,\n        0,\n        false,\n        false,\n        false,\n        false,\n        0,\n        null\n      );\n      e.dispatchEvent(evt);\n    });\n  };\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/quick_cluster.js","var demo_text = require('./demo_text');\nvar highlight_sidebar_element = require('./highlight_sidebar_element');\nvar change_groups = require('../dendrogram/change_groups');\nvar $ = require('jquery');\n\nmodule.exports = function play_groups() {\n  /* eslint-disable */\n\n  function run(params) {\n    var text =\n      'Identify row and column groups\\nof varying sizes using ' +\n      ' the\\nsliders and dendrogram';\n    demo_text(params, text, 10000);\n\n    setTimeout(highlight_sidebar_element, 3000, params, 'slider_col', 7000);\n\n    setTimeout(change_group_slider, 4000, params, 'row', 3);\n    setTimeout(change_group_slider, 5000, params, 'row', 4);\n    setTimeout(change_group_slider, 6000, params, 'row', 5);\n    setTimeout(change_group_slider, 7000, params, 'row', 6);\n    setTimeout(change_group_slider, 8000, params, 'row', 7);\n    setTimeout(change_group_slider, 9000, params, 'row', 5);\n  }\n\n  function get_duration() {\n    return 11000;\n  }\n\n  function change_group_slider(params, inst_rc, inst_value) {\n    $(cgm.params.root + ' .slider_col').slider('value', inst_value / 10);\n    change_groups(cgm, inst_rc, inst_value);\n  }\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_groups.js","var demo_text = require('./demo_text');\nvar sim_click = require('./sim_click');\nvar $ = require('jquery');\n\nmodule.exports = function play_category() {\n  /* eslint-disable */\n\n  function run(params) {\n    var text =\n      'Row and column categories\\ncan be use to reorder\\nby double-clicking';\n    demo_text(params, text, 7000);\n\n    var inst_element = d3\n      .selectAll(params.root + ' .col_cat_super')\n      .filter(function () {\n        return this.__data__ === 'cat-1';\n      })[0];\n\n    var tmp_pos = d3.select('.col_cat_super').attr('transform');\n    var x_trans =\n      Number(tmp_pos.split('(')[1].split(',')[0].replace(')', '')) + 20;\n    var y_trans = Number(tmp_pos.split(',')[1].replace(')', ''));\n\n    var wait_click = 4000;\n    setTimeout(sim_click, wait_click, params, 'double', x_trans, y_trans);\n\n    var wait_reorder = wait_click + 300;\n    setTimeout(fire_double_click_row, wait_reorder, params, inst_element);\n  }\n\n  function get_duration() {\n    return 8000;\n  }\n\n  function fire_double_click_row(params, inst_element) {\n    $(inst_element).d3DblClick();\n  }\n\n  // allows doubleclicking on d3 element\n  $.fn.d3DblClick = function () {\n    this.each(function (i, e) {\n      var evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent(\n        'dblclick',\n        true,\n        true,\n        window,\n        0,\n        0,\n        0,\n        0,\n        0,\n        false,\n        false,\n        false,\n        false,\n        0,\n        null\n      );\n      e.dispatchEvent(evt);\n    });\n  };\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_categories.js","var demo_text = require('./demo_text');\nvar toggle_play_button = require('./toggle_play_button');\n\nmodule.exports = function play_conclusion() {\n  function run(params) {\n    var text_1 =\n      'Clustergrammer is built with gene\\nexpression data in mind' +\n      \" and interfaces\\nwith several Ma'ayan lab web tools\";\n    var text_2 =\n      'The example data being visualized is\\ngene expression data' +\n      ' obtained from the\\nCancer Cell Line Encyclopedia';\n    var text_3 = 'For more information please view\\nthe help documentation';\n\n    setTimeout(demo_text, 0, params, text_1, 4500);\n    setTimeout(demo_text, 4500, params, text_2, 4500);\n    setTimeout(demo_text, 9000, params, text_3, 4500);\n\n    setTimeout(reset_demo, 14000, params);\n  }\n\n  function reset_demo(params) {\n    // prevent more than one demo from running at once\n    d3.select(params.root + ' .play_button').classed('running_demo', false);\n\n    toggle_play_button(params, true);\n  }\n\n  function get_duration() {\n    return 12000;\n  }\n\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_conclusion.js","var $ = require('jquery');\n\nmodule.exports = function toggle_play_button(params, show) {\n  if (show === false) {\n    d3.select(params.root + ' .play_button')\n      .transition()\n      .duration(500)\n      .style('opacity', 0);\n  } else {\n    d3.select(params.root + ' .play_button')\n      .transition()\n      .duration(500)\n      .style('opacity', 1);\n\n    $.unblockUI();\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/toggle_play_button.js","var demo_text = require('./demo_text');\nvar sim_click = require('./sim_click');\nvar $ = require('jquery');\n\nmodule.exports = function play_menu_button() {\n  /* eslint-disable */\n\n  function run(params) {\n    var text = 'View additional controls\\nby clicking the menu button';\n    demo_text(params, text, 4000);\n\n    // var inst_element = get_row_element(params, 'EGFR');\n\n    // var group_trans = d3.select(inst_element).attr('transform');\n\n    // var container_trans = d3.select(params.root+' .clust_container')\n    //   .attr('transform')\n    //   .split(',')[1].replace(')','');\n\n    // var x_trans = params.viz.norm_labels.width.row * 0.9;\n\n    // var row_trans = group_trans.split(',')[1].replace(')','');\n    // var y_trans = String(Number(row_trans) + Number(container_trans) +\n    //   params.viz.rect_height/2);\n\n    var x_trans = Number(\n      d3\n        .select(params.root + ' .expand_button')\n        .attr('x')\n        .replace('px', '')\n    );\n    var y_trans = Number(\n      d3\n        .select(params.root + ' .expand_button')\n        .attr('y')\n        .replace('px', '')\n    );\n\n    var wait_click = 3000;\n    var wait_real_click = 3400;\n    setTimeout(sim_click, wait_click, params, 'single', x_trans, y_trans);\n    setTimeout(click_menu_button, wait_real_click, params);\n  }\n\n  function get_duration() {\n    return 5000;\n  }\n\n  function click_menu_button(params) {\n    $(params.root + ' .expand_button').d3Click();\n  }\n\n  function get_row_element(params, inst_row) {\n    var inst_element = d3\n      .selectAll(params.root + ' .row_label_group')\n      .filter(function () {\n        var inst_data = this.__data__;\n        return inst_data.name == inst_row;\n      })[0][0];\n\n    return inst_element;\n  }\n\n  // allows doubleclicking on d3 element\n  $.fn.d3Click = function () {\n    this.each(function (i, e) {\n      var evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent(\n        'click',\n        true,\n        true,\n        window,\n        0,\n        0,\n        0,\n        0,\n        0,\n        false,\n        false,\n        false,\n        false,\n        0,\n        null\n      );\n      e.dispatchEvent(evt);\n    });\n  };\n\n  // allows doubleclicking on d3 element\n  $.fn.d3DblClick = function () {\n    this.each(function (i, e) {\n      var evt = document.createEvent('MouseEvents');\n      evt.initMouseEvent(\n        'dblclick',\n        true,\n        true,\n        window,\n        0,\n        0,\n        0,\n        0,\n        0,\n        false,\n        false,\n        false,\n        false,\n        0,\n        null\n      );\n      e.dispatchEvent(evt);\n    });\n  };\n  return {\n    run: run,\n    get_duration: get_duration\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/play_menu_button.js","var make_play_button = require('./make_play_button');\nvar make_demo_text_containers = require('./make_demo_text_containers');\n\nmodule.exports = function ini_demo() {\n  var cgm = this;\n  var params = cgm.params;\n\n  make_play_button(cgm);\n\n  var demo_text_size = 30;\n  make_demo_text_containers(params, demo_text_size);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/ini_demo.js","var position_play_button = require('./position_play_button');\n\nmodule.exports = function make_play_button(cgm) {\n  var params = cgm.params;\n\n  if (d3.select(params.root + ' .play_button').empty()) {\n    var play_button = d3\n      .select(params.root + ' .viz_svg')\n      .append('g')\n      .classed('play_button', true)\n      .classed('running_demo', false);\n\n    position_play_button(params);\n\n    play_button\n      .append('circle')\n      .style('r', 45)\n      .style('fill', 'white')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('opacity', 0.5);\n\n    play_button\n      .append('path')\n      .attr('d', function () {\n        var tri_w = 40;\n        var tri_h = 22;\n        var tri_offset = 15;\n\n        return (\n          'M-' +\n          tri_offset +\n          ',-' +\n          tri_h +\n          ' l ' +\n          tri_w +\n          ',' +\n          tri_h +\n          ' l -' +\n          tri_w +\n          ',' +\n          tri_h +\n          ' z '\n        );\n      })\n      .style('fill', 'black')\n      .style('opacity', 0.5);\n\n    // mouseover behavior\n    play_button\n      .on('mouseover', function () {\n        d3.select(this).select('path').style('fill', 'red').style('opacity', 1);\n\n        d3.select(this).select('circle').style('opacity', 1);\n      })\n      .on('mouseout', function () {\n        d3.select(this)\n          .select('path')\n          .style('fill', 'black')\n          .style('opacity', 0.5);\n        d3.select(this).select('circle').style('opacity', 0.5);\n      })\n      .on('click', function () {\n        // running from anonymous function to keep this defined correctly\n        cgm.play_demo();\n      });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/make_play_button.js","module.exports = function make_demo_text_containers(params, demo_text_size) {\n  if (d3.select(params.root + ' .demo_group').empty()) {\n    var clust_transform = d3\n      .select(params.root + ' .clust_container')\n      .attr('transform');\n    var clust_x = Number(clust_transform.split('(')[1].split(',')[0]);\n    var clust_y = Number(clust_transform.split(',')[1].replace(')', ''));\n\n    // demo text container\n    var demo_group = d3\n      .select(params.root + ' .viz_svg')\n      .append('g')\n      .classed('demo_group', true)\n      .attr('transform', function () {\n        var pos_x = clust_x + 20;\n        var pos_y = clust_y + 40;\n        return 'translate(' + pos_x + ',' + pos_y + ')';\n      });\n\n    demo_group.append('rect').classed('rect_1', true);\n\n    demo_group.append('rect').classed('rect_2', true);\n\n    demo_group.append('rect').classed('rect_3', true);\n\n    var shift_height = 1.3 * demo_text_size;\n\n    demo_group\n      .append('text')\n      .attr('id', 'text_1')\n      .attr('font-size', demo_text_size + 'px')\n      .attr('font-weight', 1000)\n      .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif');\n\n    demo_group\n      .append('text')\n      .attr('id', 'text_2')\n      .attr('font-size', demo_text_size + 'px')\n      .attr('font-weight', 1000)\n      .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif')\n      .attr('transform', function () {\n        return 'translate(0,' + String(shift_height) + ')';\n      });\n\n    demo_group\n      .append('text')\n      .attr('id', 'text_3')\n      .attr('font-size', demo_text_size + 'px')\n      .attr('font-weight', 1000)\n      .attr('font-family', '\"Helvetica Neue\", Helvetica, Arial, sans-serif')\n      .attr('transform', function () {\n        return 'translate(0,' + String(2 * shift_height) + ')';\n      });\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/demo/make_demo_text_containers.js","var filter_network_using_new_nodes = require('./filter_network_using_new_nodes');\nvar update_viz_with_network = require('../update/update_viz_with_network');\n\nmodule.exports = function filter_viz_using_nodes(new_nodes) {\n  var new_network_data = filter_network_using_new_nodes(this.config, new_nodes);\n  update_viz_with_network(this, new_network_data);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/network/filter_viz_using_nodes.js","var filter_network_using_new_nodes = require('./filter_network_using_new_nodes');\nvar update_viz_with_network = require('../update/update_viz_with_network');\nvar utils = require('../Utils_clust');\nvar $ = require('jquery');\n\nmodule.exports = function filter_viz_using_names(names, external_cgm = false) {\n  // names is an object with row and column names that will be used to filter\n  // the matrix\n\n  var cgm;\n  if (external_cgm === false) {\n    cgm = this;\n  } else {\n    cgm = external_cgm;\n  }\n\n  var params = cgm.params;\n  var new_nodes = {};\n  var found_nodes;\n\n  ['row', 'col'].forEach(function (inst_rc) {\n    var orig_nodes = params.inst_nodes[inst_rc + '_nodes'];\n\n    if (utils.has(names, inst_rc)) {\n      if (names[inst_rc].length > 0) {\n        var inst_names = names[inst_rc];\n        found_nodes = $.grep(orig_nodes, function (d) {\n          return $.inArray(d.name, inst_names) > -1;\n        });\n      } else {\n        found_nodes = orig_nodes;\n      }\n    } else {\n      found_nodes = orig_nodes;\n    }\n\n    new_nodes[inst_rc + '_nodes'] = found_nodes;\n  });\n\n  // keep backup of the nodes for resetting filtering\n  var inst_row_nodes = cgm.params.network_data.row_nodes;\n  var inst_col_nodes = cgm.params.network_data.col_nodes;\n\n  var new_network_data = filter_network_using_new_nodes(cgm.config, new_nodes);\n\n  // takes entire cgm object\n  // last argument tells it to not preserve categoty colors\n  update_viz_with_network(cgm, new_network_data);\n\n  // only keep backup if previous number of nodes were larger than current number\n  // of nodes\n  if (inst_row_nodes.length > cgm.params.inst_nodes.row_nodes.length) {\n    cgm.params.inst_nodes.row_nodes = inst_row_nodes;\n  }\n\n  if (inst_col_nodes.length > cgm.params.inst_nodes.col_nodes.length) {\n    cgm.params.inst_nodes.col_nodes = inst_col_nodes;\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/network/filter_viz_using_names.js","var make_row_cat = require('../categories/make_row_cat');\nvar calc_viz_params = require('../params/calc_viz_params');\nvar resize_viz = require('../reset_size/resize_viz');\nvar modify_row_node_cats = require('./modify_row_node_cats');\n\nmodule.exports = function update_cats(cgm, cat_data) {\n  // Only accessible from the cgm API, cat_data is provided by externally\n  ///////////////////////////////////////////////////////////////////////////\n\n  if (cgm.params.cat_update_callback != null) {\n    cgm.params.cat_update_callback(this);\n  }\n\n  // do not change column category info\n  var col_cat_colors = cgm.params.viz.cat_colors.col;\n\n  modify_row_node_cats(cat_data, cgm.params.network_data.row_nodes, true);\n  // modify the current inst copy of nodes\n  modify_row_node_cats(cat_data, cgm.params.inst_nodes.row_nodes, true);\n\n  // recalculate the visualization parameters using the updated network_data\n  cgm.params = calc_viz_params(cgm.params, false);\n\n  make_row_cat(cgm, true);\n  resize_viz(cgm);\n\n  cgm.params.new_row_cats = cat_data;\n\n  cgm.params.viz.cat_colors.col = col_cat_colors;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/update/update_cats.js","var make_row_cat = require('../categories/make_row_cat');\nvar calc_viz_params = require('../params/calc_viz_params');\nvar resize_viz = require('../reset_size/resize_viz');\nvar modify_row_node_cats = require('./modify_row_node_cats');\nvar generate_cat_data = require('./generate_cat_data');\n\nmodule.exports = function reset_cats(run_resize_viz = true) {\n  // console.log('RESET CATS')\n\n  var cgm = this;\n\n  var cat_data = generate_cat_data(cgm);\n\n  // do not change column category info\n  var col_cat_colors = cgm.params.viz.cat_colors.col;\n\n  modify_row_node_cats(cat_data, cgm.params.network_data.row_nodes);\n  // modify the current inst copy of nodes\n  modify_row_node_cats(cat_data, cgm.params.inst_nodes.row_nodes);\n\n  cgm.params.new_row_cats = cat_data;\n  cgm.params.viz.cat_colors.col = col_cat_colors;\n\n  if (run_resize_viz) {\n    // resize visualizatino\n    ////////////////////////////\n    // recalculate the visualization parameters using the updated network_data\n    var predefine_cat_colors = true;\n    cgm.params = calc_viz_params(cgm.params, predefine_cat_colors);\n\n    make_row_cat(cgm, true);\n    resize_viz(cgm);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/update/reset_cats.js","var each = require('underscore/cjs/each');\n\nmodule.exports = function generate_cat_data(cgm) {\n  // only row category resetting is supported currently\n\n  // get row_nodes from config, since this is has the original network\n  var row_nodes = cgm.config.network_data.row_nodes || [];\n  var title_sep = ': ';\n\n  // contains all the category information stored as an array of\n  // cat_type\n  var cat_data = [];\n  var cat_type;\n  var cat_info;\n  var found_cat_title;\n  var found_cat_name;\n  var cat_name;\n\n  // console.log('generate_cat_data')\n  // console.log(cgm.params.viz.cat_names.row)\n\n  // get current list of cateories\n  var check_node = row_nodes[0];\n  var node_keys = Object.keys(check_node || {});\n  var current_cats = {};\n  var tmp_cat;\n  var tmp_title;\n  var cat_index;\n  node_keys.forEach(function (inst_prop) {\n    if (inst_prop.indexOf('cat-') >= 0) {\n      // generate titles from cat info\n      tmp_cat = check_node[inst_prop];\n\n      cat_index = parseInt(inst_prop.split('cat-')[1], 10);\n\n      // use given title\n      if (tmp_cat.indexOf(title_sep) >= 0) {\n        tmp_title = tmp_cat.split(title_sep)[0];\n      } else {\n        tmp_title = inst_prop;\n      }\n\n      // current_cats.push(tmp_title);\n\n      current_cats[cat_index] = tmp_title;\n    }\n  });\n\n  // console.log('current_cats')\n  // console.log(current_cats)\n\n  // initialize cat_data with categories in the correct order\n  var all_index = Object.keys(current_cats || {}).sort();\n\n  var inst_data;\n  all_index.forEach(function (inst_index) {\n    inst_data = {};\n    inst_data.cat_title = current_cats[inst_index];\n    inst_data.cats = [];\n\n    cat_data.push(inst_data);\n  });\n\n  row_nodes.each(function (inst_node) {\n    var all_props = Object.keys(inst_node || {});\n\n    all_props.forEach(function (inst_prop) {\n      if (inst_prop.indexOf('cat-') > -1) {\n        cat_name = inst_node[inst_prop];\n\n        cat_index = parseInt(inst_prop.split('cat-')[1], 10);\n\n        // default title and name\n        var cat_title = inst_prop;\n        cat_name = inst_node[inst_prop];\n        var cat_string = inst_node[inst_prop];\n        var cat_row_name = inst_node.name;\n\n        // console.log('cat_string: '+String(cat_string))\n        // found actual title\n        if (cat_string.indexOf(title_sep) > -1) {\n          cat_title = cat_string.split(title_sep)[0];\n          cat_name = cat_string.split(title_sep)[1];\n        } else {\n          // cat_title = 'Category-'+String(parseInt(inst_prop.split('-')[1]) + 1)\n          cat_title = inst_prop;\n          cat_name = cat_string;\n        }\n\n        // console.log('cat_index -> ' + String(cat_index))\n        // console.log('cat_name '+cat_name)\n        // console.log('cat_title ' + cat_title)\n        // console.log('--------')\n\n        // cat_data is empty\n        if (cat_data.length === 0) {\n          add_new_cat_type(cat_title, cat_name, cat_row_name);\n\n          // cat_data is not empty\n        } else {\n          // look for cat_title in cat_data\n          found_cat_title = false;\n          cat_data.forEach(function (inst_cat_type) {\n            // console.log('inst_cat_data title ' + inst_cat_type.cat_title)\n\n            // check each cat_type object for a matching title\n            if (cat_title === inst_cat_type.cat_title) {\n              found_cat_title = true;\n\n              // check if cat_name is in cats\n              found_cat_name = false;\n              each(inst_cat_type.cats, function (inst_cat_obj) {\n                // found category name, add cat_row_name to members\n                if (cat_name === inst_cat_obj.cat_name) {\n                  found_cat_name = true;\n\n                  // add cat_row_name to members\n                  inst_cat_obj.members.push(cat_row_name);\n                }\n              });\n\n              // did not find cat name in cat_type - add cat_info for new\n              // category\n              if (found_cat_name === false) {\n                cat_info = {};\n                cat_info.cat_name = cat_name;\n                cat_info.members = [];\n                cat_info.members.push(cat_row_name);\n                inst_cat_type.cats.push(cat_info);\n              }\n            }\n          });\n\n          // did not find category type, initialize category type object\n          if (found_cat_title === false) {\n            // console.log('did not find cat_title: ' + String(cat_title))\n            // add_new_cat_type(cat_title, cat_name, cat_row_name);\n          }\n        }\n      }\n    });\n  });\n\n  function add_new_cat_type(cat_title, cat_name, cat_row_name) {\n    // initialize cat_type object to push to cat_data\n    cat_type = {};\n    cat_type.cat_title = cat_title;\n    cat_type.cats = [];\n\n    // initialize cat_info (e.g. 'true' category has members [...])\n    cat_info = {};\n    cat_info.cat_name = cat_name;\n    cat_info.members = [];\n    cat_info.members.push(cat_row_name);\n\n    cat_type.cats.push(cat_info);\n\n    cat_data.push(cat_type);\n  }\n\n  // console.log('RETURNING CAT DATA')\n  // console.log(cat_data)\n\n  return cat_data;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/update/generate_cat_data.js","var update_viz_with_view = require('../network/update_viz_with_view');\nvar reset_other_filter_sliders = require('../filters/reset_other_filter_sliders');\n\nmodule.exports = function update_view(cgm, filter_type, inst_state) {\n  // add something to control slider position\n  /////////////////////////////////////////////\n\n  var requested_view = {};\n  requested_view[filter_type] = inst_state;\n  update_viz_with_view(cgm, requested_view);\n\n  reset_other_filter_sliders(cgm, filter_type, inst_state);\n};\n\n\n\n// WEBPACK FOOTER //\n// src/update/update_view.js","var make_filter_title = require('./make_filter_title');\n\nmodule.exports = function reset_other_filter_sliders(\n  cgm,\n  filter_type,\n  inst_state\n) {\n  var params = cgm.params;\n  var inst_rc;\n  var reset_rc;\n\n  d3.select(params.root + ' .slider_' + filter_type).attr(\n    'current_state',\n    inst_state\n  );\n\n  Object.keys(params.viz.possible_filters || {}).forEach(function (\n    reset_filter\n  ) {\n    if (filter_type.indexOf('row') > -1) {\n      inst_rc = 'row';\n    } else if (filter_type.indexOf('col') > -1) {\n      inst_rc = 'col';\n    } else {\n      inst_rc = 'neither';\n    }\n\n    if (reset_filter.indexOf('row') > -1) {\n      reset_rc = 'row';\n    } else if (reset_filter.indexOf('col') > -1) {\n      reset_rc = 'col';\n    } else {\n      reset_rc = 'neither';\n    }\n\n    if (filter_type != reset_filter && inst_rc != 'neither') {\n      if (inst_rc == reset_rc) {\n        var tmp_title = make_filter_title(params, reset_filter);\n\n        cgm.slider_functions[reset_filter].value(0);\n\n        d3.select(params.root + ' .title_' + reset_filter).text(\n          tmp_title.text + tmp_title.state\n        );\n\n        d3.select(params.root + ' .slider_' + reset_filter).attr(\n          'current_state',\n          tmp_title.state\n        );\n      }\n    }\n  });\n\n  var filter_title = make_filter_title(params, filter_type);\n\n  d3.select(params.root + ' .title_' + filter_type).text(\n    filter_title.text + inst_state + filter_title.suffix\n  );\n};\n\n\n\n// WEBPACK FOOTER //\n// src/filters/reset_other_filter_sliders.js","var get_filter_default_state = require('./get_filter_default_state');\n\nmodule.exports = function make_filter_title(params, filter_type) {\n  var filter_title = {};\n  var title = {};\n  var type = {};\n\n  filter_title.state = get_filter_default_state(\n    params.viz.filter_data,\n    filter_type\n  );\n\n  type.top = filter_type.split('_')[0];\n  type.node = filter_type.split('_')[1];\n  type.measure = filter_type.split('_')[2];\n\n  if (type.node === 'row') {\n    title.node = 'rows';\n  } else {\n    title.node = 'columns';\n  }\n\n  if (type.top === 'N') {\n    // filter_title.suffix = ' '+title.node;\n    filter_title.suffix = '';\n  }\n\n  if (type.top === 'pct') {\n    filter_title.suffix = '%';\n  }\n\n  if (type.measure == 'sum') {\n    title.measure = 'sum';\n  } else if (type.measure == 'var') {\n    title.measure = 'variance';\n  }\n\n  if (type.measure === 'sum') {\n    filter_title.text = 'Top ' + title.node + ' ' + title.measure + ': ';\n  }\n\n  if (type.measure === 'var') {\n    filter_title.text = 'Top ' + title.node + ' ' + title.measure + ': ';\n  }\n\n  // Enrichr specific rules\n  if (\n    Object.keys(params.viz.possible_filters || {}).indexOf('enr_score_type') >\n    -1\n  ) {\n    if (type.node === 'col') {\n      filter_title.text = 'Top Enriched Terms: ';\n      filter_title.suffix = '';\n    }\n  }\n\n  return filter_title;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/filters/make_filter_title.js","var file_saver = require('../screenshot/file_saver');\nvar make_matrix_string = require('./make_matrix_string');\n\nmodule.exports = function save_matrix() {\n  var saveAs = file_saver();\n\n  var params = this.params;\n\n  var matrix_string = make_matrix_string(params);\n\n  var blob = new Blob([matrix_string], { type: 'text/plain;charset=utf-8' });\n  saveAs(blob, 'clustergrammer.txt');\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/save_matrix.js","module.exports = function file_saver() {\n  /* eslint-disable */\n  /* FileSaver.js\n   * A saveAs() FileSaver implementation.\n   * 2013-01-23\n   *\n   * By Eli Grey, http://eligrey.com\n   * License: X11/MIT\n   *   See LICENSE.md\n   */\n\n  /*global self */\n  /*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,\n  plusplus: true */\n\n  /*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\n  var saveAs =\n    saveAs ||\n    (navigator.msSaveBlob && navigator.msSaveBlob.bind(navigator)) ||\n    (function (view) {\n      'use strict';\n      var doc = view.document,\n        // only get URL when necessary in case BlobBuilder.js hasn't overridden it yet\n        get_URL = function () {\n          return view.URL || view.webkitURL || view;\n        },\n        URL = view.URL || view.webkitURL || view,\n        save_link = doc.createElementNS('http://www.w3.org/1999/xhtml', 'a'),\n        can_use_save_link = 'download' in save_link,\n        click = function (node) {\n          var event = doc.createEvent('MouseEvents');\n          event.initMouseEvent(\n            'click',\n            true,\n            false,\n            view,\n            0,\n            0,\n            0,\n            0,\n            0,\n            false,\n            false,\n            false,\n            false,\n            0,\n            null\n          );\n          node.dispatchEvent(event);\n        },\n        webkit_req_fs = view.webkitRequestFileSystem,\n        req_fs =\n          view.requestFileSystem || webkit_req_fs || view.mozRequestFileSystem,\n        throw_outside = function (ex) {\n          (view.setImmediate || view.setTimeout)(function () {\n            throw ex;\n          }, 0);\n        },\n        force_saveable_type = 'application/octet-stream',\n        fs_min_size = 0,\n        deletion_queue = [],\n        process_deletion_queue = function () {\n          var i = deletion_queue.length;\n          while (i--) {\n            var file = deletion_queue[i];\n            if (typeof file === 'string') {\n              // file is an object URL\n              URL.revokeObjectURL(file);\n            } else {\n              // file is a File\n              file.remove();\n            }\n          }\n          deletion_queue.length = 0; // clear queue\n        },\n        dispatch = function (filesaver, event_types, event) {\n          event_types = [].concat(event_types);\n          var i = event_types.length;\n          while (i--) {\n            var listener = filesaver['on' + event_types[i]];\n            if (typeof listener === 'function') {\n              try {\n                listener.call(filesaver, event || filesaver);\n              } catch (ex) {\n                throw_outside(ex);\n              }\n            }\n          }\n        },\n        FileSaver = function (blob, name) {\n          // First try a.download, then web filesystem, then object URLs\n          var filesaver = this,\n            type = blob.type,\n            blob_changed = false,\n            object_url,\n            target_view,\n            get_object_url = function () {\n              var object_url = get_URL().createObjectURL(blob);\n              deletion_queue.push(object_url);\n              return object_url;\n            },\n            dispatch_all = function () {\n              dispatch(\n                filesaver,\n                'writestart progress write writeend'.split(' ')\n              );\n            },\n            // on any filesys errors revert to saving with object URLs\n            fs_error = function () {\n              // don't create more object URLs than needed\n              if (blob_changed || !object_url) {\n                object_url = get_object_url(blob);\n              }\n              if (target_view) {\n                target_view.location.href = object_url;\n              }\n              filesaver.readyState = filesaver.DONE;\n              dispatch_all();\n            },\n            abortable = function (func) {\n              return function () {\n                if (filesaver.readyState !== filesaver.DONE) {\n                  return func.apply(this, arguments);\n                }\n              };\n            },\n            create_if_not_found = { create: true, exclusive: false },\n            slice;\n          filesaver.readyState = filesaver.INIT;\n          if (!name) {\n            name = 'download';\n          }\n          if (can_use_save_link) {\n            object_url = get_object_url(blob);\n            save_link.href = object_url;\n            save_link.download = name;\n            click(save_link);\n            filesaver.readyState = filesaver.DONE;\n            dispatch_all();\n            return;\n          }\n          // Object and web filesystem URLs have a problem saving in Google Chrome when\n          // viewed in a tab, so I force save with application/octet-stream\n          // http://code.google.com/p/chromium/issues/detail?id=91158\n          if (view.chrome && type && type !== force_saveable_type) {\n            slice = blob.slice || blob.webkitSlice;\n            blob = slice.call(blob, 0, blob.size, force_saveable_type);\n            blob_changed = true;\n          }\n          // Since I can't be sure that the guessed media type will trigger a download\n          // in WebKit, I append .download to the filename.\n          // https://bugs.webkit.org/show_bug.cgi?id=65440\n          if (webkit_req_fs && name !== 'download') {\n            name += '.download';\n          }\n          if (type === force_saveable_type || webkit_req_fs) {\n            target_view = view;\n          } else {\n            target_view = view.open();\n          }\n          if (!req_fs) {\n            fs_error();\n            return;\n          }\n          fs_min_size += blob.size;\n          req_fs(\n            view.TEMPORARY,\n            fs_min_size,\n            abortable(function (fs) {\n              fs.root.getDirectory(\n                'saved',\n                create_if_not_found,\n                abortable(function (dir) {\n                  var save = function () {\n                    dir.getFile(\n                      name,\n                      create_if_not_found,\n                      abortable(function (file) {\n                        file.createWriter(\n                          abortable(function (writer) {\n                            writer.onwriteend = function (event) {\n                              target_view.location.href = file.toURL();\n                              deletion_queue.push(file);\n                              filesaver.readyState = filesaver.DONE;\n                              dispatch(filesaver, 'writeend', event);\n                            };\n                            writer.onerror = function () {\n                              var error = writer.error;\n                              if (error.code !== error.ABORT_ERR) {\n                                fs_error();\n                              }\n                            };\n                            'writestart progress write abort'\n                              .split(' ')\n                              .forEach(function (event) {\n                                writer['on' + event] = filesaver['on' + event];\n                              });\n                            writer.write(blob);\n                            filesaver.abort = function () {\n                              writer.abort();\n                              filesaver.readyState = filesaver.DONE;\n                            };\n                            filesaver.readyState = filesaver.WRITING;\n                          }),\n                          fs_error\n                        );\n                      }),\n                      fs_error\n                    );\n                  };\n                  dir.getFile(\n                    name,\n                    { create: false },\n                    abortable(function (file) {\n                      // delete file if it already exists\n                      file.remove();\n                      save();\n                    }),\n                    abortable(function (ex) {\n                      if (ex.code === ex.NOT_FOUND_ERR) {\n                        save();\n                      } else {\n                        fs_error();\n                      }\n                    })\n                  );\n                }),\n                fs_error\n              );\n            }),\n            fs_error\n          );\n        },\n        FS_proto = FileSaver.prototype,\n        saveAs = function (blob, name) {\n          return new FileSaver(blob, name);\n        };\n      FS_proto.abort = function () {\n        var filesaver = this;\n        filesaver.readyState = filesaver.DONE;\n        dispatch(filesaver, 'abort');\n      };\n      FS_proto.readyState = FS_proto.INIT = 0;\n      FS_proto.WRITING = 1;\n      FS_proto.DONE = 2;\n\n      FS_proto.error =\n        FS_proto.onwritestart =\n        FS_proto.onprogress =\n        FS_proto.onwrite =\n        FS_proto.onabort =\n        FS_proto.onerror =\n        FS_proto.onwriteend =\n          null;\n\n      view.addEventListener('unload', process_deletion_queue, false);\n      return saveAs;\n    })(self);\n\n  return saveAs;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/screenshot/file_saver.js","var make_full_name = require('./make_full_name');\nvar each = require('underscore/cjs/each');\n\nmodule.exports = function make_matrix_string(params) {\n  var inst_matrix = params.matrix;\n\n  // get order indexes\n  var order_indexes = {};\n  var inst_name;\n  ['row', 'col'].forEach(function (tmp_rc) {\n    var inst_rc;\n    // row/col names are reversed in saved orders\n    if (tmp_rc === 'row') {\n      inst_rc = 'col';\n    } else {\n      inst_rc = 'row';\n    }\n\n    // use tmp_rc\n    inst_name = params.inst_order[tmp_rc];\n\n    // use tmp_rc\n    order_indexes[inst_rc] = inst_matrix.orders[inst_name + '_' + tmp_rc];\n  });\n\n  var matrix_string = '\\t';\n  var row_nodes = params.network_data.row_nodes;\n  var col_nodes = params.network_data.col_nodes;\n\n  // alternate column entry\n  for (var c_i = 0; c_i < order_indexes.col.length; c_i++) {\n    var inst_index = order_indexes.col[c_i];\n\n    var inst_col = col_nodes[inst_index];\n    var col_name = make_full_name(params, inst_col, 'col');\n\n    if (c_i < order_indexes.col.length - 1) {\n      matrix_string = matrix_string + col_name + '\\t';\n    } else {\n      matrix_string = matrix_string + col_name;\n    }\n  }\n\n  var row_data;\n  matrix_string = matrix_string + '\\n';\n\n  each(order_indexes.row, function (inst_index) {\n    // row names\n    row_data = inst_matrix.matrix[inst_index].row_data;\n\n    // var row_name = inst_matrix.matrix[inst_index].name;\n    var inst_row = row_nodes[inst_index];\n\n    // var row_name = inst_row.name;\n    var row_name = make_full_name(params, inst_row, 'row');\n\n    matrix_string = matrix_string + row_name + '\\t';\n\n    // alternate data entry\n    for (var r_i = 0; r_i < order_indexes.col.length; r_i++) {\n      // get the order\n      var col_index = order_indexes.col[r_i];\n\n      if (r_i < order_indexes.col.length - 1) {\n        matrix_string =\n          matrix_string + String(row_data[col_index].value) + '\\t';\n      } else {\n        matrix_string = matrix_string + String(row_data[col_index].value);\n      }\n    }\n\n    matrix_string = matrix_string + '\\n';\n  });\n\n  return matrix_string;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/make_matrix_string.js","module.exports = function make_full_name(params, inst_node, inst_rc) {\n  var cat_name;\n  var inst_name = inst_node.name;\n  var num_cats = params.viz.all_cats[inst_rc].length;\n\n  // make tuple if necessary\n  if (num_cats > 0) {\n    inst_name = \"('\" + inst_name + \"'\";\n\n    for (var cat_index = 0; cat_index < num_cats; cat_index++) {\n      cat_name = 'cat-' + String(cat_index);\n\n      inst_name = inst_name + \", '\" + String(inst_node[cat_name]) + \"'\";\n    }\n\n    inst_name = inst_name + ')';\n  } else {\n    // always make names strings\n    inst_name = String(inst_name);\n  }\n\n  return inst_name;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/make_full_name.js","var deactivate_cropping = require('./deactivate_cropping');\nvar each = require('underscore/cjs/each');\n\nmodule.exports = function brush_crop_matrix() {\n  // get rows/cols from brush-extent\n  // works for differnt brushing directions (e.g. start end sites)\n\n  var cgm = this;\n  var params = cgm.params;\n\n  var clust_width = params.viz.clust.dim.width;\n  var clust_height = params.viz.clust.dim.height;\n\n  var x = d3.scale.linear().domain([0, clust_width]).range([0, clust_width]);\n  var y = d3.scale.linear().domain([0, clust_height]).range([0, clust_height]);\n\n  // make brush group\n  d3.select(params.root + ' .clust_container')\n    .append('g')\n    .classed('brush_group', true);\n\n  cgm.params.is_cropping = true;\n\n  var brush = d3.svg.brush().x(x).y(y).on('brushend', brushend);\n\n  d3.select(params.root + ' .brush_group').call(brush);\n\n  function brushend() {\n    // do not display dendro crop buttons when cropping with brushing\n    d3.select(cgm.params.root + ' .col_dendro_icons_container').style(\n      'display',\n      'none'\n    );\n    d3.select(cgm.params.root + ' .row_dendro_icons_container').style(\n      'display',\n      'none'\n    );\n\n    var brushing_extent = brush.extent();\n    var brush_start = brushing_extent[0];\n    var brush_end = brushing_extent[1];\n\n    var x_start = brush_start[0];\n    var x_end = brush_end[0];\n\n    var y_start = brush_start[1];\n    var y_end = brush_end[1];\n\n    if (x_start != x_end && y_start != y_end) {\n      setTimeout(deactivate_cropping, 500, cgm);\n\n      // find cropped nodes\n      var found_nodes = find_cropped_nodes(\n        x_start,\n        x_end,\n        y_start,\n        y_end,\n        brush_start,\n        brush_end\n      );\n\n      cgm.filter_viz_using_names(found_nodes);\n\n      d3.select(params.root + ' .crop_button')\n        .style('color', '#337ab7')\n        .classed('fa-crop', false)\n        .classed('fa-undo', true);\n    }\n  }\n\n  function find_cropped_nodes(\n    x_start,\n    x_end,\n    y_start,\n    y_end,\n    brush_start,\n    brush_end\n  ) {\n    // reverse if necessary (depending on how brushing was done)\n    if (x_start > x_end) {\n      x_start = brush_end[0];\n      x_end = brush_start[0];\n    }\n\n    if (y_start > y_end) {\n      y_start = brush_end[1];\n      y_end = brush_start[1];\n    }\n\n    // add room to brushing\n    y_start = y_start - params.viz.rect_height;\n    x_start = x_start - params.viz.rect_width;\n\n    var found_nodes = {};\n    found_nodes.row = [];\n    found_nodes.col = [];\n\n    // d3.selectAll(params.root+' .row_label_group')\n    //   .each(function(inst_row){\n\n    //     // there is already bound data on the rows\n    //     var inst_trans = d3.select(this)\n    //       .attr('transform');\n\n    //     var y_trans = Number(inst_trans.split(',')[1].split(')')[0]);\n\n    //     if (y_trans > y_start && y_trans < y_end){\n\n    //       found_nodes.row.push(inst_row.name);\n\n    //     }\n\n    //   });\n\n    each(params.matrix.matrix, function (row_data) {\n      var y_trans = params.viz.y_scale(row_data.row_index);\n\n      if (y_trans > y_start && y_trans < y_end) {\n        found_nodes.row.push(row_data.name);\n      }\n    });\n\n    d3.selectAll(params.root + ' .col_label_text').each(function (inst_col) {\n      // there is already bound data on the cols\n      var inst_trans = d3.select(this).attr('transform');\n\n      var x_trans = Number(inst_trans.split(',')[0].split('(')[1]);\n\n      if (x_trans > x_start && x_trans < x_end) {\n        found_nodes.col.push(inst_col.name);\n      }\n    });\n\n    return found_nodes;\n  }\n\n  d3.selectAll(params.root + ' .extent')\n    .style('opacity', 0.2)\n    .style('fill', 'black');\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/brush_crop_matrix.js","module.exports = function deactivate_cropping(cgm) {\n  d3.select(cgm.params.root + ' .brush_group')\n    .transition()\n    .style('opacity', 0)\n    .remove();\n\n  cgm.params.is_cropping = false;\n};\n\n\n\n// WEBPACK FOOTER //\n// src/matrix/deactivate_cropping.js","module.exports = d3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"d3\"\n// module id = 297\n// module chunks = 0","/*\n    D3.js Slider\n    Inspired by jQuery UI Slider\n    Copyright (c) 2013, Bjorn Sandvik - http://blog.thematicmapping.org\n    BSD license: http://opensource.org/licenses/BSD-3-Clause\n*/\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['d3'], factory);\n  } else if (typeof exports === 'object') {\n    if (process.browser) {\n      // Browserify. Import css too using cssify.\n      require('./d3.slider.css');\n    }\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(require('d3'));\n  } else {\n    // Browser globals (root is window)\n    root.d3.slider = factory(root.d3);\n  }\n})(this, function (d3) {\n  return function module() {\n    'use strict';\n\n    // Public variables width default settings\n    var min = 0,\n      max = 100,\n      step = 0.01,\n      animate = false,\n      orientation = 'horizontal',\n      axis = false,\n      margin = 50,\n      value,\n      active = 1,\n      snap = false,\n      scale;\n\n    // Private variables\n    var axisScale,\n      dispatch = d3.dispatch('slide', 'slideend'),\n      formatPercent = d3.format('.2%'),\n      tickFormat = d3.format('.0'),\n      handle1,\n      handle2 = null,\n      divRange,\n      sliderLength;\n\n    function slider(selection) {\n      selection.each(function () {\n        // Create scale if not defined by user\n        if (!scale) {\n          scale = d3.scale.linear().domain([min, max]);\n        }\n\n        // Start value\n        value = value || scale.domain()[0];\n\n        // DIV container\n        var div = d3\n          .select(this)\n          .classed('d3-slider d3-slider-' + orientation, true);\n\n        var drag = d3.behavior.drag();\n        drag.on('dragend', function () {\n          dispatch.slideend(d3.event, value);\n        });\n\n        // Slider handle\n        //if range slider, create two\n        // var divRange;\n\n        if (toType(value) == 'array' && value.length == 2) {\n          handle1 = div\n            .append('a')\n            .classed('d3-slider-handle', true)\n            .attr('xlink:href', '#')\n            .attr('id', 'handle-one')\n            .on('click', stopPropagation)\n            .call(drag);\n          handle2 = div\n            .append('a')\n            .classed('d3-slider-handle', true)\n            .attr('id', 'handle-two')\n            .attr('xlink:href', '#')\n            .on('click', stopPropagation)\n            .call(drag);\n        } else {\n          handle1 = div\n            .append('a')\n            .classed('d3-slider-handle', true)\n            .attr('xlink:href', '#')\n            .attr('id', 'handle-one')\n            .on('click', stopPropagation)\n            .call(drag);\n        }\n\n        // Horizontal slider\n        if (orientation === 'horizontal') {\n          div.on('click', onClickHorizontal);\n\n          if (toType(value) == 'array' && value.length == 2) {\n            divRange = d3\n              .select(this)\n              .append('div')\n              .classed('d3-slider-range', true);\n\n            handle1.style('left', formatPercent(scale(value[0])));\n            divRange.style('left', formatPercent(scale(value[0])));\n            drag.on('drag', onDragHorizontal);\n\n            var width = 100 - parseFloat(formatPercent(scale(value[1])));\n            handle2.style('left', formatPercent(scale(value[1])));\n            divRange.style('right', width + '%');\n            drag.on('drag', onDragHorizontal);\n          } else {\n            handle1.style('left', formatPercent(scale(value)));\n            drag.on('drag', onDragHorizontal);\n          }\n\n          sliderLength = parseInt(div.style('width'), 10);\n        } else {\n          // Vertical\n\n          div.on('click', onClickVertical);\n          drag.on('drag', onDragVertical);\n          if (toType(value) == 'array' && value.length == 2) {\n            divRange = d3\n              .select(this)\n              .append('div')\n              .classed('d3-slider-range-vertical', true);\n\n            handle1.style('bottom', formatPercent(scale(value[0])));\n            divRange.style('bottom', formatPercent(scale(value[0])));\n            drag.on('drag', onDragVertical);\n\n            var top = 100 - parseFloat(formatPercent(scale(value[1])));\n            handle2.style('bottom', formatPercent(scale(value[1])));\n            divRange.style('top', top + '%');\n            drag.on('drag', onDragVertical);\n          } else {\n            handle1.style('bottom', formatPercent(scale(value)));\n            drag.on('drag', onDragVertical);\n          }\n\n          sliderLength = parseInt(div.style('height'), 10);\n        }\n\n        if (axis) {\n          createAxis(div);\n        }\n\n        function createAxis(dom) {\n          // Create axis if not defined by user\n          if (typeof axis === 'boolean') {\n            axis = d3.svg\n              .axis()\n              .ticks(Math.round(sliderLength / 100))\n              .tickFormat(tickFormat)\n              .orient(orientation === 'horizontal' ? 'bottom' : 'right');\n          }\n\n          // Copy slider scale to move from percentages to pixels\n          axisScale = scale.ticks\n            ? scale.copy().range([0, sliderLength])\n            : scale.copy().rangePoints([0, sliderLength], 0.5);\n          axis.scale(axisScale);\n\n          // Create SVG axis container\n          var svg = dom\n            .append('svg')\n            .classed('d3-slider-axis d3-slider-axis-' + axis.orient(), true)\n            .on('click', stopPropagation);\n\n          var g = svg.append('g');\n\n          // Horizontal axis\n          if (orientation === 'horizontal') {\n            svg.style('margin-left', -margin + 'px');\n\n            svg.attr({\n              width: sliderLength + margin * 2,\n              height: margin\n            });\n\n            if (axis.orient() === 'top') {\n              svg.style('top', -margin + 'px');\n              g.attr('transform', 'translate(' + margin + ',' + margin + ')');\n            } else {\n              // bottom\n              g.attr('transform', 'translate(' + margin + ',0)');\n            }\n          } else {\n            // Vertical\n\n            svg.style('top', -margin + 'px');\n\n            svg.attr({\n              width: margin,\n              height: sliderLength + margin * 2\n            });\n\n            if (axis.orient() === 'left') {\n              svg.style('left', -margin + 'px');\n              g.attr('transform', 'translate(' + margin + ',' + margin + ')');\n            } else {\n              // right\n              g.attr('transform', 'translate(' + 0 + ',' + margin + ')');\n            }\n          }\n\n          g.call(axis);\n        }\n\n        function onClickHorizontal() {\n          if (toType(value) != 'array') {\n            var pos = Math.max(\n              0,\n              Math.min(sliderLength, d3.event.offsetX || d3.event.layerX)\n            );\n            moveHandle(\n              scale.invert\n                ? stepValue(scale.invert(pos / sliderLength))\n                : nearestTick(pos / sliderLength)\n            );\n          }\n        }\n\n        function onClickVertical() {\n          if (toType(value) != 'array') {\n            var pos =\n              sliderLength -\n              Math.max(\n                0,\n                Math.min(sliderLength, d3.event.offsetY || d3.event.layerY)\n              );\n            moveHandle(\n              scale.invert\n                ? stepValue(scale.invert(pos / sliderLength))\n                : nearestTick(pos / sliderLength)\n            );\n          }\n        }\n\n        function onDragHorizontal() {\n          if (d3.event.sourceEvent.target.id === 'handle-one') {\n            active = 1;\n          } else if (d3.event.sourceEvent.target.id == 'handle-two') {\n            active = 2;\n          }\n          var pos = Math.max(0, Math.min(sliderLength, d3.event.x));\n          moveHandle(\n            scale.invert\n              ? stepValue(scale.invert(pos / sliderLength))\n              : nearestTick(pos / sliderLength)\n          );\n        }\n\n        function onDragVertical() {\n          if (d3.event.sourceEvent.target.id === 'handle-one') {\n            active = 1;\n          } else if (d3.event.sourceEvent.target.id == 'handle-two') {\n            active = 2;\n          }\n          var pos =\n            sliderLength - Math.max(0, Math.min(sliderLength, d3.event.y));\n          moveHandle(\n            scale.invert\n              ? stepValue(scale.invert(pos / sliderLength))\n              : nearestTick(pos / sliderLength)\n          );\n        }\n\n        function stopPropagation() {\n          d3.event.stopPropagation();\n        }\n      });\n    }\n\n    // Move slider handle on click/drag\n    function moveHandle(newValue) {\n      var currentValue =\n          toType(value) == 'array' && value.length == 2\n            ? value[active - 1]\n            : value,\n        oldPos = formatPercent(scale(stepValue(currentValue))),\n        newPos = formatPercent(scale(stepValue(newValue))),\n        position = orientation === 'horizontal' ? 'left' : 'bottom';\n      if (oldPos !== newPos) {\n        if (toType(value) == 'array' && value.length == 2) {\n          value[active - 1] = newValue;\n          if (d3.event) {\n            dispatch.slide(d3.event, value);\n          }\n        } else {\n          if (d3.event) {\n            dispatch.slide(\n              d3.event.sourceEvent || d3.event,\n              (value = newValue)\n            );\n          }\n        }\n\n        if (value[0] >= value[1]) return;\n        if (active === 1) {\n          if (toType(value) == 'array' && value.length == 2) {\n            position === 'left'\n              ? divRange.style('left', newPos)\n              : divRange.style('bottom', newPos);\n          }\n\n          if (animate) {\n            handle1\n              .transition()\n              .styleTween(position, function () {\n                return d3.interpolate(oldPos, newPos);\n              })\n              .duration(typeof animate === 'number' ? animate : 250);\n          } else {\n            handle1.style(position, newPos);\n          }\n        } else {\n          var width = 100 - parseFloat(newPos);\n          var top = 100 - parseFloat(newPos);\n\n          position === 'left'\n            ? divRange.style('right', width + '%')\n            : divRange.style('top', top + '%');\n\n          if (animate) {\n            handle2\n              .transition()\n              .styleTween(position, function () {\n                return d3.interpolate(oldPos, newPos);\n              })\n              .duration(typeof animate === 'number' ? animate : 250);\n          } else {\n            handle2.style(position, newPos);\n          }\n        }\n      }\n    }\n\n    // Calculate nearest step value\n    function stepValue(val) {\n      if (val === scale.domain()[0] || val === scale.domain()[1]) {\n        return val;\n      }\n\n      var alignValue = val;\n      if (snap) {\n        alignValue = nearestTick(scale(val));\n      } else {\n        var valModStep = (val - scale.domain()[0]) % step;\n        alignValue = val - valModStep;\n\n        if (Math.abs(valModStep) * 2 >= step) {\n          alignValue += valModStep > 0 ? step : -step;\n        }\n      }\n\n      return alignValue;\n    }\n\n    // Find the nearest tick\n    function nearestTick(pos) {\n      var ticks = scale.ticks ? scale.ticks() : scale.domain();\n      var dist = ticks.map(function (d) {\n        return pos - scale(d);\n      });\n      var i = -1,\n        index = 0,\n        r = scale.ticks ? scale.range()[1] : scale.rangeExtent()[1];\n      do {\n        i++;\n        if (Math.abs(dist[i]) < r) {\n          r = Math.abs(dist[i]);\n          index = i;\n        }\n      } while (dist[i] > 0 && i < dist.length - 1);\n\n      return ticks[index];\n    }\n\n    // Return the type of an object\n    function toType(v) {\n      return {}.toString\n        .call(v)\n        .match(/\\s([a-zA-Z]+)/)[1]\n        .toLowerCase();\n    }\n\n    // Getter/setter functions\n    slider.min = function (_) {\n      if (!arguments.length) return min;\n      min = _;\n      return slider;\n    };\n\n    slider.max = function (_) {\n      if (!arguments.length) return max;\n      max = _;\n      return slider;\n    };\n\n    slider.step = function (_) {\n      if (!arguments.length) return step;\n      step = _;\n      return slider;\n    };\n\n    slider.animate = function (_) {\n      if (!arguments.length) return animate;\n      animate = _;\n      return slider;\n    };\n\n    slider.orientation = function (_) {\n      if (!arguments.length) return orientation;\n      orientation = _;\n      return slider;\n    };\n\n    slider.axis = function (_) {\n      if (!arguments.length) return axis;\n      axis = _;\n      return slider;\n    };\n\n    slider.margin = function (_) {\n      if (!arguments.length) return margin;\n      margin = _;\n      return slider;\n    };\n\n    slider.value = function (_) {\n      if (!arguments.length) return value;\n      if (value) {\n        moveHandle(stepValue(_));\n      }\n      value = _;\n      return slider;\n    };\n\n    slider.snap = function (_) {\n      if (!arguments.length) return snap;\n      snap = _;\n      return slider;\n    };\n\n    slider.scale = function (_) {\n      if (!arguments.length) return scale;\n      scale = _;\n      return slider;\n    };\n\n    d3.rebind(slider, dispatch, 'on');\n\n    return slider;\n  };\n});\n\n\n\n// WEBPACK FOOTER //\n// src/d3.slider/d3.slider.js"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtpDA;;;;;;ACFA;AACA;;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AACA;AAwEA;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClEA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AACA;AAwBA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClIA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAYA;AACA;;;;;;;ACtQA;;;;;AAKA;AACA;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAqCA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAEA;AANA;AAQA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;;;;;;;ACjSA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhDA;AACA;AAkDA;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC52CA;AACA;AACA;;;;AAIA;;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AAGA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAyBA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AANA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AAAA;AAAA;AAKA;AACA;AACA;;;AAGA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxfA;AACA;AACA;;;;;;;AAMA;AACA;;;;;;;ACTA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAzDA;AACA;AA2DA;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AAWA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjTA;AACA;AACA;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1HA;AACA;AACA;AACA;AAQA;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;;;;;ACphBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AAKA;;;;;;ACjNA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AA0DA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;;;;;;;ACrLA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1CA;AACA;AACA;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjCA;AACA;AACA;;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5CA;AACA;AACA;;;;;;AAKA;AACA;;;;;;;ACRA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AAEA;AACA;AACA;;;;;;;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;;;;;;AAMA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACl3BA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;;;;;;;ACxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACx5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AACA;AAiCA;AACA;AACA;;;;;;;ACnDA;AACA;AACA;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtGA;AACA;AAwGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;;;;;;;AClKA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBA;AACA;AAyBA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtFA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AACA;AA6BA;AACA;AACA;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AACA;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AACA;AAiCA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAkzLA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxHA;AACA;AA0HA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;;;;;;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1HA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAxBA;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxHA;AACA;AA0HA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;;;;;;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAuBA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzRA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1TA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBA;AAsBA;AACA;AACA;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAiBA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhCA;AACA;AAkCA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3CA;AACA;AACA;AACA;AAGA;AACA;AAGA;;;;;;;ACVA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AACA;AAIA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;ACrzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9EA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACblJA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AAEA;AACA;AAQA;AAOA;AACA;AAEA;AACA;AAQA;AAIA;AAGA;AACA;AAEA;AACA;AAKA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;;;;;;;ACnBA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AADA;AAOA;;;;;;AChCA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AADA;AAIA;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;ACrWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACRA;AACA;AACA;AACA;AACA;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AAWA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AASA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAQA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AAEA;;;;;;;AChJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AACA;AACA;AAMA;AAOA;AACA;AACA;AACA;AAMA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AACA;AACA;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AAKA;AACA;AACA;AACA;AAIA;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAGA;;;;;;;AC5RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClDA;AACA;AACA;AAMA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnDA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAQA;AACA;AACA;AACA;AAOA;AACA;AACA;AAQA;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;ACtXA;AACA;AACA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1CA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AAQA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AC/MA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC9EA;AACA;AAqEA;AAtEA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AACA;AAqBA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;;;;;;;AC3DA;AACA;AACA;;;;;;;;;;;;;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AAunHA;AACA;AAqHA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;;;;;;;ACxMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAirGA;AACA;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAkBA;AACA;AACA;AA5CA;AA8CA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAlBA;AAoBA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;;;;;;;ACx8BA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AACA;AAmCA;AACA;AACA;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7CA;AACA;AA+CA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAOA;AACA;AACA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;;;;;;;ACvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AACA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAJA;AAMA;AACA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA;AACA;AAiCA;AACA;AACA;AACA;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AACA;AAqCA;AACA;AACA;AACA;AAHA;AACA;AAKA;AACA;AACA;AACA;;;;;;;AC7EA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AASA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;;;;;;AC/FA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;;;;;;;AC9IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChCA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAFA;AADA;AAOA;AAEA;AAEA;AACA;AADA;AADA;AAMA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AAAA;AACA;AAMA;AACA;AAGA;AAHA;AAUA;AACA;AACA;AAUA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AAJA;AAcA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AAHA;AAQA;AACA;AACA;AAVA;AAcA;AACA;AACA;AAhBA;AACA;AAsBA;AACA;AACA;AACA;AAIA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAKA;AACA;AACA;AACA;AASA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChrCA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AAGA;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjBA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAQA;AAEA;AAEA;AACA;AADA;AADA;AAMA;AACA;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAYA;;;;;;;ACxBA;AACA;AACA;AAeA;AAMA;AACA;AACA;AAIA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAWA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAUA;AACA;AAMA;AANA;AACA;AAQA;AACA;AACA;AAAA;AACA;AAMA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;;;;;;;AClKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAJA;AACA;AAmBA;AACA;AACA;AAiBA;AACA;AACA;AACA;AAiBA;AACA;AAiBA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AAOA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAcA;AAGA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;ACzVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAMA;AACA;AAGA;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;ACpNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpIA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzFA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AAMA;AACA;AACA;AACA;AAMA;AAMA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AAKA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AAIA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AACA;AAIA;AAOA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AAQA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;;;;;;;AC7IA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAGA;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AClPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AAIA;AACA;AAIA;AACA;AAQA;AACA;AASA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAQA;AACA;AAQA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAGA;AACA;AACA;AACA;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AAcA;AACA;AAcA;AACA;AAcA;AACA;AAIA;AACA;AAIA;AACA;AAWA;AACA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;;;;;;;AC3GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAFA;AAIA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AACA;AAIA;;;;;;ACpIA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;;;;;;;ACtDA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAGA;AACA;AACA;AAIA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAKA;AACA;AAEA;AACA;;;;;;;AC7KA;AACA;AACA;AACA;AAKA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;;;;;;;ACrCA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAKA;AACA;AACA;AACA;AAKA;AAIA;AACA;AAEA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAUA;AACA;AAKA;AAIA;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AAIA;AAOA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;;;;;;;AClGA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAUA;AACA;AAKA;AACA;AAIA;AACA;AAUA;AAKA;;;;;;AC5FA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;ACpCA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAeA;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;;ACrBA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAKA;AACA;AACA;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAQA;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACvBA;AACA;AACA;AACA;AACA;AAUA;AACA;AAWA;AACA;AAOA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACrCA;AAKA;AACA;AAQA;AACA;AAMA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;;;;;;;ACpCA;AACA;AACA;AACA;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;ACpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;;;;;;;AC5FA;AACA;AACA;AAOA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AAOA;AACA;AAOA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5GA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAMA;AACA;AAEA;AACA;AACA;AAMA;AAEA;AACA;AAMA;;;;;;ACjHA;AACA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AAXA;AAaA;AAGA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5IA;AACA;AACA;AACA;AAQA;AACA;AACA;AAIA;AACA;AAGA;AACA;AACA;AAEA;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACnCA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAOA;AAGA;AACA;AACA;AACA;AACA;AAeA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAEA;AACA;AACA;AACA;;;;;;;AClEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAOA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACjpKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACZA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACZA;AACA;AACA;;;;;;;;;AASA;AACA;;;AAGA;AACA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AASA;AACA;AAiBA;AACA;AA5BA;AAAA;AAAA;AAiCA;AACA;AACA;AACA;AApCA;AAAA;AAAA;AAAA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnEA;AAqEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AATA;AAWA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AAlCA;AAAA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAnNA;AAAA;AAsNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;;;;;;;ACpQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;ACtsourceRoot":""}